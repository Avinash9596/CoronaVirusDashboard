{"version":3,"sources":["viruslogo.png","dataContext.js","components/ColumnGraph.js","components/WorldPieChart.js","components/CoronaMap.js","services/coronadata.service.js","components/tableData.js","components/AffectedCountries.js","components/Rates.js","services/corona.service.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DataContext","React","createContext","drilldown","Highcharts","indexObject","0","1","2","ColumnGraph","state","options","activeIndex","this","structureData","index","data","context","actualData","total","i","DaysInMonths","nameOfMonths","3","4","5","6","7","8","9","10","11","obj","month","prevdata","ddrObject","daysdata","daysPrevData","forEach","element","Date","toISOString","split","push","name","toString","y","length","setState","chart","type","height","title","text","presentRegion","subtitle","xAxis","yAxis","legend","enabled","credits","plotOptions","series","borderWidth","dataLabels","format","accessibility","announceNewData","tooltip","formatter","point","toLocaleString","useHTML","console","log","className","onTabChange","e","header","highcharts","Component","contextType","nf","Intl","NumberFormat","WorldPieChart","activecases","parseFloat","TotalConfirmed","toFixed","color","TotalDeaths","TotalRecovered","valueSuffix","pie","size","cursor","showInLegend","innerSize","colorByPoint","NewConfirmed","NewRecovered","NewDeaths","style","borderLeft","fontSize","textAlign","fontWeight","marginTop","props","columnData","highchartsMap","CoronoMap","map","india","mapNavigation","headerFormat","pointFormat","shared","mapData","mapdata","borderColor","nullColor","states","hover","world","joinBy","mapOptions","constructorType","getData","regionName","a","fetch","json","getDistrictWiseData","tableData","getDistrictData","undefined","sessionStorage","getItem","JSON","parse","DistrictData","districtdata","Object","keys","districtData","x","active","deaths","deceased","recovered","cases","confirmed","flag","tempdistrictObj","presentState","setItem","stringify","document","querySelector","scrollIntoView","getFilteredData","searchIn","tempObj","toLowerCase","includes","districtTable","position","display","top","marginLeft","paddingLeft","onChange","target","value","placeholder","districttableheader","id","emptyMessage","responsive","border","paginator","rows","field","body","dateTemplate","rowData","sortable","onRowClick","event","rowHover","textdecoration","textDecoration","changes","changeinConfirmed","changeinActive","changeinRecovered","changeinDeaths","AffectedCountries","sortData","affectedcountries","sort","b","splice","key","float","percentage","showValue","Rates","Consumer","highestactive","highestrecovered","highestdeaths","active_percentage","background","rec_percentage","death_percentage","coronoService","structuredData","countries","parseInt","code","ref_country_codes","country","alpha3","lat","lon","err","App","mybutton","getElementById","showRegionData","region","loading","is_visible","scroll","addEventListener","toggleVisibility","window","pageYOffset","clear","Data","scrollTo","behavior","pageData","loader","regionnavigationStyleindia","regionnavigationStyleWorld","padding","href","src","require","alt","width","val","onClick","borderBottom","Provider","scrollToTop","backgroundColor","margin","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.24f4ac45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/viruslogo.3d9b68c5.png\";","import React from 'react'\n\n const DataContext = React.createContext();\n\nexport default DataContext;","import React from 'react';\r\nimport Highcharts from 'highcharts/highcharts';\r\nimport drilldown from 'highcharts/modules/drilldown.js'\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { TabView,TabPanel } from 'primereact/tabview';\r\n\r\nimport DataContext from \"./../dataContext\";\r\n\r\ndrilldown(Highcharts);\r\n\r\nconst indexObject={0:'confirmed',1:\"recovered\",2:\"deaths\"};\r\n\r\nclass ColumnGraph extends React.Component\r\n{\r\n    static contextType = DataContext;\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n        options: {},\r\n        activeIndex:0\r\n       }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.structureData(0);\r\n    }\r\n\r\n    async structureData(index)\r\n    { \r\n      try{\r\n          \r\n        let data =this.context.actualData.total[indexObject[index]];\r\n\r\n        let i=0,DaysInMonths =[31,29,31,30,31,30,31,31,30,31,30,31];\r\n        let nameOfMonths = {0:\"Jan\",1:\"Feb\",2:\"March\",3:\"Apr\",4:\"May\",5:\"Jun\",6:\"Jul\",7:\"Aug\",8:\"Sept\",9:\"Oct\",10:\"Nov\",11:\"Dec\"}\r\n\r\n        let obj =[],month=0,prevdata=0,ddrObject=[],daysdata=[],daysPrevData=0;\r\n\r\n\r\n        data.forEach((element,index) => {\r\n            month = new Date(element[0]).toISOString().split(\"-\")[1];\r\n            daysPrevData = 0;\r\n\r\n            if(index>0)\r\n                daysPrevData+=data[index-1][1];\r\n        \r\n            daysdata.push([new Date(element[0]).toISOString().split(\"-\")[2].split(\"T\")[0],element[1]-daysPrevData]);\r\n\r\n            if(new Date(element[0]).toISOString().split(\"-\")[2].split(\"T\")[0] == DaysInMonths[month-1]){\r\n\r\n                ddrObject.push({name:nameOfMonths[month-1],\"id\":i.toString(),\"data\":daysdata});\r\n                daysdata=[];\r\n                if(i>0) prevdata+=obj[i-1].y;\r\n\r\n                obj[i]={name:nameOfMonths[month-1],\"y\":element[1]-prevdata,drilldown:i.toString()};\r\n\r\n                i++;\r\n            }\r\n            else if(index === data.length-1){\r\n                prevdata+=obj[i-1].y;\r\n                ddrObject.push({name:nameOfMonths[month-1],\"id\":i.toString(),\"data\":daysdata});\r\n                daysdata=[];\r\n                obj[i] = {name:nameOfMonths[month-1],\"y\":element[1]-prevdata,drilldown:i.toString()};\r\n            }      \r\n        });\r\n\r\n        await this.setState({\r\n            activeIndex:index,\r\n            options: {\r\n                chart: {\r\n                    type: 'column',\r\n                    height:365\r\n                },\r\n                title: {\r\n                    text: this.context.presentRegion+' Coronovirus Cases, 2020'\r\n                },\r\n                subtitle: {\r\n                    text: 'Monthly/Daily Cases'\r\n                },\r\n                xAxis: {\r\n                    type: 'category',\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Cases'\r\n                    }\r\n                },\r\n                legend: {\r\n                    enabled: false\r\n                },\r\n                credits:{\r\n                    enabled:false\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        borderWidth: 0,\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '{point.y}'\r\n                        }\r\n                    }\r\n                },\r\n                accessibility: {\r\n                    announceNewData: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled:true,\r\n                    formatter: function() {\r\n                        return this.series.name+\" <b>\"+this.point.name+\"</b><br/>\" +indexObject[index]+\":<b>\"+(this.point.y).toLocaleString()+\"</b>\"\r\n                    },\r\n                     useHTML:true\r\n                },\r\n            \r\n                series: [\r\n                    {\r\n                       name:\"Month\", \r\n                        data:obj,\r\n                    }\r\n                ],\r\n                drilldown: {\r\n                    name:\"Dates\",\r\n                    series: ddrObject\r\n                }\r\n            }\r\n        });\r\n       }\r\n       catch(err)\r\n       {\r\n           console.log(err);\r\n       }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"card\">  \r\n               <div className=\"card-body column\">\r\n                    <TabView  activeIndex={this.state.activeIndex} onTabChange={(e)=>{if(e.index===this.state.activeIndex) return;this.structureData(e.index)}}>\r\n                        <TabPanel header=\"Confirmed\">\r\n                           <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                        </TabPanel>\r\n                        <TabPanel header=\"Recovered\">\r\n                           <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                        </TabPanel>\r\n                        <TabPanel header=\"Deaths\">\r\n                           <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                        </TabPanel>\r\n                    </TabView>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ColumnGraph;","import React from 'react';\r\nimport Highcharts from 'highcharts/highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport ColumnGraph from './ColumnGraph';\r\n\r\nimport DataContext from './../dataContext';\r\n\r\nconst nf = new Intl.NumberFormat();\r\n\r\nclass WorldPieChart extends React.Component{\r\n  static contextType=DataContext;\r\n\r\n  constructor()\r\n  {\r\n    super();\r\n    this.state={options:{},data:[]};\r\n\r\n  }\r\n  \r\n  componentDidMount()\r\n  {\r\n    this.structureData();\r\n  }\r\n\r\n  async structureData()\r\n  {\r\n    try{\r\n     let  obj =[{\"name\": \"Active\",\"data\":this.context.data.activecases,\"y\": parseFloat(((this.context.data.activecases/this.context.data.TotalConfirmed)*100).toFixed(2))},{color:\"rgb(239, 60, 60)\",\"name\":\"Deaths\",\"data\":this.context.data.TotalDeaths,\"y\":parseFloat(((this.context.data.TotalDeaths/this.context.data.TotalConfirmed)*100).toFixed(2))},{\"name\":\"Recovered\",\"data\":this.context.data.TotalRecovered,\"y\":parseFloat(((this.context.data.TotalRecovered/this.context.data.TotalConfirmed)*100).toFixed(2))}];\r\n     await this.setState({\r\n      options:{\r\n        chart: {\r\n            type: 'pie',\r\n            height:'270',\r\n          },\r\n          title: {\r\n            text: this.context.presentRegion +' Coronovirus Cases'\r\n          },    \r\n          tooltip: {\r\n            formatter: function() {\r\n              return this.point.name+\":<b>\"+this.point.y+\"%</b>\"\r\n            },\r\n          },\r\n          accessibility: {\r\n            point: {\r\n              valueSuffix: '%'\r\n            }\r\n          },\r\n          plotOptions: {\r\n            pie: {\r\n              size:'104%',\r\n              cursor: 'pointer',\r\n              dataLabels: {\r\n                enabled: false,\r\n                format: '{point.y}%'\r\n              },\r\n              showInLegend: false\r\n            }\r\n          },\r\n          credits: {\r\n            enabled: false\r\n        },\r\n          series: [{\r\n            innerSize: '58%',\r\n            name: 'Cases',\r\n            colorByPoint: true,\r\n            data: obj,\r\n          }]\r\n      },\r\n      data:[\r\n        nf.format(this.context.data.TotalConfirmed),\r\n        nf.format(this.context.data.NewConfirmed),\r\n        nf.format(this.context.data.TotalRecovered),\r\n        nf.format(this.context.data.NewRecovered),\r\n        nf.format(this.context.data.TotalDeaths),\r\n        nf.format(this.context.data.NewDeaths),\r\n        nf.format(this.context.data.TotalConfirmed-this.context.data.TotalRecovered-this.context.data.TotalDeaths),\r\n        obj[0][\"y\"], // active percenatage\r\n        obj[1][\"y\"], // deaths percentage\r\n        obj[2][\"y\"]  // recovered percenatge\r\n      ]\r\n     });\r\n    }\r\n    catch(err){\r\n     console.log(err);\r\n    }    \r\n  }\r\n\r\n\r\n  render() {\r\n      return(     \r\n        <div>\r\n          <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-2 col-md-6\">\r\n               <div className=\"card casescountcard\" style={{borderLeft:'4px solid rgb(124, 181, 236)'}}>\r\n                  <div className='card-header'>\r\n                     <i className=\"fa fa-users\" style={{fontSize:'25px',color:\"rgb(124, 181, 236)\"}}></i><br></br>\r\n                     <span style={{textAlign:\"center\",fontSize:'24px',fontWeight:'500'}}>{this.state.data[0]}</span>   \r\n                  </div>\r\n                  <div className=\"card-body\" style={{marginTop:\"-24px\"}}><span>Total Confirmed</span></div>\r\n               </div>  \r\n            </div>\r\n            <div className=\"col-xl-2 col-md-6 \">\r\n              <div className=\"card casescountcard\" style={{borderLeft:'4px solid rgb(124, 181, 236)'}}>\r\n                  <div className='card-header'>\r\n                    <i className=\"fa fa-users\" style={{fontSize:'25px',color:\"rgb(124, 181, 236)\"}}></i><br></br>\r\n                    <span style={{textAlign:\"center\",fontSize:'24px',fontWeight:'500'}}>{this.state.data[1]}</span>\r\n                  </div>  \r\n                  <div className=\"card-body\" style={{marginTop:\"-24px\"}}>New Confirmed</div>\r\n               </div> \r\n            </div>\r\n             <div className=\"col-xl-2 col-md-6\">\r\n               <div className=\"card casescountcard\" style={{borderLeft:'4px solid #7aed7a'}}>\r\n                  <div className='card-header'>\r\n                    <i className=\"fa case-icon fa-inverse fa-child\" style={{fontSize:'25px',color:\"#7aed7a\",fontWeight:\"bold\"}}></i><br></br>\r\n                    <span style={{textAlign:\"center\",fontSize:'24px',fontWeight:'500'}}>{this.state.data[2]}</span>\r\n                  </div>\r\n                  <div className=\"card-body\" style={{marginTop:\"-24px\"}}>Total Recovered</div>\r\n               </div>  \r\n              </div>\r\n             <div className=\"col-xl-2 col-md-6\">\r\n              <div className=\"card casescountcard\" style={{borderLeft:'4px solid #7aed7a'}}>\r\n                  <div className='card-header'>\r\n                     <i className=\"fa case-icon fa-inverse fa-child\" style={{fontSize:'25px',color:\"#7aed7a\",fontWeight:\"bold\"}}></i><br></br>\r\n                     <span style={{textAlign:\"center\",fontSize:'24px',fontWeight:'500'}}>{this.state.data[3]}</span>        \r\n                  </div>\r\n                  <div className=\"card-body\" style={{marginTop:\"-24px\"}}>New Recovered</div>\r\n               </div> \r\n              </div>\r\n            \r\n            <div className=\"col-xl-2 col-md-6\">\r\n               <div className=\"card casescountcard\" style={{borderLeft:'4px solid #ef3c3c'}}>\r\n                  <div className='card-header'>\r\n                    <i className=\"fas fa-heart-broken\" style={{fontSize:'25px',color:\"#ef3c3c\"}}></i><br></br>\r\n                    <span style={{textAlign:\"center\",fontSize:'23px',fontWeight:'500'}}>{this.state.data[4]}</span>\r\n                  </div>\r\n                  <div className=\"card-body\" style={{marginTop:\"-24px\"}}>Total Deaths</div>\r\n               </div> \r\n            </div> \r\n            <div className=\"col-xl-2 col-md-6\">\r\n              <div className=\"card casescountcard\" style={{borderLeft:'4px solid #ef3c3c'}}>\r\n                 <div className='card-header'>\r\n                    <i className=\"fas fa-heart-broken\" style={{fontSize:'25px',color:\"#ef3c3c\"}}></i><br></br> \r\n                    <span style={{textAlign:\"center\",fontSize:'23px',fontWeight:'500'}}>{this.state.data[5]}</span>\r\n                 </div>   \r\n                  <div className=\"card-body\" style={{marginTop:\"-24px\"}}>New Deaths</div>\r\n               </div> \r\n            </div>    \r\n          </div>\r\n          \r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-3 col-md-12\">\r\n              <div className=\"card \">\r\n                 <div className=\"card-body\">\r\n                   <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                 </div>\r\n               <div className=\"table-responsive\">\r\n                <table className=\"table align-items-center\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style={{fontSize:\"14px\",fontWeight:\"500\"}}><i className=\"fa fa-circle mr-2\" style={{color: \"rgb(124, 181, 236)\"}}></i> Active</td>\r\n                      <td>{this.state.data[6]}</td>\r\n                      <td>{this.state.data[7]}%</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style={{fontSize:\"14px\",fontWeight:\"500\"}}><i className=\"fa fa-circle mr-2\" style={{color: \"rgb(144, 237, 125)\"}}></i>Recovered</td>\r\n                      <td>{this.state.data[2]}</td>\r\n                      <td>{this.state.data[9]}%</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style={{fontSize:\"14px\",fontWeight:\"500\"}}><i className=\"fa fa-circle mr-2\" style={{color: \"rgb(239, 60, 60)\"}}></i>Deaths</td>\r\n                      <td>{this.state.data[4]}</td>\r\n                      <td>{this.state.data[8]}%</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n           \r\n            <div className=\"col-xl-9 col-md-12\">\r\n              <ColumnGraph  presentRegion={this.props.presentRegion} data={this.props.columnData}/>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default WorldPieChart;","import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\r\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\n\r\nimport DataContext from './../dataContext';\r\n\r\nhighchartsMap(Highcharts);\r\n\r\n\r\nvar data=[];\r\nclass CoronoMap extends React.Component{\r\n  static contextType = DataContext;\r\n\r\n  constructor()\r\n  {\r\n    super();\r\n    data=[];\r\n    this.state={options:{}};\r\n  }\r\n\r\n  componentDidMount(){\r\n    let options={};\r\n    if(this.context.presentRegion === 'India')\r\n    options = {\r\n      chart: {\r\n        map:india,\r\n        height:320\r\n      },\r\n      title: {\r\n        text: this.context.presentRegion+\" Map Plot with Cases <span className='fa fa-expand'></span>\",\r\n        useHTML:true\r\n      },      \r\n      credits:{\r\n        enabled:false\r\n      },\r\n      mapNavigation: {\r\n        enabled: true,\r\n        \r\n      },\r\n      tooltip: {\r\n        headerFormat: '{point.key}<br>',\r\n        pointFormat: 'Cases : <b>{point.value}</b>',\r\n        shared: true\r\n    },\r\n      series: [\r\n        {\r\n          mapData: india,\r\n          data: this.context.data.mapdata,\r\n          name: this.context.presentRegion === 'World'?'Countries':'States',\r\n          borderColor: '#A0A0A0',\r\n          nullColor: 'rgba(200, 200, 200, 0.3)',\r\n         showInLegend: false,\r\n          states: {\r\n            hover: {\r\n              color: \"red\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n    else\r\n       options = {\r\n         chart: {\r\n           map:world,\r\n           height:320\r\n      },\r\n      title: {\r\n        text: this.context.presentRegion+\" Map Plot with Cases\"\r\n      },\r\n      \r\n      credits:{\r\n        enabled:false\r\n      },\r\n      mapNavigation: {\r\n        enabled: true,\r\n      },\r\n      tooltip: {\r\n        headerFormat: '{point.key}<br>',\r\n        pointFormat: 'Cases : <b>{point.value}</b>',\r\n        shared: true\r\n    },\r\n      series: [\r\n        {\r\n          data: this.context.data.mapdata,\r\n          joinBy: [\"iso-a3\", \"alpha3\"],\r\n          name: this.context.presentRegion === 'World'?'Countries':'States',\r\n          borderColor: '#A0A0A0',\r\n          nullColor: 'rgba(200, 200, 200, 0.3)',\r\n          showInLegend: false,\r\n          states: {\r\n            hover: {\r\n              color: \"red\"\r\n            }\r\n          }\r\n        }\r\n      ]};\r\n     this.setState({\r\n      mapOptions: options\r\n  });\r\n}\r\n\r\n\r\n  render(){\r\n      return (\r\n        <div className=\"col-xl-6 col-md-12\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <HighchartsReact constructorType ={'mapChart'} highcharts={Highcharts} options={this.state.mapOptions} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nexport default CoronoMap;","const data={\n \n    getData:async function(regionName){\n        const WorldDataApi = \"https://nprelease.indiatimes.com/ncov19/trend_data_toi.json\"; //API TO GET WORLD DATA\n        const IndiaDataApi = \"https://nprssfeeds.indiatimes.com/ncov19/trend_data_india_toi.json\"; //API TO GET INDIA DATA\n\n        try{\n            return await(await fetch(regionName===\"India\"?IndiaDataApi:WorldDataApi)).json();\n        }\n        catch(err){\n            console.log(err);\n        }\n    },\n\n    //TO GET DISCTRICT DATA CORRESPONDING TO ALL STATES IN CASE OF 'INDIA'\n    getDistrictWiseData:async function(){\n        const api = \"https://api.covid19india.org/state_district_wise.json\";\n        \n        try{\n            return await(await fetch(api)).json();\n        }\n        catch(err){\n            console.log(err);\n        }\n    }\n\n}\n\nexport default data;","import React from 'react';\r\n\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport DataContext from './../dataContext';\r\n\r\n//service to get districts data\r\nimport DistrictData from '../services/coronadata.service';\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n  static contextType = DataContext;\r\n\r\n    constructor()\r\n    {\r\n      super();\r\n      this.state={data:[],districtData:[]};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.getData();\r\n    }\r\n\r\n    async getData(){\r\n      try{\r\n        //assign data\r\n        await this.setState({data:this.context.data.tableData,tempObj:this.context.data.tableData});\r\n      }\r\n      catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    getDistrictData = async(data) => {\r\n\r\n      try{\r\n\r\n        if(this.context.presentRegion === \"World\") return;    \r\n        //for in case of India \r\n        let obj =[];\r\n        let districtdata = sessionStorage.getItem(\"districtdata\")!= undefined?JSON.parse(sessionStorage.getItem(\"districtdata\")):await DistrictData.getDistrictWiseData();\r\n\r\n        Object.keys(districtdata[data].districtData).forEach(x=>{    \r\n        obj.push({name:x,active:districtdata[data].districtData[x].active,deaths:districtdata[data].districtData[x].deceased,recovered:districtdata[data].districtData[x].recovered,cases:districtdata[data].districtData[x].confirmed})    \r\n        })\r\n\r\n        await this.setState({districtData:obj,flag:true,tempdistrictObj:obj,presentState:data+\" - District Wise Status\"})\r\n\r\n        if(sessionStorage.getItem(\"districtdata\") == undefined)  \r\n            sessionStorage.setItem(\"districtdata\",JSON.stringify(districtdata));\r\n\r\n        // scroll to the specified district table\r\n        var element = document.querySelector(\"#district\");\r\n        element.scrollIntoView();\r\n      }\r\n      catch(err){\r\n          console.log(err);\r\n      }\r\n    }\r\n\r\n    //GLOBAL SEARCH FUNCTIONALITY\r\n    getFilteredData=async(name,searchIn)=>{\r\n            let obj =[];\r\n            try{\r\n            if(searchIn !== 'district'){\r\n                this.state.tempObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({data:obj})\r\n                return;\r\n            }\r\n            else{\r\n                this.state.tempdistrictObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({districtData:obj})\r\n            }\r\n            }\r\n            catch(err){console.log(err);}\r\n    }\r\n\r\n    render(){\r\n      \r\n        const name = this.context.presentRegion === \"World\"?\"Country\":\"State\";\r\n        let districtTable;\r\n            \r\n        const header = <div className=\"headerdiv\">\r\n         <span className=\"headertext\">{name} Wise Status</span>\r\n         <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n           <span className=\"p-input-icon-left\"><i className=\"pi pi-search\" style={{fontSize:\"1rem\",position:\"absolute\",display:\"inline-block\",top:\"20px\",marginLeft:\"0.5%\"}}></i>\r\n             <InputText type=\"search\" style={{paddingLeft:\"1.8rem\"}} onChange={(e)=>this.getFilteredData(e.target.value,\"\")} placeholder=\"Search By Place Name\" />\r\n           </span>\r\n         </div>\r\n        </div>\r\n\r\n        const districttableheader = <div className=\"headerdiv\">\r\n        <span className=\"headertext\">{this.state.presentState}</span>\r\n        <div  className=\"col-sm-12 col-xl-3\"  className=\"p-datatable-globalfilter-container\">\r\n            <span className=\"p-input-icon-left\"><i className=\"pi pi-search\" style={{fontSize:\"1rem\",position:\"absolute\",display:\"inline-block\",top:\"20px\",marginLeft:\"0.5%\"}}></i>\r\n               <InputText type=\"search\" style={{paddingLeft:\"1.8rem\"}} onChange={(e)=>this.getFilteredData(e.target.value,\"district\")} placeholder=\"Search By Place Name\" />\r\n            </span>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        if(this.context.presentRegion === 'India' && this.state.flag){\r\n         districtTable = \r\n         <div className=\"datatable\" id=\"districttable\">\r\n         <DataTable id=\"district\" className=\"p-datatable-places\" emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header={districttableheader} value={this.state.districtData}  paginator rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <span style={{fontWeight:\"bold\"}}>{rowData.name}</span>}} header=\"District\" sortable={true} />\r\n         <Column field=\"cases\"  header=\"Confirmed\" sortable={true}  />\r\n         <Column field=\"active\" header=\"Active\" sortable={true}  />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true}/>\r\n         </DataTable>\r\n         </div>\r\n        }\r\n        \r\n        return(\r\n            <div className=\"col-sm-12 datatable\">\r\n              <DataTable onRowClick ={(event)=>this.getDistrictData(event.data.name)} className=\"p-datatable-places\" rowHover emptyMessage=\"No records found\" header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 <Column field=\"name\" header={name} sortable={true} body={(rowData)=>{\r\n                     let textdecoration=\"underline\"; \r\n                     if(name === 'Country') textdecoration=\"none\";\r\n                     return <span title=\"Click to get District Wise Data\" style={{fontWeight:\"550\",textDecoration:textdecoration,color:\"#337ab7\"}}>{rowData.name}</span>}} />     \r\n                 <Column field=\"cases\" body={(rowData)=>{\r\n                      let changes;\r\n                      if(rowData.changeinConfirmed !== 0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinConfirmed}</span>\r\n                      return <span>{rowData.cases} &nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Confirmed\" sortable={true}  />\r\n                 <Column field=\"active\" header=\"Active\" body ={(rowData) => {\r\n                     let changes;\r\n                     if(rowData.changeinActive !== 0) {\r\n                         if(rowData.changeinActive >0)\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinActive}</span> \r\n                         else\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-down\" style={{fontWeight:'500',color:\"#009933\"}}>{-rowData.changeinActive}</span>\r\n                     }\r\n                     return <span>{rowData.active}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"recovered\" header=\"Recovered\"  body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinRecovered !== 0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#009933\"}}>{rowData.changeinRecovered}</span> \r\n                     return <span>{rowData.recovered}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"deaths\" body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinDeaths !== 0)  changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinDeaths}</span>\r\n                 return <span>{rowData.deaths}&nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Deaths\" sortable={true}  />\r\n                 \r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;","import React from 'react';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\nimport DataContext from \"./../dataContext\";\r\n\r\nclass AffectedCountries extends React.Component\r\n{\r\n    static contextType=DataContext;\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state={\r\n           data:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.sortData();       \r\n    }\r\n\r\n    async sortData()\r\n    {\r\n      try{\r\n\r\n        //sort mapped data according the cases confirmed\r\n        this.context.data.affectedcountries.sort((a,b) => {return b.cases-a.cases})\r\n\r\n        // get the top five affected places according to the confirmed cases\r\n        this.context.data.affectedcountries = this.context.data.affectedcountries.splice(0,5);\r\n    \r\n        await this.setState({data: this.context.data.affectedcountries});\r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err);\r\n      } \r\n    }\r\n\r\n    render()\r\n    {\r\n        const name = this.context.presentRegion === \"World\" ? \"Countries\" : \"States\";\r\n        return(\r\n           <div className=\"col-xl-3 col-md-12\">\r\n              <div className=\"card\" style={{height:'360px'}}>\r\n                <div className=\"card-header\">\r\n                  <span style={{fontSize:\"17px\"}}>5 Most Affected {name}</span>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  { this.state.data.map(data => ( \r\n                     <div key={data.name}>\r\n                       <span  style={{float:'left'}}>{data.name}</span>  <span style={{float:\"right\"}}>{data.cases.toLocaleString()}</span><br></br>\r\n                       <ProgressBar value={data.percentage} showValue ={false} style={{height:'5px'}} />\r\n                       <br></br>\r\n                     </div>   ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AffectedCountries;","import  React  from \"react\";\nimport {ProgressBar} from 'primereact/progressbar';\nimport DataContext from './../dataContext';\n\n\n\nclass Rates extends React.Component{  \n\n    render(){\n        return(\n          <DataContext.Consumer>\n            {\n              (value)=> {\n                const {highestactive,highestrecovered,highestdeaths} = value.data;  \n                 return (\n                  <div className=\"col-xl-3 col-md-12\">\n                  <div className=\"card\" style={{height:\"360px\"}}>\n                    <div className=\"card-body\">\n                        <div>\n                          <h6 style={{fontWeight:\"400\"}}>Highest Active Rate</h6>\n                          <ProgressBar className=\"active\" value={highestactive.active_percentage} showValue ={false} style={{height:'5px'}} />\n                          <span style={{float:\"left\"}}>{highestactive.name}</span>\n                          <span style={{float:\"right\"}}>{highestactive.active_percentage.toFixed(2)}%</span>\n                        </div><br></br><br></br><hr></hr>\n    \n                        <div>\n                          <h6 style={{fontWeight:\"400\"}}>Highest Recovery Rate</h6>\n                          <ProgressBar className=\"recovered\" style={{background:\"green !important\"}} value={highestrecovered.rec_percentage} showValue ={false} style={{height:'5px'}} />\n                          <span style={{float:\"left\"}}>{highestrecovered.name.split(\" \")[0]}</span>\n                          <span style={{float:\"right\"}}>{highestrecovered.rec_percentage.toFixed(2)}%</span>\n                        </div>\n                        <br></br><br></br><hr></hr>\n                        <div>\n                          <h6 style={{fontWeight:\"400\"}}>Highest Death Rate</h6>\n                          <ProgressBar className=\"deaths\" value={highestdeaths.death_percentage} showValue ={false} style={{height:'5px'}} />\n                          <span style={{float:\"left\"}}>{highestdeaths.name}</span>\n                          <span style={{float:\"right\"}}>{highestdeaths.death_percentage.toFixed(2)}%</span>\n                        </div>\n    \n                    </div>\n                  </div>\n                </div>\n                 );\n            }\n          }\n          </DataContext.Consumer>\n        )\n    } \n}\n\nexport default Rates;","import code from \"./../countrycordinates.json\";\n\nconst coronoService ={\n    \n\n    structureData:function(value,presentRegion){\n        let structuredData={};\n\n        //INITIALISING ALL THE FIELDS \n        structuredData[\"affectedcountries\"]=[];\n        structuredData[\"tableData\"] = [];\n        structuredData[\"highestactive\"] = {};\n        structuredData[\"highestrecovered\"] = {};\n        structuredData[\"highestdeaths\"] = {};\n        structuredData[\"mapdata\"]=[];\n\n        try{\n        structuredData[\"TotalConfirmed\"] = value.total.confirmed[value.total.confirmed.length-1][1];\n        structuredData[\"TotalDeaths\"] = value.total.deaths[value.total.deaths.length-1][1];\n        structuredData[\"TotalRecovered\"] = value.total.recovered[value.total.recovered.length-1][1];\n        structuredData[\"NewConfirmed\"] = structuredData[\"TotalConfirmed\"]-value.total.confirmed[value.total.confirmed.length-2][1];\n        structuredData[\"NewRecovered\"] = structuredData[\"TotalRecovered\"]-value.total.recovered[value.total.recovered.length-2][1];\n        structuredData[\"NewDeaths\"] = structuredData[\"TotalDeaths\"]-value.total.deaths[value.total.deaths.length-2][1];\n        structuredData[\"activecases\"] = structuredData[\"TotalConfirmed\"]-(structuredData[\"TotalDeaths\"]+structuredData[\"TotalRecovered\"]);    \n\n        //get country wise data\n        value.countries.forEach((element) => {\n            let confirmed = value.data[element].confirmed;\n            let deaths = value.data[element].deaths;\n            let recovered = value.data[element].recovered;\n\n            // AFFECTED COUNTRIES\n            structuredData[\"affectedcountries\"].push({\"name\":element,\"cases\":confirmed[confirmed.length-1][1],\"percentage\":(confirmed[confirmed.length-1][1]/structuredData[\"TotalConfirmed\"])*100});\n            \n            // ALL COUNTRIES/STATES DATA\n            structuredData[\"tableData\"].push({\"name\":element,\n            \"cases\":confirmed[confirmed.length-1][1],\n            \"deaths\":deaths[deaths.length-1][1],\n            \"recovered\":recovered[recovered.length-1][1],\n            \"changeinConfirmed\":confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1],\n            \"changeinRecovered\" : recovered[recovered.length-1][1]-recovered[recovered.length-2][1],\n            \"changeinDeaths\":deaths[deaths.length-1][1]-deaths[deaths.length-2][1],\n            \"changeinActive\":((confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1]) - (recovered[recovered.length-1][1]-recovered[recovered.length-2][1]) - (deaths[deaths.length-1][1]-deaths[deaths.length-2][1])),\n            \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1],\n            \"recoveredRate\" : ((recovered[recovered.length-1][1]/confirmed[confirmed.length-1][1])*100).toFixed(2)\n            })\n\n            // FOR HIGHEST ACTIVE/RECOVERED/DEATHS RATES\n            if(Object.keys(structuredData.highestactive).length>0){\n                if(structuredData.highestactive.active_percentage < ((confirmed[confirmed.length-1][1]-recovered[recovered.length-1][1]-deaths[deaths.length-1][1])/confirmed[confirmed.length-1][1])*100){\n                    structuredData.highestactive.name = element;\n                    structuredData.highestactive.active_percentage = ((confirmed[confirmed.length-1][1]-recovered[recovered.length-1][1]-deaths[deaths.length-1][1])/confirmed[confirmed.length-1][1])*100\n                }\n                if(structuredData.highestrecovered.rec_percentage < (recovered[recovered.length-1][1]/confirmed[confirmed.length-1][1])*100){\n                    structuredData.highestrecovered.name=element;\n                    structuredData.highestrecovered.rec_percentage=(recovered[recovered.length-1][1]/confirmed[confirmed.length-1][1])*100\n                }\n                if(structuredData.highestdeaths.death_percentage < (deaths[deaths.length-1][1]/confirmed[confirmed.length-1][1])*100){\n                    structuredData.highestdeaths.name = element;\n                    structuredData.highestdeaths.death_percentage = (deaths[deaths.length-1][1]/confirmed[confirmed.length-1][1])*100\n                }\n            }\n            else{\n              structuredData.highestactive={name:element,active_percentage: ((confirmed[confirmed.length-1][1] - recovered[recovered.length-1][1]-deaths[deaths.length-1][1])/confirmed[confirmed.length-1][1])*100};\n              structuredData.highestrecovered={name:element,rec_percentage:(recovered[recovered.length-1][1]/confirmed[confirmed.length-1][1])*100};\n              structuredData.highestdeaths={name:element,death_percentage:(deaths[deaths.length-1][1]/confirmed[confirmed.length-1][1])*100};   \n            }\n            \n            //TO MAP CASES IN MAP CHART\n            if(presentRegion === 'India')\n                structuredData[\"mapdata\"].push([element === \"Arunachal Pradesh\"?\"arunanchal pradesh\":element.toLowerCase(),parseInt(confirmed[confirmed.length-1][1]).toLocaleString()]);\n              \n            else\n                code.ref_country_codes.forEach(x=>{\n                   if(x.country.toLowerCase() === element.toLowerCase())\n                     structuredData[\"mapdata\"].push({\"country\":x.country,\"alpha3\":x.alpha3,\"lat\":x.lat,\"lon\":x.lon,\"value\":parseInt(confirmed[confirmed.length-1][1]).toLocaleString()})\n                   \n                })\n              \n\n        });\n        }\n        catch(err){\n            console.log(err);\n        }\n        \n        return structuredData;\n    },\n    \n}\n\nexport default coronoService;","import React from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n//components\nimport WorldPieChart from './components/WorldPieChart';\nimport CoronoMap from './components/CoronaMap';\nimport CountryData from './components/tableData';\nimport AffectedCountries from './components/AffectedCountries';\nimport Rates from './components/Rates';\n//Services \nimport Data from './services/coronadata.service';\nimport coronoService from './services/corona.service';\nimport DataContext from './dataContext';\n\nclass App extends React.Component {\n\n  mybutton = document.getElementById(\"myBtn\");\n\n  constructor() {\n    super();\n    this.state = {presentRegion:'India',loading:true,is_visible:false};\n  }\n\n  componentDidMount() {\n    var scroll = this;\n    document.addEventListener(\"scroll\", function(e) {\n      scroll.toggleVisibility();\n    });\n    this.getData();\n  }\n\n  async toggleVisibility() {\n    if (window.pageYOffset >100) {\n      await this.setState({\n        is_visible: true\n      });\n    } else {\n      await this.setState({\n        is_visible: false\n      });\n    }\n  }\n\n  async getData()\n  {\n     try{\n        //clear session storage on change of region or refresh of the GUI\n        if(sessionStorage.getItem(\"districtdata\")!= undefined) sessionStorage.clear();\n        let data = await Data.getData(this.state.presentRegion);\n        await this.setState({data: await coronoService.structureData(data,this.state.presentRegion),actualData:data,loading: false})\n      } \n     catch(err){\n       console.log(err);\n     } \n  }\n\n  showRegionData = async(region) =>{\n     try{\n        await this.setState({\n          presentRegion:region,\n          data:[],\n          actualData:{},\n          loading:true\n        })\n        await this.getData();\n     }\n     catch(err)\n     {\n       console.log(err)\n     }\n  }\n\n  //SCROLL TO TOP \n  scrollToTop() {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  render() {\n    const {loading,presentRegion,is_visible} = this.state;\n    let pageData,loader;\n\n   \n    let regionnavigationStyleindia = \"2.6px solid red\" ;\n    let regionnavigationStyleWorld = \"2.6px solid transparent\";\n\n    if(this.state.presentRegion === \"World\"){\n      regionnavigationStyleindia =\"2.6px solid transparent\";\n      regionnavigationStyleWorld = \"2.6px solid red\";\n    }\n\n    pageData = <div>\n    <div className=\"header\">\n      <h5 style={{ padding: '10px' }}>\n        <a href=\"/\" className=\"navbar-brand router-link-exact-active active\" target=\"_self\"><img src={require(\"./viruslogo.png\")} alt=\"Covid\" height=\"30\" width=\"30\" className=\"d-inline-block align-top mr-1\" />COVID-19 </a>\n        <div style={{display:\"flex\",float:\"right\"}}>\n          <p val=\"india\"  onClick={()=>this.showRegionData('India')} style={{height:\"40px\",cursor:\"pointer\",color:presentRegion==='India'?'red':'black',borderBottom:regionnavigationStyleindia,fontWeight:\"500\"}}> <i className=\"fa fa-map-marker\"></i>&nbsp;India</p>\n          <p val=\"world\" onClick={()=>this.showRegionData('World')} style={{cursor:\"pointer\",marginLeft:'25px',color:presentRegion==='India'?'black':'red',borderBottom:regionnavigationStyleWorld}}><i className=\"fa fa-globe\"></i>&nbsp;World</p>\n        </div>\n      </h5>\n    </div><br></br><br></br><br></br>\n    <DataContext.Provider value={this.state}>\n        <WorldPieChart />\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <AffectedCountries />\n        <CoronoMap/>\n        <Rates/>\n        <CountryData/>\n      </div>\n    </div>\n    </DataContext.Provider>\n\n    {/* FOR SCROLL TO TOP */}\n    <div>\n     {is_visible && (\n      <div  className=\"scroll-to-top\" onClick={() => this.scrollToTop()}>\n         <span className=\"fa fa-angle-double-up\"></span>\n      </div>\n     )}\n    </div>\n    <br></br><br></br><br></br>\n\n    <div style={{backgroundColor:\"light\",height:\"40px\"}}>\n      <span style={{textAlign:\"center\",display:\"block\",fontWeight:\"300\"}}>Source: MOHFW(India) and John Hopkins </span>\n    </div>\n\n    {/* FOOTER */}\n    <div className=\"footer\">\n      <div style={{textAlign:\"center\",margin:\"0px auto\",display:\"block\",marginTop:\"12px\"}}>\n        <span style={{fontSize:\"15px\"}}>Copyright © 2020, Matcha Avinash</span>\n      </div>\n    </div>\n\n    </div>\n\n    //FOR LOADER \n    loader = \n    <div className = \"fetching\">\n      <span><img className=\"rotate\" src={require(\"./viruslogo.png\")} width=\"70\"></img></span>\n    </div>\n      \n\n    return (\n      <div style={{ backgroundColor: \"rgb(250,250,250)\"}}>\n        {loading?loader:pageData}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
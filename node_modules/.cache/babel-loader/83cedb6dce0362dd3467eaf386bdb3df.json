{"ast":null,"code":"import _classCallCheck from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Highcharts from'highcharts';import HighchartsReact from'highcharts-react-official';import highchartsMap from\"highcharts/modules/map\";import world from\"@highcharts/map-collection/custom/world.geo.json\";import india from\"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";import code from\"./../countrycordinates.json\";import DataContext from'./../dataContext';highchartsMap(Highcharts);var data=[];var CoronoMap=/*#__PURE__*/function(_React$Component){_inherits(CoronoMap,_React$Component);var _super=_createSuper(CoronoMap);function CoronoMap(){var _this;_classCallCheck(this,CoronoMap);_this=_super.call(this);data=[];_this.state={options:{}};return _this;}_createClass(CoronoMap,[{key:\"componentDidMount\",value:function componentDidMount(){this.structureData();var options={};if(this.context.presentRegion==='India')options={chart:{map:india,height:320},title:{text:this.context.presentRegion+\" Map Plot with Cases <span className='fa fa-expand'></span>\",useHTML:true},credits:{enabled:false},mapNavigation:{enabled:true},tooltip:{headerFormat:'{point.key}<br>',pointFormat:'Cases : <b>{point.value}</b>',shared:true},series:[{mapData:india,data:data,name:this.context.presentRegion==='World'?'Countries':'States',borderColor:'#A0A0A0',nullColor:'rgba(200, 200, 200, 0.3)',showInLegend:false,states:{hover:{color:\"red\"}}}]};else options={chart:{map:world,height:320},title:{text:this.context.presentRegion+\" Map Plot with Cases\"},credits:{enabled:false},mapNavigation:{enabled:true},tooltip:{headerFormat:'{point.key}<br>',pointFormat:'Cases : <b>{point.value}</b>',shared:true},series:[{data:data,joinBy:[\"iso-a3\",\"alpha3\"],name:this.context.presentRegion==='World'?'Countries':'States',borderColor:'#A0A0A0',nullColor:'rgba(200, 200, 200, 0.3)',showInLegend:false,states:{hover:{color:\"red\"}}}]};this.setState({mapOptions:options});}},{key:\"structureData\",value:function structureData(){var _this2=this;if(this.context.presentRegion==='India'){this.context.actualData.countries.forEach(function(country){data.push([country===\"Arunachal Pradesh\"?\"arunanchal pradesh\":country.toLowerCase(),parseInt(_this2.context.actualData.data[country].confirmed[_this2.context.actualData.data[country].confirmed.length-1][1]).toLocaleString()]);});return;}this.context.actualData.countries.forEach(function(country){code.ref_country_codes.forEach(function(x){if(x.country.toLowerCase()===country.toLowerCase()){data.push({\"country\":x.country,\"alpha3\":x.alpha3,\"lat\":x.lat,\"lon\":x.lon,\"value\":parseInt(_this2.context.actualData.data[country].confirmed[_this2.context.actualData.data[country].confirmed.length-1][1]).toLocaleString()});}});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"col-xl-6 col-md-12\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(HighchartsReact,{constructorType:'mapChart',highcharts:Highcharts,options:this.state.mapOptions}))));}}]);return CoronoMap;}(React.Component);CoronoMap.contextType=DataContext;export default CoronoMap;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js"],"names":["React","Highcharts","HighchartsReact","highchartsMap","world","india","code","DataContext","data","CoronoMap","state","options","structureData","context","presentRegion","chart","map","height","title","text","useHTML","credits","enabled","mapNavigation","tooltip","headerFormat","pointFormat","shared","series","mapData","name","borderColor","nullColor","showInLegend","states","hover","color","joinBy","setState","mapOptions","actualData","countries","forEach","country","push","toLowerCase","parseInt","confirmed","length","toLocaleString","ref_country_codes","x","alpha3","lat","lon","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\r\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\nimport code from \"./../countrycordinates.json\";\r\n\r\nimport DataContext from './../dataContext';\r\n\r\nhighchartsMap(Highcharts);\r\n\r\n\r\nvar data=[];\r\nclass CoronoMap extends React.Component{\r\n  static contextType = DataContext;\r\n\r\n  constructor()\r\n  {\r\n    super();\r\n    data=[];\r\n    this.state={options:{}};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.structureData();\r\n    let options={};\r\n    if(this.context.presentRegion === 'India')\r\n    options = {\r\n      chart: {\r\n        map:india,\r\n        height:320\r\n      },\r\n      title: {\r\n        text: this.context.presentRegion+\" Map Plot with Cases <span className='fa fa-expand'></span>\",\r\n        useHTML:true\r\n      },      \r\n      credits:{\r\n        enabled:false\r\n      },\r\n      mapNavigation: {\r\n        enabled: true,\r\n        \r\n      },\r\n      tooltip: {\r\n        headerFormat: '{point.key}<br>',\r\n        pointFormat: 'Cases : <b>{point.value}</b>',\r\n        shared: true\r\n    },\r\n      series: [\r\n        {\r\n          mapData: india,\r\n          data: data,\r\n          name: this.context.presentRegion === 'World'?'Countries':'States',\r\n          borderColor: '#A0A0A0',\r\n          nullColor: 'rgba(200, 200, 200, 0.3)',\r\n         showInLegend: false,\r\n          states: {\r\n            hover: {\r\n              color: \"red\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n    else\r\n       options = {\r\n         chart: {\r\n           map:world,\r\n           height:320\r\n      },\r\n      title: {\r\n        text: this.context.presentRegion+\" Map Plot with Cases\"\r\n      },\r\n      \r\n      credits:{\r\n        enabled:false\r\n      },\r\n      mapNavigation: {\r\n        enabled: true,\r\n      },\r\n      tooltip: {\r\n        headerFormat: '{point.key}<br>',\r\n        pointFormat: 'Cases : <b>{point.value}</b>',\r\n        shared: true\r\n    },\r\n      series: [\r\n        {\r\n          data: data,\r\n          joinBy: [\"iso-a3\", \"alpha3\"],\r\n          name: this.context.presentRegion === 'World'?'Countries':'States',\r\n          borderColor: '#A0A0A0',\r\n          nullColor: 'rgba(200, 200, 200, 0.3)',\r\n          showInLegend: false,\r\n          states: {\r\n            hover: {\r\n              color: \"red\"\r\n            }\r\n          }\r\n        }\r\n      ]};\r\n     this.setState({\r\n      mapOptions: options\r\n  });\r\n}\r\n\r\n  structureData()\r\n  {\r\n    if(this.context.presentRegion === 'India'){\r\n      this.context.actualData.countries.forEach(country=>{\r\n        data.push([country === \"Arunachal Pradesh\"?\"arunanchal pradesh\":country.toLowerCase(),parseInt(this.context.actualData.data[country].confirmed[this.context.actualData.data[country].confirmed.length-1][1]).toLocaleString()])\r\n      })\r\n      return;\r\n    }\r\n    this.context.actualData.countries.forEach(country=>{\r\n      code.ref_country_codes.forEach(x=>{\r\n         if(x.country.toLowerCase() === country.toLowerCase()){\r\n           data.push({\"country\":x.country,\"alpha3\":x.alpha3,\"lat\":x.lat,\"lon\":x.lon,\"value\":parseInt(this.context.actualData.data[country].confirmed[this.context.actualData.data[country].confirmed.length-1][1]).toLocaleString()})\r\n         }\r\n      })\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"col-xl-6 col-md-12\">\r\n              <div className=\"card\">\r\n                 <div className=\"card-body\">\r\n                    <HighchartsReact constructorType ={'mapChart'} highcharts={Highcharts} options={this.state.mapOptions} />\r\n                 </div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default CoronoMap;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from \"highcharts/modules/map\";\nimport proj4 from \"proj4\";\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\nimport code from \"./../countrycordinates.json\";\nhighchartsMap(Highcharts); // if (typeof window !== \"undefined\") {\n//   window.proj4 = window.proj4 || proj4;\n// }\n\nclass CoronoMap extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      mapOptions: {},\n      mapdata: props.presentRegion === \"World\" ? world : india\n    };\n  }\n\n  componentDidMount() {\n    this.structureData();\n    this.setState({\n      mapOptions: {\n        chart: {\n          map: \"custom/world\",\n          height: 320\n        },\n        title: {\n          text: \"Fixed tooltip with HTML\"\n        },\n        legend: {\n          title: {\n            text: \"Population density per km²\" // style: {\n            //   color:\n            //     (Highcharts.theme && Highcharts.theme.textColor) || \"black\"\n            // }\n\n          }\n        },\n        mapNavigation: {\n          enabled: true,\n          buttonOptions: {\n            verticalAlign: \"bottom\"\n          }\n        },\n        series: [{\n          data: code.ref_country_codes,\n          mapData: world,\n          joinBy: [\"iso-a3\", \"alpha3\"],\n          name: \"Population density\",\n          states: {\n            hover: {\n              color: \"red\"\n            }\n          }\n        }]\n      }\n    });\n  }\n\n  structureData() {\n    this.props.data.countries.forEach(country => {\n      code.ref_country_codes.forEach(x => {\n        if (x.country === country) x[\"z\"] = this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length - 1][1];\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-9 col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      id: \"expand\",\n      constructorType: 'mapChart',\n      highcharts: Highcharts,\n      options: this.state.mapOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default CoronoMap;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js"],"names":["React","Highcharts","HighchartsReact","highchartsMap","proj4","world","india","code","CoronoMap","Component","constructor","props","state","mapOptions","mapdata","presentRegion","componentDidMount","structureData","setState","chart","map","height","title","text","legend","mapNavigation","enabled","buttonOptions","verticalAlign","series","data","ref_country_codes","mapData","joinBy","name","states","hover","color","countries","forEach","country","x","confirmed","length","render","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport proj4 from \"proj4\";\r\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\r\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\nimport code from \"./../countrycordinates.json\";\r\n\r\nhighchartsMap(Highcharts);\r\n\r\n\r\n  // if (typeof window !== \"undefined\") {\r\n  //   window.proj4 = window.proj4 || proj4;\r\n  // }\r\n\r\n\r\n  \r\n\r\nclass CoronoMap extends React.Component{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state={mapOptions:{},mapdata:props.presentRegion === \"World\" ? world:india};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.structureData();\r\n    this.setState({\r\n      mapOptions:{\r\n        chart: {\r\n          map: \"custom/world\",\r\n          height:320\r\n        },\r\n        title: {\r\n          text: \"Fixed tooltip with HTML\"\r\n        },\r\n        legend: {\r\n          title: {\r\n            text: \"Population density per km²\",\r\n            // style: {\r\n            //   color:\r\n            //     (Highcharts.theme && Highcharts.theme.textColor) || \"black\"\r\n            // }\r\n          }\r\n        },\r\n        mapNavigation: {\r\n          enabled: true,\r\n          buttonOptions: {\r\n            verticalAlign: \"bottom\"\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            data: code.ref_country_codes,\r\n            mapData: world,\r\n            joinBy: [\"iso-a3\", \"alpha3\"],\r\n            name: \"Population density\",\r\n            states: {\r\n              hover: {\r\n                color: \"red\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n  });\r\n}\r\n\r\n  structureData()\r\n  {\r\n    this.props.data.countries.forEach(country=>{\r\n      code.ref_country_codes.forEach(x=>{\r\n         if(x.country === country) x[\"z\"] = this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length-1][1];\r\n      })\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"col-xl-9 col-md-8\">\r\n              <div className=\"card\" style={{marginBottom:'30px'}}>\r\n                 <div className=\"card-body\">\r\n                    <HighchartsReact id=\"expand\" constructorType ={'mapChart'} highcharts={Highcharts} options={this.state.mapOptions} />\r\n                 </div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CoronoMap;"]},"metadata":{},"sourceType":"module"}
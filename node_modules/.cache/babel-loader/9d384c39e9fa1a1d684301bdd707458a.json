{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js\";\nimport React from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport ReactDOM from 'react-dom';\nimport 'primereact/resources/primereact.min.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport 'primeicons/primeicons.css';\nimport DistrictData from './../services/corondata.service';\n\nclass tableData extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getDistrictData = async data => {\n      try {\n        if (this.props.presentRegion === \"World\") return; //for in case of India \n\n        let obj = [];\n        console.log(sessionStorage, \"sess\");\n        let districtdata = sessionStorage.getItem(\"districtdata\") != undefined ? sessionStorage.getItem(\"districtdata\") : await DistrictData.getDistrictWiseData();\n        Object.keys(districtdata[data].districtData).forEach(x => {\n          obj.push({\n            name: x,\n            active: districtdata[data].districtData[x].active,\n            deaths: districtdata[data].districtData[x].deceased,\n            recovered: districtdata[data].districtData[x].recovered,\n            cases: districtdata[data].districtData[x].confirmed\n          });\n        });\n        await this.setState({\n          districtData: obj,\n          flag: true,\n          tempdistrictObj: obj,\n          presentState: data + \" - District Wise Status\"\n        });\n        sessionStorage.setItem(\"districtdata\", districtdata); // scroll to the specified district table\n\n        var element = document.querySelector(\"#district\");\n        element.scrollIntoView();\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getFilteredData = async (name, searchIn) => {\n      let obj = [];\n\n      try {\n        if (searchIn !== 'district') {\n          this.state.tempObj.forEach(x => {\n            if (x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x);\n          });\n          await this.setState({\n            data: obj\n          });\n          return;\n        } else {\n          this.state.tempdistrictObj.forEach(x => {\n            if (x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x);\n          });\n          await this.setState({\n            districtData: obj\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.render = () => {\n      let districtTable;\n      const header = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"headertext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 10\n        }\n      }, this.state.name, \" Wise Status\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xl-3\",\n        className: \"p-datatable-globalfilter-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"p-input-icon-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"pi pi-search\",\n        style: {\n          fontSize: \"1rem\",\n          position: \"absolute\",\n          display: \"inline-block\",\n          top: \"20px\",\n          marginLeft: \"0.5%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 44\n        }\n      }), /*#__PURE__*/React.createElement(InputText, {\n        type: \"search\",\n        style: {\n          paddingLeft: \"1.8rem\"\n        },\n        onChange: e => this.getFilteredData(e.target.value, \"\"),\n        placeholder: \"Search By Place Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }\n      }))));\n      const districttableheader = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"headertext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, this.state.presentState), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xl-3\",\n        className: \"p-datatable-globalfilter-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"p-input-icon-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"pi pi-search\",\n        style: {\n          fontSize: \"1rem\",\n          position: \"absolute\",\n          display: \"inline-block\",\n          top: \"20px\",\n          marginLeft: \"0.5%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(InputText, {\n        type: \"search\",\n        style: {\n          paddingLeft: \"1.8rem\"\n        },\n        onChange: e => this.getFilteredData(e.target.value, \"district\"),\n        placeholder: \"Search By Place Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }\n      }))));\n\n      if (this.props.presentRegion === 'India' && this.state.flag) {\n        districtTable = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"datatable\",\n          id: \"districttable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          id: \"district\",\n          className: \"p-datatable-places\",\n          emptyMessage: \"No records found\",\n          responsive: true,\n          style: {\n            border: 'none'\n          },\n          header: districttableheader,\n          value: this.state.districtData,\n          paginator: true,\n          rows: 10,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 75\n              }\n            }, rowData.name);\n          },\n          header: \"District\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"cases\",\n          header: \"Confirmed\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"active\",\n          header: \"Active\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"recovered\",\n          header: \"Recovered\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"deaths\",\n          header: \"Deaths\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 10\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 datatable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        onRowClick: event => this.getDistrictData(event.data.name),\n        className: \"p-datatable-places\",\n        rowHover: true,\n        emptyMessage: \"No records found\",\n        header: header,\n        value: this.state.data,\n        responsive: true,\n        paginator: true,\n        rows: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: this.state.name,\n        sortable: true,\n        body: rowData => {\n          let textdecoration = \"underline\";\n          if (this.state.name === 'Country') textdecoration = \"none\";\n          return /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Click to get District Wise Data\",\n            style: {\n              fontWeight: \"550\",\n              textDecoration: textdecoration,\n              color: \"#337ab7\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }\n          }, rowData.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"cases\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinConfirmed != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#ef3c3c\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 67\n            }\n          }, rowData.changeinConfirmed);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 30\n            }\n          }, rowData.cases, \" \\xA0\\xA0\\xA0\", changes);\n        },\n        header: \"Confirmed\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"active\",\n        header: \"Active\",\n        body: rowData => {\n          let changes;\n\n          if (rowData.changeinActive != 0) {\n            if (rowData.changeinActive > 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n              title: \"Change since yesterday\",\n              className: \"fa fa-arrow-up\",\n              style: {\n                fontWeight: '500',\n                color: \"#ef3c3c\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 38\n              }\n            }, rowData.changeinActive);else changes = /*#__PURE__*/React.createElement(\"span\", {\n              title: \"Change since yesterday\",\n              className: \"fa fa-arrow-down\",\n              style: {\n                fontWeight: '500',\n                color: \"#009933\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 38\n              }\n            }, -rowData.changeinActive);\n          }\n\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }\n          }, rowData.active, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"recovered\",\n        header: \"Recovered\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinRecovered != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#009933\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 67\n            }\n          }, rowData.changeinRecovered);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }\n          }, rowData.recovered, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"deaths\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinDeaths != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#ef3c3c\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 65\n            }\n          }, rowData.changeinDeaths);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }\n          }, rowData.deaths, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        header: \"Deaths\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 18\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }), districtTable);\n    };\n\n    this.state = {\n      data: [],\n      districtData: [],\n      name: props.presentRegion == \"World\" ? \"Country\" : \"State\"\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    try {\n      //filter and structure data\n      await this.setState({\n        data: this.props.data.tableData,\n        tempObj: this.props.data.tableData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n}\n\nexport default tableData;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js"],"names":["React","ReactDOM","DataTable","Column","InputText","DistrictData","tableData","Component","constructor","props","getDistrictData","data","presentRegion","obj","console","log","sessionStorage","districtdata","getItem","undefined","getDistrictWiseData","Object","keys","districtData","forEach","x","push","name","active","deaths","deceased","recovered","cases","confirmed","setState","flag","tempdistrictObj","presentState","setItem","element","document","querySelector","scrollIntoView","err","getFilteredData","searchIn","state","tempObj","toLowerCase","includes","render","districtTable","header","fontSize","position","display","top","marginLeft","paddingLeft","e","target","value","districttableheader","border","dateTemplate","rowData","fontWeight","event","textdecoration","textDecoration","color","changes","changeinConfirmed","changeinActive","changeinRecovered","changeinDeaths","componentDidMount","getData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kDAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,yCAAP;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,OAAO,2BAAP;AAEA,OAAOC,YAAP,MAAyB,iCAAzB;;AAKA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI;;AADJ,SAoBAC,eApBA,GAoBkB,MAAMC,IAAN,IAAc;AAC7B,UAAG;AACF,YAAG,KAAKF,KAAL,CAAWG,aAAX,KAA6B,OAAhC,EAAyC,OADvC,CAEF;;AACA,YAAIC,GAAG,GAAE,EAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,EAA2B,MAA3B;AACA,YAAIC,YAAY,GAAGD,cAAc,CAACE,OAAf,CAAuB,cAAvB,KAAwCC,SAAxC,GAAkDH,cAAc,CAACE,OAAf,CAAuB,cAAvB,CAAlD,GAAyF,MAAMb,YAAY,CAACe,mBAAb,EAAlH;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYL,YAAY,CAACN,IAAD,CAAZ,CAAmBY,YAA/B,EAA6CC,OAA7C,CAAqDC,CAAC,IAAE;AACxDZ,UAAAA,GAAG,CAACa,IAAJ,CAAS;AAACC,YAAAA,IAAI,EAACF,CAAN;AAAQG,YAAAA,MAAM,EAACX,YAAY,CAACN,IAAD,CAAZ,CAAmBY,YAAnB,CAAgCE,CAAhC,EAAmCG,MAAlD;AAAyDC,YAAAA,MAAM,EAACZ,YAAY,CAACN,IAAD,CAAZ,CAAmBY,YAAnB,CAAgCE,CAAhC,EAAmCK,QAAnG;AAA4GC,YAAAA,SAAS,EAACd,YAAY,CAACN,IAAD,CAAZ,CAAmBY,YAAnB,CAAgCE,CAAhC,EAAmCM,SAAzJ;AAAmKC,YAAAA,KAAK,EAACf,YAAY,CAACN,IAAD,CAAZ,CAAmBY,YAAnB,CAAgCE,CAAhC,EAAmCQ;AAA5M,WAAT;AACC,SAFD;AAIA,cAAM,KAAKC,QAAL,CAAc;AAACX,UAAAA,YAAY,EAACV,GAAd;AAAkBsB,UAAAA,IAAI,EAAC,IAAvB;AAA4BC,UAAAA,eAAe,EAACvB,GAA5C;AAAgDwB,UAAAA,YAAY,EAAC1B,IAAI,GAAC;AAAlE,SAAd,CAAN;AAEAK,QAAAA,cAAc,CAACsB,OAAf,CAAuB,cAAvB,EAAsCrB,YAAtC,EAZE,CAaF;;AACA,YAAIsB,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAd;AACAF,QAAAA,OAAO,CAACG,cAAR;AACD,OAhBA,CAiBD,OAAMC,GAAN,EAAU;AACN7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;AACH;AACF,KAzCD;;AAAA,SA4CAC,eA5CA,GA4CgB,OAAMjB,IAAN,EAAWkB,QAAX,KAAsB;AAC9B,UAAIhC,GAAG,GAAE,EAAT;;AACA,UAAG;AACH,YAAGgC,QAAQ,KAAK,UAAhB,EAA2B;AACvB,eAAKC,KAAL,CAAWC,OAAX,CAAmBvB,OAAnB,CAA2BC,CAAC,IAAE;AAC1B,gBAAGA,CAAC,CAACE,IAAF,CAAOqB,WAAP,GAAqBC,QAArB,CAA8BtB,IAAI,CAACqB,WAAL,EAA9B,CAAH,EAAsDnC,GAAG,CAACa,IAAJ,CAASD,CAAT;AACzD,WAFD;AAGA,gBAAM,KAAKS,QAAL,CAAc;AAACvB,YAAAA,IAAI,EAACE;AAAN,WAAd,CAAN;AACA;AACH,SAND,MAOI;AACA,eAAKiC,KAAL,CAAWV,eAAX,CAA2BZ,OAA3B,CAAmCC,CAAC,IAAE;AAClC,gBAAGA,CAAC,CAACE,IAAF,CAAOqB,WAAP,GAAqBC,QAArB,CAA8BtB,IAAI,CAACqB,WAAL,EAA9B,CAAH,EAAsDnC,GAAG,CAACa,IAAJ,CAASD,CAAT;AACzD,WAFD;AAGA,gBAAM,KAAKS,QAAL,CAAc;AAACX,YAAAA,YAAY,EAACV;AAAd,WAAd,CAAN;AACH;AACA,OAdD,CAeA,OAAM8B,GAAN,EAAU;AAAC7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;AAAiB;AACnC,KA9DD;;AAAA,SAgEAO,MAhEA,GAgES,MAAK;AACV,UAAIC,aAAJ;AAEA,YAAMC,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACd;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKN,KAAL,CAAWnB,IAAzC,iBADc,eAEd;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,SAAS,EAAC,oCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,KAAK,EAAC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC;AAAG,QAAA,KAAK,EAAC,cAAT;AAAwB,QAAA,KAAK,EAAE;AAAC0B,UAAAA,QAAQ,EAAC,MAAV;AAAiBC,UAAAA,QAAQ,EAAC,UAA1B;AAAqCC,UAAAA,OAAO,EAAC,cAA7C;AAA4DC,UAAAA,GAAG,EAAC,MAAhE;AAAuEC,UAAAA,UAAU,EAAC;AAAlF,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,eACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAC;AAAb,SAAhC;AAAwD,QAAA,QAAQ,EAAGC,CAAD,IAAK,KAAKf,eAAL,CAAqBe,CAAC,CAACC,MAAF,CAASC,KAA9B,EAAoC,EAApC,CAAvE;AAAgH,QAAA,WAAW,EAAC,sBAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFc,CAAf;AASA,YAAMC,mBAAmB,gBAAG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAC5B;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKhB,KAAL,CAAWT,YAAzC,CAD4B,eAE5B;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,SAAS,EAAC,oCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,KAAK,EAAC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC;AAAG,QAAA,KAAK,EAAC,cAAT;AAAwB,QAAA,KAAK,EAAE;AAACgB,UAAAA,QAAQ,EAAC,MAAV;AAAiBC,UAAAA,QAAQ,EAAC,UAA1B;AAAqCC,UAAAA,OAAO,EAAC,cAA7C;AAA4DC,UAAAA,GAAG,EAAC,MAAhE;AAAuEC,UAAAA,UAAU,EAAC;AAAlF,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,eACG,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAC;AAAb,SAAhC;AAAwD,QAAA,QAAQ,EAAGC,CAAD,IAAK,KAAKf,eAAL,CAAqBe,CAAC,CAACC,MAAF,CAASC,KAA9B,EAAoC,UAApC,CAAvE;AAAwH,QAAA,WAAW,EAAC,sBAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADJ,CAF4B,CAA5B;;AAUA,UAAG,KAAKpD,KAAL,CAAWG,aAAX,KAA6B,OAA7B,IAAwC,KAAKkC,KAAL,CAAWX,IAAtD,EAA2D;AAC1DgB,QAAAA,aAAa,gBACb;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,EAAE,EAAC,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,SAAD;AAAW,UAAA,EAAE,EAAC,UAAd;AAAyB,UAAA,SAAS,EAAC,oBAAnC;AAAwD,UAAA,YAAY,EAAC,kBAArE;AAAwF,UAAA,UAAU,EAAE,IAApG;AAA0G,UAAA,KAAK,EAAE;AAACY,YAAAA,MAAM,EAAC;AAAR,WAAjH;AAAkI,UAAA,MAAM,EAAED,mBAA1I;AAA+J,UAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWvB,YAAjL;AAAgM,UAAA,SAAS,MAAzM;AAA0M,UAAA,IAAI,EAAE,EAAhN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAsB,UAAA,IAAI,EAAE,KAAKyC,YAAL,GAAmBC,OAAD,IAAW;AAAC,gCAAO;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAC;AAAZ,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmCD,OAAO,CAACtC,IAA3C,CAAP;AAA+D,WAAzH;AAA2H,UAAA,MAAM,EAAC,UAAlI;AAA6I,UAAA,QAAQ,EAAE,IAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAuB,UAAA,MAAM,EAAC,WAA9B;AAA0C,UAAA,QAAQ,EAAE,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,eAIA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,MAAM,EAAC,WAAjC;AAA6C,UAAA,QAAQ,EAAE,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJA,eAKA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALA,CADA,CADA;AAUA;;AAED,0BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAIwC,KAAD,IAAS,KAAKzD,eAAL,CAAqByD,KAAK,CAACxD,IAAN,CAAWgB,IAAhC,CAAjC;AAAwE,QAAA,SAAS,EAAC,oBAAlF;AAAuG,QAAA,QAAQ,MAA/G;AAAgH,QAAA,YAAY,EAAC,kBAA7H;AAAgJ,QAAA,MAAM,EAAEyB,MAAxJ;AAAgK,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWnC,IAAlL;AAAwL,QAAA,UAAU,EAAE,IAApM;AAA0M,QAAA,SAAS,EAAE,IAArN;AAA2N,QAAA,IAAI,EAAE,EAAjO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAE,KAAKmC,KAAL,CAAWnB,IAAxC;AAA8C,QAAA,QAAQ,EAAE,IAAxD;AAA8D,QAAA,IAAI,EAAGsC,OAAD,IAAW;AAC3E,cAAIG,cAAc,GAAC,WAAnB;AACA,cAAG,KAAKtB,KAAL,CAAWnB,IAAX,KAAoB,SAAvB,EAAkCyC,cAAc,GAAC,MAAf;AAClC,8BAAO;AAAM,YAAA,KAAK,EAAC,iCAAZ;AAA8C,YAAA,KAAK,EAAE;AAACF,cAAAA,UAAU,EAAC,KAAZ;AAAkBG,cAAAA,cAAc,EAACD,cAAjC;AAAgDE,cAAAA,KAAK,EAAC;AAAtD,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwHL,OAAO,CAACtC,IAAhI,CAAP;AAAoJ,SAHxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,eAKG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAGsC,OAAD,IAAW;AAClC,cAAIM,OAAJ;AACA,cAAGN,OAAO,CAACO,iBAAR,IAA4B,CAA/B,EAAkCD,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACL,cAAAA,UAAU,EAAC,KAAZ;AAAkBI,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACO,iBAApH,CAAV;AAClC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOP,OAAO,CAACjC,KAAf,mBAAyCuC,OAAzC,CAAP;AAAgE,SAHrE;AAGuE,QAAA,MAAM,EAAC,WAH9E;AAG0F,QAAA,QAAQ,EAAE,IAHpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,eASG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,IAAI,EAAIN,OAAD,IAAa;AACvD,cAAIM,OAAJ;;AACA,cAAGN,OAAO,CAACQ,cAAR,IAA0B,CAA7B,EAAgC;AAC5B,gBAAGR,OAAO,CAACQ,cAAR,GAAwB,CAA3B,EACEF,OAAO,gBAAG;AAAM,cAAA,KAAK,EAAC,wBAAZ;AAAqC,cAAA,SAAS,EAAC,gBAA/C;AAAgE,cAAA,KAAK,EAAE;AAACL,gBAAAA,UAAU,EAAC,KAAZ;AAAkBI,gBAAAA,KAAK,EAAC;AAAxB,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA4GL,OAAO,CAACQ,cAApH,CAAV,CADF,KAGEF,OAAO,gBAAG;AAAM,cAAA,KAAK,EAAC,wBAAZ;AAAqC,cAAA,SAAS,EAAC,kBAA/C;AAAkE,cAAA,KAAK,EAAE;AAACL,gBAAAA,UAAU,EAAC,KAAZ;AAAkBI,gBAAAA,KAAK,EAAC;AAAxB,eAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8G,CAACL,OAAO,CAACQ,cAAvH,CAAV;AACL;;AACD,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOR,OAAO,CAACrC,MAAf,kBAAyC2C,OAAzC,CAAP;AAAgE,SARpE;AAQsE,QAAA,QAAQ,EAAE,IARhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATH,eAkBG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,MAAM,EAAC,WAAjC;AAA8C,QAAA,IAAI,EAAIN,OAAD,IAAW;AAC5D,cAAIM,OAAJ;AACA,cAAGN,OAAO,CAACS,iBAAR,IAA6B,CAAhC,EAAmCH,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACL,cAAAA,UAAU,EAAC,KAAZ;AAAkBI,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACS,iBAApH,CAAV;AACnC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOT,OAAO,CAAClC,SAAf,kBAA4CwC,OAA5C,CAAP;AAAmE,SAHvE;AAGyE,QAAA,QAAQ,EAAE,IAHnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBH,eAsBG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAIN,OAAD,IAAW;AACrC,cAAIM,OAAJ;AACA,cAAGN,OAAO,CAACU,cAAR,IAA0B,CAA7B,EAAiCJ,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACL,cAAAA,UAAU,EAAC,KAAZ;AAAkBI,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACU,cAApH,CAAV;AACrC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOV,OAAO,CAACpC,MAAf,kBAAyC0C,OAAzC,CAAP;AAAgE,SAHhE;AAGkE,QAAA,MAAM,EAAC,QAHzE;AAGkF,QAAA,QAAQ,EAAE,IAH5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBH,CADF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BF,EA8BGpB,aA9BH,CADJ;AAkCH,KArID;;AAEI,SAAKL,KAAL,GAAW;AAACnC,MAAAA,IAAI,EAAC,EAAN;AAASY,MAAAA,YAAY,EAAC,EAAtB;AAAyBI,MAAAA,IAAI,EAAClB,KAAK,CAACG,aAAN,IAAuB,OAAvB,GAAiC,SAAjC,GAA4C;AAA1E,KAAX;AACH;;AAEDgE,EAAAA,iBAAiB,GACjB;AACI,SAAKC,OAAL;AACH;;AAED,QAAMA,OAAN,GAAe;AACf,QAAG;AACC;AACA,YAAM,KAAK3C,QAAL,CAAc;AAACvB,QAAAA,IAAI,EAAC,KAAKF,KAAL,CAAWE,IAAX,CAAgBL,SAAtB;AAAgCyC,QAAAA,OAAO,EAAC,KAAKtC,KAAL,CAAWE,IAAX,CAAgBL;AAAxD,OAAd,CAAN;AACH,KAHD,CAIA,OAAMqC,GAAN,EAAU;AACJ7B,MAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;AACL;AACA;;AArBL;;AA2IA,eAAerC,SAAf","sourcesContent":["import React from 'react';\r\n\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport ReactDOM from 'react-dom';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport DistrictData from './../services/corondata.service';\r\n\r\n\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={data:[],districtData:[],name:props.presentRegion == \"World\" ? \"Country\" :\"State\"};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    async getData(){\r\n    try{\r\n        //filter and structure data\r\n        await this.setState({data:this.props.data.tableData,tempObj:this.props.data.tableData});\r\n    }\r\n    catch(err){\r\n          console.log(err)\r\n    }\r\n    }\r\n\r\n    getDistrictData = async(data) =>{\r\n       try{\r\n        if(this.props.presentRegion === \"World\") return;    \r\n        //for in case of India \r\n        let obj =[];\r\n        console.log(sessionStorage,\"sess\");\r\n        let districtdata = sessionStorage.getItem(\"districtdata\")!=undefined?sessionStorage.getItem(\"districtdata\"):await DistrictData.getDistrictWiseData();\r\n        Object.keys(districtdata[data].districtData).forEach(x=>{    \r\n        obj.push({name:x,active:districtdata[data].districtData[x].active,deaths:districtdata[data].districtData[x].deceased,recovered:districtdata[data].districtData[x].recovered,cases:districtdata[data].districtData[x].confirmed})    \r\n        })\r\n\r\n        await this.setState({districtData:obj,flag:true,tempdistrictObj:obj,presentState:data+\" - District Wise Status\"})\r\n\r\n        sessionStorage.setItem(\"districtdata\",districtdata);\r\n        // scroll to the specified district table\r\n        var element = document.querySelector(\"#district\");\r\n        element.scrollIntoView();\r\n      }\r\n      catch(err){\r\n          console.log(err);\r\n      }\r\n    }\r\n\r\n    //GLOBAL SEARCH FUNCTIONALITY\r\n    getFilteredData=async(name,searchIn)=>{\r\n            let obj =[];\r\n            try{\r\n            if(searchIn !== 'district'){\r\n                this.state.tempObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({data:obj})\r\n                return;\r\n            }\r\n            else{\r\n                this.state.tempdistrictObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({districtData:obj})\r\n            }\r\n            }\r\n            catch(err){console.log(err)}\r\n    }\r\n\r\n    render = () =>{\r\n        let districtTable;\r\n            \r\n        const header = <div className=\"headerdiv\">\r\n         <span className=\"headertext\">{this.state.name} Wise Status</span>\r\n         <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n           <span class=\"p-input-icon-left\"><i class=\"pi pi-search\" style={{fontSize:\"1rem\",position:\"absolute\",display:\"inline-block\",top:\"20px\",marginLeft:\"0.5%\"}}></i>\r\n             <InputText type=\"search\" style={{paddingLeft:\"1.8rem\"}} onChange={(e)=>this.getFilteredData(e.target.value,\"\")} placeholder=\"Search By Place Name\" />\r\n           </span>\r\n         </div>\r\n        </div>\r\n\r\n        const districttableheader = <div className=\"headerdiv\">\r\n        <span className=\"headertext\">{this.state.presentState}</span>\r\n        <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n            <span class=\"p-input-icon-left\"><i class=\"pi pi-search\" style={{fontSize:\"1rem\",position:\"absolute\",display:\"inline-block\",top:\"20px\",marginLeft:\"0.5%\"}}></i>\r\n               <InputText type=\"search\" style={{paddingLeft:\"1.8rem\"}} onChange={(e)=>this.getFilteredData(e.target.value,\"district\")} placeholder=\"Search By Place Name\" />\r\n            </span>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        if(this.props.presentRegion === 'India' && this.state.flag){\r\n         districtTable = \r\n         <div className=\"datatable\" id=\"districttable\">\r\n         <DataTable id=\"district\" className=\"p-datatable-places\" emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header={districttableheader} value={this.state.districtData}  paginator rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <span style={{fontWeight:\"bold\"}}>{rowData.name}</span>}} header=\"District\" sortable={true} />\r\n         <Column field=\"cases\"  header=\"Confirmed\" sortable={true}  />\r\n         <Column field=\"active\" header=\"Active\" sortable={true}  />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true}/>\r\n         </DataTable>\r\n         </div>\r\n        }\r\n        \r\n        return(\r\n            <div className=\"col-sm-12 datatable\">\r\n              <DataTable onRowClick ={(event)=>this.getDistrictData(event.data.name)} className=\"p-datatable-places\" rowHover emptyMessage=\"No records found\" header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 <Column field=\"name\" header={this.state.name} sortable={true} body={(rowData)=>{\r\n                     let textdecoration=\"underline\"; \r\n                     if(this.state.name === 'Country') textdecoration=\"none\";\r\n                     return <span title=\"Click to get District Wise Data\" style={{fontWeight:\"550\",textDecoration:textdecoration,color:\"#337ab7\"}}>{rowData.name}</span>}} />     \r\n                 <Column field=\"cases\" body={(rowData)=>{\r\n                      let changes;\r\n                      if(rowData.changeinConfirmed !=0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinConfirmed}</span>\r\n                      return <span>{rowData.cases} &nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Confirmed\" sortable={true}  />\r\n                 <Column field=\"active\" header=\"Active\" body ={(rowData) => {\r\n                     let changes;\r\n                     if(rowData.changeinActive != 0) {\r\n                         if(rowData.changeinActive >0)\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinActive}</span> \r\n                         else\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-down\" style={{fontWeight:'500',color:\"#009933\"}}>{-rowData.changeinActive}</span>\r\n                     }\r\n                     return <span>{rowData.active}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"recovered\" header=\"Recovered\"  body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinRecovered != 0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#009933\"}}>{rowData.changeinRecovered}</span> \r\n                     return <span>{rowData.recovered}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"deaths\" body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinDeaths != 0)  changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinDeaths}</span>\r\n                 return <span>{rowData.deaths}&nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Deaths\" sortable={true}  />\r\n                 \r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var coronoService={structureData:function structureData(value){// let structuredData={};\n// structuredData[\"TotalConfirmed\"] = value.total.confirmed[value.total.confirmed.length-1][1];\n// structuredData[\"TotalDeaths\"] = value.total.deaths[value.total.deaths.length-1][1];\n// structuredData[\"TotalRecovered\"] = value.total.recovered[value.total.recovered.length-1][1];\n// structuredData[\"NewConfirmed\"] = structuredData[\"TotalConfirmed\"]-value.total.confirmed[value.total.confirmed.length-2][1];\n// structuredData[\"NewRecovered\"] = structuredData[\"TotalRecovered\"]-value.total.recovered[value.total.recovered.length-2][1];\n// structuredData[\"NewDeaths\"] = structuredData[\"TotalDeaths\"]-value.total.deaths[value.total.deaths.length-2][1];\n// structuredData[\"activecases\"] = structuredData[\"TotalConfirmed\"]-(structuredData[\"TotalDeaths\"]+structuredData[\"TotalRecovered\"]);    \n// //get country wise data for tableData/AffectedCountries\n// value.countries.forEach((element,index) => {\n//     let confirmed = value.data[element].confirmed;\n//     let deaths = value.data[element].deaths;\n//     let recovered = value.data[element].recovered;\n//     structuredData[\"affectedcountries\"].push({\"name\":element,\"cases\":confirmed[confirmed.length-1][1],\"percentage\":(confirmed[confirmed.length-1][1]/structuredData[\"TotalConfirmed\"])*100});\n//     structuredData[\"tableData\"].push({\"name\":element,\n//     \"cases\":confirmed[confirmed.length-1][1],\n//     \"deaths\":deaths[deaths.length-1][1],\n//     \"recovered\":recovered[recovered.length-1][1],\n//     \"changeinConfirmed\":confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1],\n//     \"changeinRecovered\" : recovered[recovered.length-1][1]-recovered[recovered.length-2][1],\n//     \"changeinDeaths\":deaths[deaths.length-1][1]-deaths[deaths.length-2][1],\n//     \"changeinActive\":((confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1]) - (recovered[recovered.length-1][1]-recovered[recovered.length-2][1]) - (deaths[deaths.length-1][1]-deaths[deaths.length-2][1])),\n//     \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1],\n//     \"recoveredRate\" : ((recovered[recovered.length-1][1]/confirmed[confirmed.length-1][1])*100).toFixed(2)\n//     })\n// });\nreturn value;}};export default coronoService;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/corono.service.js"],"names":["coronoService","structureData","value"],"mappings":"AAAA,GAAMA,CAAAA,aAAa,CAAE,CAGjBC,aAAa,CAAC,uBAASC,KAAT,CAAe,CACzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAOA,CAAAA,KAAP,CACH,CApCgB,CAArB,CAuCA,cAAeF,CAAAA,aAAf","sourcesContent":["const coronoService ={\n\n\n    structureData:function(value){\n        // let structuredData={};\n\n        // structuredData[\"TotalConfirmed\"] = value.total.confirmed[value.total.confirmed.length-1][1];\n        // structuredData[\"TotalDeaths\"] = value.total.deaths[value.total.deaths.length-1][1];\n        // structuredData[\"TotalRecovered\"] = value.total.recovered[value.total.recovered.length-1][1];\n        // structuredData[\"NewConfirmed\"] = structuredData[\"TotalConfirmed\"]-value.total.confirmed[value.total.confirmed.length-2][1];\n        // structuredData[\"NewRecovered\"] = structuredData[\"TotalRecovered\"]-value.total.recovered[value.total.recovered.length-2][1];\n        // structuredData[\"NewDeaths\"] = structuredData[\"TotalDeaths\"]-value.total.deaths[value.total.deaths.length-2][1];\n        // structuredData[\"activecases\"] = structuredData[\"TotalConfirmed\"]-(structuredData[\"TotalDeaths\"]+structuredData[\"TotalRecovered\"]);    \n\n        // //get country wise data for tableData/AffectedCountries\n        // value.countries.forEach((element,index) => {\n        //     let confirmed = value.data[element].confirmed;\n        //     let deaths = value.data[element].deaths;\n        //     let recovered = value.data[element].recovered;\n\n        //     structuredData[\"affectedcountries\"].push({\"name\":element,\"cases\":confirmed[confirmed.length-1][1],\"percentage\":(confirmed[confirmed.length-1][1]/structuredData[\"TotalConfirmed\"])*100});\n            \n        //     structuredData[\"tableData\"].push({\"name\":element,\n        //     \"cases\":confirmed[confirmed.length-1][1],\n        //     \"deaths\":deaths[deaths.length-1][1],\n        //     \"recovered\":recovered[recovered.length-1][1],\n        //     \"changeinConfirmed\":confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1],\n        //     \"changeinRecovered\" : recovered[recovered.length-1][1]-recovered[recovered.length-2][1],\n        //     \"changeinDeaths\":deaths[deaths.length-1][1]-deaths[deaths.length-2][1],\n        //     \"changeinActive\":((confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1]) - (recovered[recovered.length-1][1]-recovered[recovered.length-2][1]) - (deaths[deaths.length-1][1]-deaths[deaths.length-2][1])),\n        //     \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1],\n        //     \"recoveredRate\" : ((recovered[recovered.length-1][1]/confirmed[confirmed.length-1][1])*100).toFixed(2)\n        //     })\n\n        // });\n        return value;\n    }\n}\n\nexport default coronoService;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/ColumnGraph.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts/highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nclass ColumnGraph extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      options: {//     chart: {\n        //         type: 'column',\n        //         height:320,\n        //     },\n        //     title: {\n        //         text: 'Monthly Cases Year (2020)'\n        //     },\n        //     subtitle: {\n        //         text: 'Coronovirus Cases    '\n        //     },\n        //     xAxis: {\n        //         categories: [\n        //             'Jan',\n        //             'Feb',\n        //             'Mar',\n        //             'Apr',\n        //             'May',\n        //             'Jun',\n        //             'Jul',\n        //             'Aug',\n        //             'Sep',\n        //             'Oct',\n        //             'Nov',\n        //             'Dec'\n        //         ],\n        //     },\n        //     credits:{\n        //         enabled:false\n        //     },\n        //     yAxis: {\n        //         min: 100,\n        //         title: {\n        //             text: 'Cases'\n        //         }\n        //     },\n        //     series: [{\n        //         name:'Cases',\n        //         data: [1200,5009,19000,30000,39900, 47800, 79333]\n        //     }]\n        // }};\n      }\n    }; //this.getData(props.presentRegion)\n  }\n\n  componentDidMount() {\n    this.structureData(this.props.data);\n  }\n\n  structureData(data) {\n    let i = 0,\n        DaysInMonths = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // let i =0 ,obj=[0],prevdata=0;\n\n    let obj = [],\n        month;\n    data.forEach((element, index) => {\n      month = element.Date.split(\"-\")[1];\n\n      if (element.Date.split(\"-\")[2].split(\"T\")[0] == DaysInMonths[month - 1]) {\n        obj[i] = element.Cases;\n        i++;\n      }\n    });\n    console.log(\"column\", obj);\n    this.setState({\n      options: {\n        chart: {\n          type: 'column',\n          height: 320\n        },\n        title: {\n          text: 'Monthly Cases Year (2020)'\n        },\n        subtitle: {\n          text: 'Coronovirus Cases    '\n        },\n        xAxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        credits: {\n          enabled: false\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: 'Cases'\n          }\n        },\n        series: [{\n          name: 'Cases',\n          data: obj\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}\n\nexport default ColumnGraph;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/ColumnGraph.js"],"names":["React","Highcharts","HighchartsReact","ColumnGraph","Component","constructor","props","state","options","componentDidMount","structureData","data","i","DaysInMonths","obj","month","forEach","element","index","Date","split","Cases","console","log","setState","chart","type","height","title","text","subtitle","xAxis","categories","credits","enabled","yAxis","min","series","name","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts/highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\n\r\nclass ColumnGraph extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n        options: {\r\n        //     chart: {\r\n        //         type: 'column',\r\n        //         height:320,\r\n        //     },\r\n        //     title: {\r\n        //         text: 'Monthly Cases Year (2020)'\r\n        //     },\r\n        //     subtitle: {\r\n        //         text: 'Coronovirus Cases    '\r\n        //     },\r\n        //     xAxis: {\r\n        //         categories: [\r\n        //             'Jan',\r\n        //             'Feb',\r\n        //             'Mar',\r\n        //             'Apr',\r\n        //             'May',\r\n        //             'Jun',\r\n        //             'Jul',\r\n        //             'Aug',\r\n        //             'Sep',\r\n        //             'Oct',\r\n        //             'Nov',\r\n        //             'Dec'\r\n        //         ],\r\n        //     },\r\n        //     credits:{\r\n        //         enabled:false\r\n        //     },\r\n        //     yAxis: {\r\n        //         min: 100,\r\n        //         title: {\r\n        //             text: 'Cases'\r\n        //         }\r\n        //     },\r\n        //     series: [{\r\n        //         name:'Cases',\r\n        //         data: [1200,5009,19000,30000,39900, 47800, 79333]\r\n        \r\n        //     }]\r\n        // }};\r\n        }\r\n    }\r\n     //this.getData(props.presentRegion)\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.structureData(this.props.data);\r\n    }\r\n\r\n    structureData(data)\r\n    { \r\n        let i=0,DaysInMonths =[31,29,31,30,31,30,31,31,30,31,30,31];\r\n        // let i =0 ,obj=[0],prevdata=0;\r\n\r\n        let obj =[],month;\r\n        data.forEach((element,index) => {\r\n            month = element.Date.split(\"-\")[1];\r\n\r\n            if(element.Date.split(\"-\")[2].split(\"T\")[0] == DaysInMonths[month-1]){ obj[i]=element.Cases; i++}\r\n            \r\n\r\n            \r\n        });\r\n\r\n        console.log(\"column\",obj);\r\n\r\n        this.setState({\r\n            options: {\r\n                chart: {\r\n                    type: 'column',\r\n                    height:320,\r\n                },\r\n                title: {\r\n                    text: 'Monthly Cases Year (2020)'\r\n                },\r\n                subtitle: {\r\n                    text: 'Coronovirus Cases    '\r\n                },\r\n                xAxis: {\r\n                    categories: [\r\n                        'Jan',\r\n                        'Feb',\r\n                        'Mar',\r\n                        'Apr',\r\n                        'May',\r\n                        'Jun',\r\n                        'Jul',\r\n                        'Aug',\r\n                        'Sep',\r\n                        'Oct',\r\n                        'Nov',\r\n                        'Dec'\r\n                    ],\r\n                },\r\n                credits:{\r\n                    enabled:false\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Cases'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name:'Cases',\r\n                    data: obj\r\n            \r\n                }]\r\n            }\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColumnGraph;"]},"metadata":{},"sourceType":"module"}
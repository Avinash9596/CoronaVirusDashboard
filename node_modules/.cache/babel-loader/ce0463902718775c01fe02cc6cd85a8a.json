{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js\";\nimport React from 'react';\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass AffectedCountries extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: [],\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    this.sortData();\n  }\n\n  sortData() {\n    let data = this.props.data,\n        name = '';\n\n    if (this.props.presentRegion === 'World') {\n      data = data.Countries;\n      name = \"Countries\";\n      data.sort((a, b) => {\n        return b.TotalConfirmed - a.TotalConfirmed;\n      });\n      data = data.filter((ele, index) => index < 5);\n\n      for (let i = 0, j = data.length; i < j; i++) {\n        if (i > 4) break;\n        data[i][\"percentage\"] = data[i].TotalConfirmed / this.props.data.Global.TotalConfirmed * 100;\n        data[i][\"place\"] = data[i].Country;\n      }\n    } else {\n      name = \"States\";\n      data.sort((a, b) => {\n        return b.noOfCases - a.noOfCases;\n      });\n      data = data.filter((ele, index) => index < 5);\n\n      for (let i = 0, j = data.length; i < j; i++) {\n        if (i > 4) break;\n        data[i][\"place\"] = data[i].state;\n        data[i][\"percentage\"] = data[i].noOfCases / this.props.indiatotalCases * 100;\n      }\n    }\n\n    this.setState({\n      data: data,\n      name: name\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: '360px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"5 Most Affected \", this.state.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, this.state.data.map(data => /*#__PURE__*/React.createElement(\"div\", {\n      key: data.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }\n    }, data.place), \"  \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 75\n      }\n    }, data.TotalConfirmed.toLocaleString()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 150\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      value: data.percentage,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }\n    }))))));\n  }\n\n}\n\nexport default AffectedCountries;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js"],"names":["React","ProgressBar","AffectedCountries","Component","constructor","props","state","data","name","componentDidMount","sortData","presentRegion","Countries","sort","a","b","TotalConfirmed","filter","ele","index","i","j","length","Global","Country","noOfCases","indiatotalCases","setState","render","height","map","place","float","toLocaleString","percentage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\n\r\nclass AffectedCountries extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n           data:[],\r\n           name:'',\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.sortData();       \r\n    }\r\n\r\n    sortData()\r\n    {\r\n        let data = this.props.data,name='';\r\n        if(this.props.presentRegion === 'World'){\r\n          data = data.Countries;\r\n          name=\"Countries\";\r\n          data.sort((a,b) => {return b.TotalConfirmed-a.TotalConfirmed})\r\n          data = data.filter((ele,index) => index<5)\r\n          for(let i=0,j=data.length;i<j;i++)\r\n          {\r\n             if(i>4) break;\r\n             data[i][\"percentage\"] = (data[i].TotalConfirmed/this.props.data.Global.TotalConfirmed)*100;\r\n             data[i][\"place\"] = data[i].Country;\r\n          }\r\n        }\r\n        else{\r\n          name=\"States\";\r\n          data.sort((a,b) => {return b.noOfCases-a.noOfCases})  \r\n          data = data.filter((ele,index) => index<5)\r\n          for(let i =0,j=data.length;i<j;i++)\r\n          {\r\n            if(i>4)  break;\r\n            data[i][\"place\"]=data[i].state;\r\n            data[i][\"percentage\"] = (data[i].noOfCases/this.props.indiatotalCases)*100\r\n          }\r\n        }\r\n        this.setState({data: data,name:name});\r\n  \r\n        \r\n      }\r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div className=\"col-xl-3 col-md-4\">\r\n              <div className=\"card\" style={{height:'360px'}}>\r\n                <div className=\"card-header\">5 Most Affected {this.state.name}</div>\r\n                <div className=\"card-body\">\r\n                  { this.state.data.map(data => ( \r\n                     <div key={data.place}>\r\n                       <span  style={{float:'left'}}>{data.place}</span>  <span style={{float:\"right\"}}>{data.TotalConfirmed.toLocaleString()}</span><br></br>\r\n                       <ProgressBar value={data.percentage} showValue ={false} style={{height:'5px'}} />\r\n                       <br></br>\r\n                     </div>   ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AffectedCountries;"]},"metadata":{},"sourceType":"module"}
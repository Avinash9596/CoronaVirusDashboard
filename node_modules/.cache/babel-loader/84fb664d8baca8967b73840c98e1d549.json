{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js\";\nimport React from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\n\nclass tableData extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getDistrictData = async data => {\n      console.log(data); //  let obj =[];\n      // const fetcher= await fetch(\"https://api.covid19india.org/state_district_wise.json\")\n      // const response =await fetcher.json()\n      // console.log(response);\n      // Object.keys(response[data].districtData).forEach(x=>{\n      //       obj.push({name:x,active:response[data].districtData[x].active,deaths:response[data].districtData[x].deceased,recovered:response[data].districtData[x].recovered,cases:response[data].districtData[x].confirmed})\n      // })\n      // await this.setState({districtData:obj})\n    };\n\n    this.render = () => {\n      let column, districtTable;\n      const header = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }\n      }, \"List of States\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xl-3\",\n        className: \"p-datatable-globalfilter-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(InputText, {\n        width: \"300px\",\n        type: \"search\",\n        placeholder: \"Search By Place Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 89\n        }\n      })));\n\n      if (this.props.presentRegion === 'India') {\n        districtTable = /*#__PURE__*/React.createElement(DataTable, {\n          rowHover: true,\n          emptyMessage: \"No records found\",\n          responsive: true,\n          style: {\n            border: 'none'\n          },\n          header: \"- All Districts\",\n          value: this.state.districtData,\n          paginator: true,\n          rows: 10,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.getDistrictData(rowData.name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 75\n              }\n            }, rowData.name);\n          },\n          header: \"District\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"cases\",\n          header: \"Confirmed\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"active\",\n          header: \"Active\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"recovered\",\n          header: \"Recovered\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"deaths\",\n          header: \"Deaths\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 10\n          }\n        }));\n        column = /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.getDistrictData(rowData.name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 83\n              }\n            }, rowData.name);\n          },\n          header: \"Country\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 18\n          }\n        });\n      } else column = /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Country\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 22\n        }\n      });\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 datatable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        onRowClick: this.getDistrictData(event.data),\n        className: \"p-datatable-places\",\n        rowHover: true,\n        emptyMessage: \"No records found\",\n        header: header,\n        value: this.state.data,\n        responsive: true,\n        paginator: true,\n        rows: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, column, /*#__PURE__*/React.createElement(Column, {\n        field: \"cases\",\n        header: \"Confirmed\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"active\",\n        header: \"Active\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"recovered\",\n        header: \"Recovered\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"deaths\",\n        header: \"Deaths\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 18\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }), districtTable);\n    };\n\n    console.log(props);\n    this.state = {\n      data: [],\n      districtData: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let obj = [];\n    this.props.data.countries.forEach(element => {\n      let confirmed = this.props.data.data[element].confirmed;\n      let deaths = this.props.data.data[element].deaths;\n      let recovered = this.props.data.data[element].recovered;\n      obj.push({\n        \"name\": element,\n        \"cases\": confirmed[confirmed.length - 1][1],\n        \"deaths\": deaths[deaths.length - 1][1],\n        \"recovered\": recovered[recovered.length - 1][1],\n        \"active\": confirmed[confirmed.length - 1][1] - deaths[deaths.length - 1][1] - recovered[recovered.length - 1][1]\n      });\n    });\n    this.setState({\n      data: obj\n    });\n  }\n\n}\n\nexport default tableData;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js"],"names":["React","DataTable","Column","InputText","tableData","Component","constructor","props","getDistrictData","data","console","log","render","column","districtTable","header","presentRegion","border","state","districtData","dateTemplate","rowData","name","event","componentDidMount","getData","obj","countries","forEach","element","confirmed","deaths","recovered","push","length","setState"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext'\r\n\r\n\r\n    \r\n\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super();\r\n        console.log(props);\r\n        this.state={data:[],districtData:[]};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    getData(){\r\n        \r\n      let obj = [];\r\n      this.props.data.countries.forEach(element => {\r\n  \r\n      let confirmed = this.props.data.data[element].confirmed;\r\n      let deaths = this.props.data.data[element].deaths;\r\n      let recovered = this.props.data.data[element].recovered;\r\n\r\n      obj.push({\"name\":element,\r\n      \"cases\":confirmed[confirmed.length-1][1],\r\n      \"deaths\":deaths[deaths.length-1][1],\r\n      \"recovered\":recovered[recovered.length-1][1],\r\n      \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1]})  \r\n\r\n      });    \r\n\r\n     this.setState({data:obj});\r\n    }\r\n\r\n    getDistrictData = async(data) =>{\r\n        console.log(data);\r\n    //  let obj =[];\r\n    // const fetcher= await fetch(\"https://api.covid19india.org/state_district_wise.json\")\r\n    // const response =await fetcher.json()\r\n    // console.log(response);\r\n    // Object.keys(response[data].districtData).forEach(x=>{\r\n        \r\n    //       obj.push({name:x,active:response[data].districtData[x].active,deaths:response[data].districtData[x].deceased,recovered:response[data].districtData[x].recovered,cases:response[data].districtData[x].confirmed})\r\n        \r\n    // })\r\n\r\n    // await this.setState({districtData:obj})\r\n\r\n\r\n    }\r\n\r\n    render = () =>{\r\n        let column,districtTable;\r\n            \r\n        const header = <div>\r\n        List of States\r\n        <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n            <InputText width=\"300px\" type=\"search\" placeholder=\"Search By Place Name\" /><i className=\"fa fa-search\"></i>\r\n        </div>\r\n    </div>\r\n        \r\n        \r\n        if(this.props.presentRegion === 'India'){\r\n         districtTable = <DataTable rowHover emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header=\"- All Districts\" value={this.state.districtData}  paginator={true} rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <a onClick={() => this.getDistrictData(rowData.name)}>{rowData.name}</a>}} header=\"District\" sortable={true} filter={true} />\r\n         <Column field=\"cases\" header=\"Confirmed\" sortable={true} filter={true} />\r\n         <Column field=\"active\" header=\"Active\" sortable={true} filter={true} />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} filter={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true} filter={true} />\r\n         </DataTable>\r\n         column= <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <a onClick={() => this.getDistrictData(rowData.name)}>{rowData.name}</a>}} header=\"Country\" sortable={true} />\r\n        }\r\n        else column= <Column field=\"name\" header=\"Country\" sortable={true} />\r\n\r\n        return(\r\n            <div className=\"col-sm-12 datatable\">\r\n              <DataTable onRowClick ={this.getDistrictData(event.data)} className=\"p-datatable-places\" rowHover emptyMessage=\"No records found\" header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 {column}\r\n                 <Column field=\"cases\" header=\"Confirmed\" sortable={true}  />\r\n                 <Column field=\"active\" header=\"Active\" sortable={true}  />\r\n                 <Column field=\"recovered\" header=\"Recovered\" sortable={true}  />\r\n                 <Column field=\"deaths\" header=\"Deaths\" sortable={true}  />\r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js\";\nimport React from \"react\";\n\nclass Rates extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  componentDidMount() {\n    this.structureData();\n  }\n\n  async structureData() {\n    let data = []; //find the highest active cases rate\n\n    Object.keys(this.props.data.data).forEach((x, index) => {\n      if (index == 0) {\n        data.push({\n          name: x,\n          percent: (this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] - this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] - this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1]) / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100\n        }, {\n          name: x,\n          percent: this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100\n        }, {\n          name: x,\n          percent: this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100\n        });\n      } else {\n        if (data[0].percent < (this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] - this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] - this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1]) / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100) {\n          data[0].name = x;\n          data[0].percent = (this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] - this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] - this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1]) / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100;\n        }\n\n        if (data[1].percent < this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100) {\n          data[1].name = x;\n          data[1].percent = this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100;\n        }\n\n        if (data[2].percent < this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100) {\n          data[2].name = x;\n          data[2].percent = this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100;\n        }\n      }\n    });\n    await this.setState({\n      active: data[0],\n      recovered: data[1],\n      deaths: data[2]\n    });\n    console.log(this.state.active.name);\n  }\n\n  render() {\n    const {\n      active,\n      recovered,\n      deaths\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-disabled\",\n      style: {\n        height: \"360px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Highest Active Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        border: \"2px solid rgb(124, 181, 236)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, acitve.name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"#ef3c3c\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"%\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Highest Recovery Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        border: \"2px solid #009933\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"#009933\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"%\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Highest Death Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        border: \"2px solid red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"%\"))));\n  }\n\n}\n\nexport default Rates;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js"],"names":["React","Rates","Component","constructor","props","componentDidMount","structureData","data","Object","keys","forEach","x","index","push","name","percent","confirmed","length","recovered","deaths","setState","active","console","log","state","render","height","float","border","acitve","color"],"mappings":"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","sourcesContent":["import  React  from \"react\";\n\n\nclass Rates extends React.Component{\n    constructor(props)\n    {\n        super();\n    \n    }\n\n    componentDidMount(){\n        this.structureData();\n    }\n\n   async structureData(){\n         let data=[];\n\n        //find the highest active cases rate\n        Object.keys(this.props.data.data).forEach((x,index)=>{\n            if(index==0){\n                data.push(\n                {name:x,percent:((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]-this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]-this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1])/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100},\n                {name:x,percent:(this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100},\n                {name:x,percent:(this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100}\n                )\n            }\n            else{\n                if(data[0].percent< ((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]-this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]-this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1])/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100){\n                    data[0].name=x;\n                    data[0].percent=((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]-this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]-this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1])/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100\n                }\n                if(data[1].percent< (this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100){\n                    data[1].name=x;\n                    data[1].percent=(this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100\n                }\n                if(data[2].percent< (this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100){\n                    data[2].name=x;\n                    data[2].percent=(this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100\n                }\n            }\n        });\n        await this.setState({active:data[0],recovered:data[1],deaths:data[2]});\n        console.log(this.state.active.name);\n\n    }\n\n\n    render(){\n        const {active,recovered, deaths} = this.state;  \n        return(\n            <div className=\"col-xl-3 col-md-12\">\n              <div className=\"card p-disabled\" style={{height:\"360px\"}}>\n                <div className=\"card-body\">\n                    <span style={{float:\"left\"}}>Highest Active Rate</span>\n                    <hr style={{border:\"2px solid rgb(124, 181, 236)\"}}></hr>\n                    <span style={{float:\"left\"}}>{acitve.name}</span>\n                    <span style={{float:\"right\",color:\"#ef3c3c\"}}>{}%</span>\n                    <br></br><br></br><br></br>\n                    <span style={{float:\"left\"}}>Highest Recovery Rate</span>\n                    <hr style={{border:\"2px solid #009933\"}}></hr>\n                    <span style={{float:\"left\"}}>{}</span>\n                    <span style={{float:\"right\",color:\"#009933\"}}>{}%</span>\n                    <br></br><br></br><br></br>\n                    <span style={{float:\"left\"}}>Highest Death Rate</span>\n                    <hr style={{border:\"2px solid red\"}}></hr>\n                    <span style={{float:\"left\"}}>{}</span>\n                    <span style={{float:\"right\",color:\"red\"}}>{}%</span>\n\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default Rates;"]},"metadata":{},"sourceType":"module"}
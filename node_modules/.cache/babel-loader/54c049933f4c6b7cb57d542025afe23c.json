{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js\";\nimport React from 'react';\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass AffectedCountries extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: [],\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    this.sortData();\n  }\n\n  sortData() {\n    var totalCases = 0;\n    var obj = [],\n        name = \"\";\n    let data = this.props.data;\n\n    if (this.props.presentRegion === 'World') {\n      name = \"Countries\"; //  obj=this.props.data.Countries.splice(0,5);\n\n      data = data.Countries.sort((a, b) => {\n        return b.TotalConfirmed - a.TotalConfirmed;\n      });\n      data.forEach(element => {\n        element[\"percentage\"] = element.TotalConfirmed / data.Global.TotalConfirmed * 100;\n        element[\"place\"] = element.Country;\n      });\n    } else {\n      let ar = [];\n      data.sort((a, b) => {\n        return b.noOfCases - a.noOfCases;\n      });\n      name = \"States\";\n    }\n\n    this.setState({\n      data: data,\n      name: name\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: '360px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"5 Most Affected \", this.state.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, this.state.data.map(name => /*#__PURE__*/React.createElement(\"div\", {\n      key: name.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 24\n      }\n    }, name.place), \"  \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 75\n      }\n    }, name.TotalConfirmed.toLocaleString()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 150\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      value: name.percentage,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }\n    }))))));\n  }\n\n}\n\nexport default AffectedCountries;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js"],"names":["React","ProgressBar","AffectedCountries","Component","constructor","props","state","data","name","componentDidMount","sortData","totalCases","obj","presentRegion","Countries","sort","a","b","TotalConfirmed","forEach","element","Global","Country","ar","noOfCases","setState","render","height","map","country","float","place","toLocaleString","percentage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\n\r\nclass AffectedCountries extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n           data:[],\r\n           name:'',\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.sortData();       \r\n    }\r\n\r\n    sortData()\r\n    {\r\n        var totalCases =0; var obj=[],name=\"\";\r\n        let data = this.props.data;\r\n        if(this.props.presentRegion === 'World'){\r\n           name=\"Countries\";\r\n          //  obj=this.props.data.Countries.splice(0,5);\r\n          data = data.Countries.sort((a,b) => {return b.TotalConfirmed-a.TotalConfirmed})\r\n           data.forEach(element => {\r\n             element[\"percentage\"] = (element.TotalConfirmed/data.Global.TotalConfirmed)*100;\r\n             element[\"place\"] = element.Country;\r\n           });\r\n        }\r\n        else{\r\n          let ar =[];\r\n          data.sort((a,b) => {return b.noOfCases-a.noOfCases})\r\n           name=\"States\";\r\n           \r\n        }\r\n\r\n        this.setState({data: data,name:name});\r\n  \r\n        \r\n      }\r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div className=\"col-xl-3 col-md-4\">\r\n              <div className=\"card\" style={{height:'360px'}}>\r\n                <div className=\"card-header\">5 Most Affected {this.state.name}</div>\r\n                <div className=\"card-body\">\r\n                  { this.state.data.map(name => ( \r\n                     <div key={name.country}>\r\n                       <span  style={{float:'left'}}>{name.place}</span>  <span style={{float:\"right\"}}>{name.TotalConfirmed.toLocaleString()}</span><br></br>\r\n                       <ProgressBar value={name.percentage} showValue ={false} style={{height:'5px'}} />\r\n                       <br></br>\r\n                     </div>   ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AffectedCountries;"]},"metadata":{},"sourceType":"module"}
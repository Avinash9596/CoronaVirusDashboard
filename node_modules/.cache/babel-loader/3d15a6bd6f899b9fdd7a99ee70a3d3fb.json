{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js\";\nimport React from 'react';\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass AffectedCountries extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: [],\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    this.sortData();\n  }\n\n  sortData() {\n    let data = this.props.data,\n        name = '',\n        obj;\n\n    if (this.props.presentRegion === 'World') {\n      data = data.Countries;\n      name = \"Countries\";\n      data.sort((a, b) => {\n        return b.TotalConfirmed - a.TotalConfirmed;\n      });\n\n      for (let i = 0, j = data.length; i < j; i++) {\n        if (i > 4) break;\n        obj[i][\"percentage\"] = data[i].TotalConfirmed / this.props.data.Global.TotalConfirmed * 100;\n        obj[i][\"place\"] = data[i].Country;\n      }\n\n      console.log(data, \"afffeeee\");\n    } else {\n      name = \"States\";\n      data.sort((a, b) => {\n        return b.noOfCases - a.noOfCases;\n      });\n\n      for (let i = 0, j = data.length; i < j; i++) {\n        if (i > 4) break;\n        data[\"place\"] = data[i].state;\n        data[\"percentage\"] = data[i].noOfCases / this.props.TotalConfirmed;\n      }\n    }\n\n    this.setState({\n      data: obj,\n      name: name\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: '360px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"5 Most Affected \", this.state.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, this.state.data.map(name => /*#__PURE__*/React.createElement(\"div\", {\n      key: name.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }\n    }, name.place), \"  \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 75\n      }\n    }, name.TotalConfirmed.toLocaleString()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 150\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      value: name.percentage,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }\n    }))))));\n  }\n\n}\n\nexport default AffectedCountries;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js"],"names":["React","ProgressBar","AffectedCountries","Component","constructor","props","state","data","name","componentDidMount","sortData","obj","presentRegion","Countries","sort","a","b","TotalConfirmed","i","j","length","Global","Country","console","log","noOfCases","setState","render","height","map","country","float","place","toLocaleString","percentage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;AAGA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI;AACA,SAAKC,KAAL,GAAW;AACRC,MAAAA,IAAI,EAAC,EADG;AAERC,MAAAA,IAAI,EAAC;AAFG,KAAX;AAKH;;AAEDC,EAAAA,iBAAiB,GACjB;AACE,SAAKC,QAAL;AACD;;AAEDA,EAAAA,QAAQ,GACR;AACI,QAAIH,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAtB;AAAA,QAA2BC,IAAI,GAAC,EAAhC;AAAA,QAAmCG,GAAnC;;AACA,QAAG,KAAKN,KAAL,CAAWO,aAAX,KAA6B,OAAhC,EAAwC;AACtCL,MAAAA,IAAI,GAAGA,IAAI,CAACM,SAAZ;AACAL,MAAAA,IAAI,GAAC,WAAL;AACAD,MAAAA,IAAI,CAACO,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAS;AAAC,eAAOA,CAAC,CAACC,cAAF,GAAiBF,CAAC,CAACE,cAA1B;AAAyC,OAA7D;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAN,EAAQC,CAAC,GAACZ,IAAI,CAACa,MAAnB,EAA0BF,CAAC,GAACC,CAA5B,EAA8BD,CAAC,EAA/B,EACA;AACG,YAAGA,CAAC,GAAC,CAAL,EAAQ;AACRP,QAAAA,GAAG,CAACO,CAAD,CAAH,CAAO,YAAP,IAAwBX,IAAI,CAACW,CAAD,CAAJ,CAAQD,cAAR,GAAuB,KAAKZ,KAAL,CAAWE,IAAX,CAAgBc,MAAhB,CAAuBJ,cAA/C,GAA+D,GAAtF;AACAN,QAAAA,GAAG,CAACO,CAAD,CAAH,CAAO,OAAP,IAAkBX,IAAI,CAACW,CAAD,CAAJ,CAAQI,OAA1B;AACF;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAAiB,UAAjB;AACD,KAXD,MAYI;AACFC,MAAAA,IAAI,GAAC,QAAL;AACAD,MAAAA,IAAI,CAACO,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAAS;AAAC,eAAOA,CAAC,CAACS,SAAF,GAAYV,CAAC,CAACU,SAArB;AAA+B,OAAnD;;AACA,WAAI,IAAIP,CAAC,GAAE,CAAP,EAASC,CAAC,GAACZ,IAAI,CAACa,MAApB,EAA2BF,CAAC,GAACC,CAA7B,EAA+BD,CAAC,EAAhC,EACA;AACE,YAAGA,CAAC,GAAC,CAAL,EAAS;AACTX,QAAAA,IAAI,CAAC,OAAD,CAAJ,GAAcA,IAAI,CAACW,CAAD,CAAJ,CAAQZ,KAAtB;AACAC,QAAAA,IAAI,CAAC,YAAD,CAAJ,GAAqBA,IAAI,CAACW,CAAD,CAAJ,CAAQO,SAAR,GAAkB,KAAKpB,KAAL,CAAWY,cAAlD;AACD;AACF;;AAED,SAAKS,QAAL,CAAc;AAACnB,MAAAA,IAAI,EAAEI,GAAP;AAAWH,MAAAA,IAAI,EAACA;AAAhB,KAAd;AAGD;;AAEHmB,EAAAA,MAAM,GACN;AACI,wBACG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA8C,KAAKtB,KAAL,CAAWE,IAAzD,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKF,KAAL,CAAWC,IAAX,CAAgBsB,GAAhB,CAAoBrB,IAAI,iBACvB;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACsB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BvB,IAAI,CAACwB,KAApC,CADF,qBACqD;AAAM,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAC;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BvB,IAAI,CAACS,cAAL,CAAoBgB,cAApB,EAA/B,CADrD,eACgI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhI,eAEE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEzB,IAAI,CAAC0B,UAAzB;AAAqC,MAAA,SAAS,EAAG,KAAjD;AAAwD,MAAA,KAAK,EAAE;AAACN,QAAAA,MAAM,EAAC;AAAR,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADD,CADJ,CAFF,CADH,CADH;AAeH;;AAhEL;;AAmEA,eAAe1B,iBAAf","sourcesContent":["import React from 'react';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\n\r\nclass AffectedCountries extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n           data:[],\r\n           name:'',\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.sortData();       \r\n    }\r\n\r\n    sortData()\r\n    {\r\n        let data = this.props.data,name='',obj;\r\n        if(this.props.presentRegion === 'World'){\r\n          data = data.Countries;\r\n          name=\"Countries\";\r\n          data.sort((a,b) => {return b.TotalConfirmed-a.TotalConfirmed})\r\n          for(let i=0,j=data.length;i<j;i++)\r\n          {\r\n             if(i>4) break;\r\n             obj[i][\"percentage\"] = (data[i].TotalConfirmed/this.props.data.Global.TotalConfirmed)*100;\r\n             obj[i][\"place\"] = data[i].Country;\r\n          }\r\n          console.log(data,\"afffeeee\"); \r\n        }\r\n        else{\r\n          name=\"States\";\r\n          data.sort((a,b) => {return b.noOfCases-a.noOfCases})  \r\n          for(let i =0,j=data.length;i<j;i++)\r\n          {\r\n            if(i>4)  break;\r\n            data[\"place\"]=data[i].state;\r\n            data[\"percentage\"] = data[i].noOfCases/this.props.TotalConfirmed\r\n          }  \r\n        }\r\n\r\n        this.setState({data: obj,name:name});\r\n  \r\n        \r\n      }\r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div className=\"col-xl-3 col-md-4\">\r\n              <div className=\"card\" style={{height:'360px'}}>\r\n                <div className=\"card-header\">5 Most Affected {this.state.name}</div>\r\n                <div className=\"card-body\">\r\n                  { this.state.data.map(name => ( \r\n                     <div key={name.country}>\r\n                       <span  style={{float:'left'}}>{name.place}</span>  <span style={{float:\"right\"}}>{name.TotalConfirmed.toLocaleString()}</span><br></br>\r\n                       <ProgressBar value={name.percentage} showValue ={false} style={{height:'5px'}} />\r\n                       <br></br>\r\n                     </div>   ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AffectedCountries;"]},"metadata":{},"sourceType":"module"}
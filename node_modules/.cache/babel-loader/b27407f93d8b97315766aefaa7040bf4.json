{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from \"highcharts/modules/map\";\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\nimport code from \"./../countrycordinates.json\";\nimport indiacodes from \"./../indiastatecodes.json\";\nhighchartsMap(Highcharts);\nvar data = [];\n\nclass CoronoMap extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      mapOptions: {},\n      mapdata: props.presentRegion === \"World\" ? world : india\n    };\n  }\n\n  componentDidMount() {\n    this.structureData();\n    console.log(\"00\", data);\n    let options = {};\n    if (this.props.presentRegion === 'India') options = {\n      chart: {\n        map: this.state.mapdata,\n        height: 320\n      },\n      title: {\n        text: this.props.presentRegion + \" Map Plot with Cases\"\n      },\n      credits: {\n        enabled: false\n      },\n      mapNavigation: {\n        enabled: false,\n        buttonOptions: {\n          verticalAlign: \"bottom\"\n        }\n      },\n      series: [{\n        data: data,\n        name: this.props.presentRegion === 'World' ? 'Countries' : 'States',\n        states: {\n          hover: {\n            color: \"red\"\n          }\n        }\n      }]\n    };else options = {\n      chart: {\n        map: this.state.mapdata,\n        height: 320\n      },\n      title: {\n        text: this.props.presentRegion + \" Map Plot with Cases\"\n      },\n      credits: {\n        enabled: false\n      },\n      mapNavigation: {\n        enabled: false,\n        buttonOptions: {\n          verticalAlign: \"bottom\"\n        }\n      },\n      series: [{\n        data: this.props.presentRegion === 'World' ? code.ref_country_codes : data,\n        joinBy: [\"iso-a3\", \"alpha3\"],\n        name: this.props.presentRegion === 'World' ? 'Countries' : 'States',\n        states: {\n          hover: {\n            color: \"red\"\n          }\n        }\n      }]\n    };\n    this.setState({\n      mapOptions: options\n    });\n  }\n\n  structureData() {\n    if (this.props.presentRegion === 'India') {\n      this.props.data.countries.forEach(country => {\n        data.push([country.toLowerCase(), parseInt(this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length - 1][1]).toLocaleString()]);\n      });\n      return;\n    }\n\n    this.props.data.countries.forEach(country => {\n      code.ref_country_codes.forEach(x => {\n        x.country = x.country === 'Auranachal Pradesh' ? 'Arunanchal Pardesh' : x.country;\n        if (x.country.toLocaleLowerCase() === country.toLowerCase()) x[\"value\"] = parseInt(this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length - 1][1]).toLocaleString();\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-9 col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      id: \"expand\",\n      constructorType: 'mapChart',\n      highcharts: Highcharts,\n      options: this.state.mapOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default CoronoMap;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js"],"names":["React","Highcharts","HighchartsReact","highchartsMap","world","india","code","indiacodes","data","CoronoMap","Component","constructor","props","state","mapOptions","mapdata","presentRegion","componentDidMount","structureData","console","log","options","chart","map","height","title","text","credits","enabled","mapNavigation","buttonOptions","verticalAlign","series","name","states","hover","color","ref_country_codes","joinBy","setState","countries","forEach","country","push","toLowerCase","parseInt","confirmed","length","toLocaleString","x","toLocaleLowerCase","render","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\r\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\nimport code from \"./../countrycordinates.json\";\r\nimport indiacodes from \"./../indiastatecodes.json\";\r\n\r\nhighchartsMap(Highcharts);\r\n\r\n\r\nvar data=[];\r\nclass CoronoMap extends React.Component{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state={mapOptions:{},mapdata:props.presentRegion === \"World\" ? world:india};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.structureData();\r\n    console.log(\"00\",data);\r\n    let options={};\r\n    if(this.props.presentRegion === 'India')\r\n    options = {\r\n      chart: {\r\n        map:this.state.mapdata,\r\n        height:320\r\n      },\r\n      title: {\r\n        text: this.props.presentRegion+\" Map Plot with Cases\"\r\n      },\r\n      \r\n      credits:{\r\n        enabled:false\r\n      },\r\n      mapNavigation: {\r\n        enabled: false,\r\n        buttonOptions: {\r\n          verticalAlign: \"bottom\"\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          data: data,\r\n          name: this.props.presentRegion === 'World'?'Countries':'States',\r\n          states: {\r\n            hover: {\r\n              color: \"red\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n    else\r\n       options = {\r\n         chart: {\r\n        map:this.state.mapdata,\r\n        height:320\r\n      },\r\n      title: {\r\n        text: this.props.presentRegion+\" Map Plot with Cases\"\r\n      },\r\n      \r\n      credits:{\r\n        enabled:false\r\n      },\r\n      mapNavigation: {\r\n        enabled: false,\r\n        buttonOptions: {\r\n          verticalAlign: \"bottom\"\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          data: this.props.presentRegion === 'World'?code.ref_country_codes:data,\r\n          joinBy: [\"iso-a3\", \"alpha3\"],\r\n          name: this.props.presentRegion === 'World'?'Countries':'States',\r\n          states: {\r\n            hover: {\r\n              color: \"red\"\r\n            }\r\n          }\r\n        }\r\n      ]};\r\n    this.setState({\r\n      mapOptions: options\r\n  });\r\n}\r\n\r\n  structureData()\r\n  {\r\n    if(this.props.presentRegion === 'India'){\r\n      this.props.data.countries.forEach(country=>{\r\n        data.push([country.toLowerCase(),parseInt(this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length-1][1]).toLocaleString()])\r\n      })\r\n      return;\r\n    }\r\n    this.props.data.countries.forEach(country=>{\r\n      code.ref_country_codes.forEach(x=>{\r\n         x.country = x.country === 'Auranachal Pradesh'? 'Arunanchal Pardesh':x.country\r\n         if(x.country.toLocaleLowerCase() === country.toLowerCase()) x[\"value\"] = parseInt(this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length-1][1]).toLocaleString();\r\n      })\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"col-xl-9 col-md-8\">\r\n              <div className=\"card\" style={{marginBottom:'30px'}}>\r\n                 <div className=\"card-body\">\r\n                    <HighchartsReact id=\"expand\" constructorType ={'mapChart'} highcharts={Highcharts} options={this.state.mapOptions} />\r\n                 </div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CoronoMap;"]},"metadata":{},"sourceType":"module"}
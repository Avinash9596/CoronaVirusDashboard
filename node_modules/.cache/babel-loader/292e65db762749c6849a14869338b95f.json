{"ast":null,"code":"import _classCallCheck from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/matchajanardhanarao/Documents/coronodashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Highcharts from'highcharts/highcharts';import HighchartsReact from'highcharts-react-official';var ColumnGraph=/*#__PURE__*/function(_React$Component){_inherits(ColumnGraph,_React$Component);var _super=_createSuper(ColumnGraph);function ColumnGraph(props){var _this;_classCallCheck(this,ColumnGraph);_this=_super.call(this);_this.state={options:{//     chart: {\n//         type: 'column',\n//         height:320,\n//     },\n//     title: {\n//         text: 'Monthly Cases Year (2020)'\n//     },\n//     subtitle: {\n//         text: 'Coronovirus Cases    '\n//     },\n//     xAxis: {\n//         categories: [\n//             'Jan',\n//             'Feb',\n//             'Mar',\n//             'Apr',\n//             'May',\n//             'Jun',\n//             'Jul',\n//             'Aug',\n//             'Sep',\n//             'Oct',\n//             'Nov',\n//             'Dec'\n//         ],\n//     },\n//     credits:{\n//         enabled:false\n//     },\n//     yAxis: {\n//         min: 100,\n//         title: {\n//             text: 'Cases'\n//         }\n//     },\n//     series: [{\n//         name:'Cases',\n//         data: [1200,5009,19000,30000,39900, 47800, 79333]\n//     }]\n// }};\n}};//this.getData(props.presentRegion)\nreturn _this;}_createClass(ColumnGraph,[{key:\"componentDidMount\",value:function componentDidMount(){this.structureData(this.props.data);}},{key:\"structureData\",value:function structureData(data){var i=0,obj=[],month=1;data.forEach(function(element,index){if(element.Date.split(\"-\")[1]!=month||data.length-1==index){var prevdata=0;if(i>0){obj.forEach(function(x){return prevdata+=x;});}if(data.length-1==index){obj[i]=data[index].Cases-prevdata;return;}obj[i]=data[index-1].Cases-prevdata;i++;}month=element.Date.split(\"-\")[1];});this.setState({options:{chart:{type:'column',height:320},title:{text:'Monthly Cases Year (2020)'},subtitle:{text:'Coronovirus Cases    '},xAxis:{categories:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']},credits:{enabled:false},yAxis:{min:0,title:{text:'Cases'}},series:[{name:'Cases',data:obj}]}});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(HighchartsReact,{highcharts:Highcharts,options:this.state.options})));}}]);return ColumnGraph;}(React.Component);export default ColumnGraph;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/ColumnGraph.js"],"names":["React","Highcharts","HighchartsReact","ColumnGraph","props","state","options","structureData","data","i","obj","month","forEach","element","index","Date","split","length","prevdata","x","Cases","setState","chart","type","height","title","text","subtitle","xAxis","categories","credits","enabled","yAxis","min","series","name","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts/highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\n\r\nclass ColumnGraph extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n        options: {\r\n        //     chart: {\r\n        //         type: 'column',\r\n        //         height:320,\r\n        //     },\r\n        //     title: {\r\n        //         text: 'Monthly Cases Year (2020)'\r\n        //     },\r\n        //     subtitle: {\r\n        //         text: 'Coronovirus Cases    '\r\n        //     },\r\n        //     xAxis: {\r\n        //         categories: [\r\n        //             'Jan',\r\n        //             'Feb',\r\n        //             'Mar',\r\n        //             'Apr',\r\n        //             'May',\r\n        //             'Jun',\r\n        //             'Jul',\r\n        //             'Aug',\r\n        //             'Sep',\r\n        //             'Oct',\r\n        //             'Nov',\r\n        //             'Dec'\r\n        //         ],\r\n        //     },\r\n        //     credits:{\r\n        //         enabled:false\r\n        //     },\r\n        //     yAxis: {\r\n        //         min: 100,\r\n        //         title: {\r\n        //             text: 'Cases'\r\n        //         }\r\n        //     },\r\n        //     series: [{\r\n        //         name:'Cases',\r\n        //         data: [1200,5009,19000,30000,39900, 47800, 79333]\r\n        \r\n        //     }]\r\n        // }};\r\n        }\r\n    }\r\n     //this.getData(props.presentRegion)\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.structureData(this.props.data);\r\n    }\r\n\r\n    structureData(data)\r\n    { \r\n        let i =0 ,obj=[],month=1;\r\n        data.forEach((element,index) => {\r\n\r\n            if(element.Date.split(\"-\")[1] != month || (data.length-1 == index)){\r\n                 let prevdata=0;\r\n                if(i>0){\r\n                    obj.forEach(x=> prevdata += x);\r\n                }\r\n\r\n                if(data.length - 1 == index){ obj[i]=data[index].Cases-prevdata; return;}\r\n                obj[i] = data[index-1].Cases-prevdata;\r\n                i++;\r\n            } \r\n            month=element.Date.split(\"-\")[1];\r\n           \r\n        });\r\n\r\n        this.setState({\r\n            options: {\r\n                chart: {\r\n                    type: 'column',\r\n                    height:320,\r\n                },\r\n                title: {\r\n                    text: 'Monthly Cases Year (2020)'\r\n                },\r\n                subtitle: {\r\n                    text: 'Coronovirus Cases    '\r\n                },\r\n                xAxis: {\r\n                    categories: [\r\n                        'Jan',\r\n                        'Feb',\r\n                        'Mar',\r\n                        'Apr',\r\n                        'May',\r\n                        'Jun',\r\n                        'Jul',\r\n                        'Aug',\r\n                        'Sep',\r\n                        'Oct',\r\n                        'Nov',\r\n                        'Dec'\r\n                    ],\r\n                },\r\n                credits:{\r\n                    enabled:false\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Cases'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name:'Cases',\r\n                    data: obj\r\n            \r\n                }]\r\n            }\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColumnGraph;"]},"metadata":{},"sourceType":"module"}
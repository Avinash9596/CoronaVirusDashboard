{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from \"highcharts/modules/map\";\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\nimport code from \"./../countrycordinates.json\";\nimport indiacodes from \"./../indiastatecodes.json\";\nhighchartsMap(Highcharts);\nvar data = [['in-5390', 0], ['in-py', 1], ['in-ld', 2], ['in-an', 3], ['in-wb', 4], ['in-or', 5], ['in-br', 6], ['in-sk', 7], ['in-ct', 8], ['in-tn', 9], ['in-mp', 10], ['in-2984', 11], ['in-ga', 12], ['in-nl', 13], ['in-mn', 14], ['in-ar', 15], ['in-mz', 16], ['in-tr', 17], ['in-3464', 18], ['in-dl', 19], ['in-hr', 20], ['in-ch', 21], ['in-hp', 22], ['in-jk', 23], ['in-kl', 24], ['in-ka', 25], ['in-dn', 26], ['in-mh', 27], ['in-as', 28], ['in-ap', 29], ['in-ml', 30], ['in-pb', 31], ['in-rj', 32], ['in-up', 33], ['in-ut', 34], ['in-jh', 35]];\n\nclass CoronoMap extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      mapOptions: {},\n      mapdata: props.presentRegion === \"World\" ? world : india\n    };\n  }\n\n  componentDidMount() {\n    this.structureData();\n    this.setState({\n      mapOptions: {\n        chart: {\n          map: \"custom/in-all-disputed\",\n          height: 320\n        },\n        title: {\n          text: this.props.presentRegion + \" Map Plot with Cases\"\n        },\n        credits: {\n          enabled: false\n        },\n        mapNavigation: {\n          enabled: false,\n          buttonOptions: {\n            verticalAlign: \"bottom\"\n          }\n        },\n        series: [{\n          data: this.props.presentRegion === 'World' ? code.ref_country_codes : data,\n          mapData: this.state.mapdata,\n          name: this.props.presentRegion === 'World' ? 'Countries' : 'States',\n          states: {\n            hover: {\n              color: \"red\"\n            }\n          }\n        }]\n      }\n    });\n  }\n\n  structureData() {\n    this.props.data.countries.forEach(country => {\n      code.ref_country_codes.forEach(x => {\n        if (x.country.toLocaleLowerCase() === country.toLowerCase()) x[\"value\"] = parseInt(this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length - 1][1]).toLocaleString();\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-9 col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      id: \"expand\",\n      constructorType: 'mapChart',\n      highcharts: Highcharts,\n      options: this.state.mapOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default CoronoMap;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js"],"names":["React","Highcharts","HighchartsReact","highchartsMap","world","india","code","indiacodes","data","CoronoMap","Component","constructor","props","state","mapOptions","mapdata","presentRegion","componentDidMount","structureData","setState","chart","map","height","title","text","credits","enabled","mapNavigation","buttonOptions","verticalAlign","series","ref_country_codes","mapData","name","states","hover","color","countries","forEach","country","x","toLocaleLowerCase","toLowerCase","parseInt","confirmed","length","toLocaleString","render","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\r\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\nimport code from \"./../countrycordinates.json\";\r\nimport indiacodes from \"./../indiastatecodes.json\";\r\n\r\nhighchartsMap(Highcharts);\r\n\r\nvar data = [\r\n  ['in-5390', 0],\r\n  ['in-py', 1],\r\n  ['in-ld', 2],\r\n  ['in-an', 3],\r\n  ['in-wb', 4],\r\n  ['in-or', 5],\r\n  ['in-br', 6],\r\n  ['in-sk', 7],\r\n  ['in-ct', 8],\r\n  ['in-tn', 9],\r\n  ['in-mp', 10],\r\n  ['in-2984', 11],\r\n  ['in-ga', 12],\r\n  ['in-nl', 13],\r\n  ['in-mn', 14],\r\n  ['in-ar', 15],\r\n  ['in-mz', 16],\r\n  ['in-tr', 17],\r\n  ['in-3464', 18],\r\n  ['in-dl', 19],\r\n  ['in-hr', 20],\r\n  ['in-ch', 21],\r\n  ['in-hp', 22],\r\n  ['in-jk', 23],\r\n  ['in-kl', 24],\r\n  ['in-ka', 25],\r\n  ['in-dn', 26],\r\n  ['in-mh', 27],\r\n  ['in-as', 28],\r\n  ['in-ap', 29],\r\n  ['in-ml', 30],\r\n  ['in-pb', 31],\r\n  ['in-rj', 32],\r\n  ['in-up', 33],\r\n  ['in-ut', 34],\r\n  ['in-jh', 35]\r\n];\r\n\r\nclass CoronoMap extends React.Component{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state={mapOptions:{},mapdata:props.presentRegion === \"World\" ? world:india};\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.structureData();\r\n    this.setState({\r\n      mapOptions:{\r\n        chart: {\r\n          map: \"custom/in-all-disputed\",\r\n          height:320\r\n        },\r\n        title: {\r\n          text: this.props.presentRegion+\" Map Plot with Cases\"\r\n        },\r\n        \r\n        credits:{\r\n          enabled:false\r\n        },\r\n        mapNavigation: {\r\n          enabled: false,\r\n          buttonOptions: {\r\n            verticalAlign: \"bottom\"\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            data: this.props.presentRegion === 'World'?code.ref_country_codes:data,\r\n            mapData: this.state.mapdata,\r\n            name: this.props.presentRegion === 'World'?'Countries':'States',\r\n            states: {\r\n              hover: {\r\n                color: \"red\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n  });\r\n}\r\n\r\n  structureData()\r\n  {\r\n    this.props.data.countries.forEach(country=>{\r\n      code.ref_country_codes.forEach(x=>{\r\n         if(x.country.toLocaleLowerCase() === country.toLowerCase()) x[\"value\"] = parseInt(this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length-1][1]).toLocaleString();\r\n      })\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"col-xl-9 col-md-8\">\r\n              <div className=\"card\" style={{marginBottom:'30px'}}>\r\n                 <div className=\"card-body\">\r\n                    <HighchartsReact id=\"expand\" constructorType ={'mapChart'} highcharts={Highcharts} options={this.state.mapOptions} />\r\n                 </div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CoronoMap;"]},"metadata":{},"sourceType":"module"}
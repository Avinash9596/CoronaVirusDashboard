{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js\";\nimport React from \"react\";\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass Rates extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      active: {},\n      recovered: {},\n      deaths: {}\n    };\n  }\n\n  componentDidMount() {\n    this.structureData();\n  }\n\n  async structureData() {\n    console.log(this.props.data, \"cons\");\n    let data = []; //  let totalConfirmed = this.props.data.total.recovered[this.props.data.total.recovered.length-1];\n    //  let totalRecovered = this.props.data.total.recovered[this.props.data.total.recovered.length-1];\n    //  let totalDeaths = this.props.data.total.deaths[this.props.data.total.deaths.length-1];\n    //  let totalActive = totalConfirmed-totalRecovered-totalDeaths;\n    //find the highest active cases rate\n\n    Object.keys(this.props.data.data).forEach((x, index) => {\n      if (index == 0) {\n        data.push({\n          name: x,\n          percent: ((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] - this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] - this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1]) * 100).toFixed(2)\n        });\n        data.push({\n          name: x,\n          percent: (this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100).toFixed(2)\n        });\n        data.push({\n          name: x,\n          percent: (this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100).toFixed(2)\n        });\n      }\n    }); // Object.keys(this.props.data.data).forEach((x,index)=>{\n    //         if(index==0){\n    //             active[x]=this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1];\n    //             recovered[x]=this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1];\n    //             deaths[x]=this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1];\n    //         }\n    //         else{\n    //         if(parseInt(Object.values(active))< this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]){\n    //             active={};\n    //             active[x]=this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1];\n    //         }\n    //         if(parseInt(Object.values(recovered))< this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]){\n    //             recovered={};\n    //            recovered[x]=((this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100).toFixed(2);\n    //         }\n    //         if(parseInt(Object.values(deaths))< this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]){\n    //             deaths={};\n    //             deaths[x]=((this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100).toFixed(2);\n    //         }\n    //         }\n    // })  \n\n    console.log(\"\", data);\n    await this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-disabled\",\n      style: {\n        height: \"360px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Highest Active Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        border: \"2px solid rgb(124, 181, 236)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, this.state.data[0].name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"#ef3c3c\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, this.state.data[0].percent, \"%\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Highest Recovery Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        border: \"2px solid #009933\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, this.state.data[1].name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"#009933\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, this.state.data[1].percent, \"%\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Highest Death Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        border: \"2px solid red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, this.state.data[2].name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, this.state.data[2].percent, \"%\"))));\n  }\n\n}\n\nexport default Rates;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js"],"names":["React","ProgressBar","Rates","Component","constructor","state","active","recovered","deaths","componentDidMount","structureData","console","log","props","data","Object","keys","forEach","x","index","push","name","percent","confirmed","length","toFixed","setState","render","height","float","border","color"],"mappings":"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","sourcesContent":["import  React  from \"react\";\nimport {ProgressBar} from 'primereact/progressbar';\n\n\nclass Rates extends React.Component{\n    constructor()\n    {\n        super();\n        this.state={active:{},recovered:{},deaths:{}};\n    }\n\n    componentDidMount(){\n        this.structureData();\n    }\n\n   async structureData(){\n         console.log(this.props.data,\"cons\");\n         let data=[];\n        //  let totalConfirmed = this.props.data.total.recovered[this.props.data.total.recovered.length-1];\n        //  let totalRecovered = this.props.data.total.recovered[this.props.data.total.recovered.length-1];\n        //  let totalDeaths = this.props.data.total.deaths[this.props.data.total.deaths.length-1];\n\n        //  let totalActive = totalConfirmed-totalRecovered-totalDeaths;\n\n\n        //find the highest active cases rate\n        Object.keys(this.props.data.data).forEach((x,index)=>{\n            if(index==0){\n                data.push({name:x,percent:((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]-this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]-this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1])*100).toFixed(2)});\n                data.push({name:x,percent:((this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100).toFixed(2)});\n                data.push({name:x,percent:((this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100).toFixed(2)});\n\n            }\n        });\n        // Object.keys(this.props.data.data).forEach((x,index)=>{\n        //         if(index==0){\n        //             active[x]=this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1];\n        //             recovered[x]=this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1];\n        //             deaths[x]=this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1];\n        //         }\n        //         else{\n        //         if(parseInt(Object.values(active))< this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]){\n        //             active={};\n        //             active[x]=this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1];\n        //         }\n\n        //         if(parseInt(Object.values(recovered))< this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]){\n        //             recovered={};\n        //            recovered[x]=((this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100).toFixed(2);\n        //         }\n\n        //         if(parseInt(Object.values(deaths))< this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]){\n        //             deaths={};\n        //             deaths[x]=((this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100).toFixed(2);\n        //         }\n        //         }\n        // })  \n    console.log(\"\",data);\n    await this.setState({data:data});\n\n    }\n\n\n    render(){\n        return(\n            <div className=\"col-xl-3 col-md-12\">\n              <div className=\"card p-disabled\" style={{height:\"360px\"}}>\n                <div className=\"card-body\">\n                    <span style={{float:\"left\"}}>Highest Active Rate</span>\n                    <hr style={{border:\"2px solid rgb(124, 181, 236)\"}}></hr>\n                    <span style={{float:\"left\"}}>{this.state.data[0].name}</span>\n                    <span style={{float:\"right\",color:\"#ef3c3c\"}}>{this.state.data[0].percent}%</span>\n                    <br></br><br></br><br></br>\n                    <span style={{float:\"left\"}}>Highest Recovery Rate</span>\n                    <hr style={{border:\"2px solid #009933\"}}></hr>\n                    <span style={{float:\"left\"}}>{this.state.data[1].name}</span>\n                    <span style={{float:\"right\",color:\"#009933\"}}>{this.state.data[1].percent}%</span>\n                    <br></br><br></br><br></br>\n                    <span style={{float:\"left\"}}>Highest Death Rate</span>\n                    <hr style={{border:\"2px solid red\"}}></hr>\n                    <span style={{float:\"left\"}}>{this.state.data[2].name}</span>\n                    <span style={{float:\"right\",color:\"red\"}}>{this.state.data[2].percent}%</span>\n\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default Rates;"]},"metadata":{},"sourceType":"module"}
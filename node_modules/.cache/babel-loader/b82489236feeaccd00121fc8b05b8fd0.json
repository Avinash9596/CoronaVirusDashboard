{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js\";\nimport React from 'react';\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass AffectedCountries extends React.Component {\n  constructor(props) {\n    super();\n    console.log(\"props is\", props);\n    this.state = {\n      data: [],\n      name: ''\n    };\n  }\n\n  componentDidMount() {\n    this.sortData(this.props.data, this.props.presentRegion);\n  }\n\n  sortData(data, region) {\n    var totalCases = 0;\n    var obj = [],\n        name = \"\";\n\n    if (region === 'World') {\n      name = \"Countries\";\n      totalCases = data.Gloabal.TotalConfirmed;\n      obj = data.Countries.splice(0, 5);\n      obj.forEach(element => {\n        element[\"percentage\"] = element.cases / totalCases[0].cases * 100;\n        element[\"place\"] = element.country;\n      });\n    } else {\n      let ar = [];\n      data.forEach(x => {\n        ar.push(parseInt(x.noOfCases));\n        totalCases += x.noOfCases;\n      });\n      ar.sort(function (a, b) {\n        return b - a;\n      });\n      ar.forEach(x => {\n        data.forEach(elem => {\n          if (elem.noOfCases == x) obj.push({\n            place: elem.state,\n            cases: x,\n            percentage: x / totalCases * 100\n          });\n        });\n      });\n      obj = obj.splice(0, 5);\n      name = \"States\";\n    }\n\n    this.setState({\n      data: obj,\n      name: name\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: '360px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"5 Most Affected \", this.state.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, this.state.data.map(name => /*#__PURE__*/React.createElement(\"div\", {\n      key: name.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }\n    }, name.place), \"  \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 75\n      }\n    }, name.cases.toLocaleString()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 141\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      value: name.percentage,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }\n    }))))));\n  }\n\n}\n\nexport default AffectedCountries;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js"],"names":["React","ProgressBar","AffectedCountries","Component","constructor","props","console","log","state","data","name","componentDidMount","sortData","presentRegion","region","totalCases","obj","Gloabal","TotalConfirmed","Countries","splice","forEach","element","cases","country","ar","x","push","parseInt","noOfCases","sort","a","b","elem","place","percentage","setState","render","height","map","float","toLocaleString"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\n\r\nclass AffectedCountries extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        console.log(\"props is\",props)\r\n        this.state={\r\n           data:[],\r\n           name:'',\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.sortData(this.props.data,this.props.presentRegion);       \r\n    }\r\n\r\n    sortData(data,region)\r\n    {\r\n        var totalCases =0; var obj=[],name=\"\";\r\n        if(region === 'World'){\r\n           name=\"Countries\";\r\n           totalCases = data.Gloabal.TotalConfirmed;\r\n           obj=data.Countries.splice(0,5);\r\n           obj.forEach(element => {\r\n             element[\"percentage\"] = (element.cases/totalCases[0].cases)*100;\r\n             element[\"place\"] = element.country;\r\n           });\r\n        }\r\n        else{\r\n          let ar =[];\r\n           data.forEach(x=>{\r\n             ar.push(parseInt(x.noOfCases));\r\n             totalCases+=x.noOfCases;\r\n           });\r\n           ar.sort(function(a, b){return b - a}); \r\n           ar.forEach(x=>{\r\n             data.forEach(elem =>{\r\n               if(elem.noOfCases == x) obj.push({place: elem.state,cases:x,percentage:(x/totalCases)*100});\r\n             })\r\n           })\r\n           obj = obj.splice(0,5);\r\n           name=\"States\";\r\n           \r\n        }\r\n\r\n        this.setState({data: obj,name:name});\r\n  \r\n        \r\n      }\r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div className=\"col-xl-3 col-md-4\">\r\n              <div className=\"card\" style={{height:'360px'}}>\r\n                <div className=\"card-header\">5 Most Affected {this.state.name}</div>\r\n                <div className=\"card-body\">\r\n                  { this.state.data.map(name => ( \r\n                     <div key={name.country}>\r\n                       <span  style={{float:'left'}}>{name.place}</span>  <span style={{float:\"right\"}}>{name.cases.toLocaleString()}</span><br></br>\r\n                       <ProgressBar value={name.percentage} showValue ={false} style={{height:'5px'}} />\r\n                       <br></br>\r\n                     </div>   ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AffectedCountries;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js\";\nimport React from 'react';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\nimport 'primeicons/primeicons.css';\nimport DataContext from './../dataContext'; //service to get districts data\n\nimport DistrictData from '../services/coronadata.service';\n\nclass tableData extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getDistrictData = async data => {\n      try {\n        if (this.context.presentRegion === \"World\") return; //for in case of India \n\n        let obj = [];\n        let districtdata = sessionStorage.getItem(\"districtdata\") != undefined ? JSON.parse(sessionStorage.getItem(\"districtdata\")) : await DistrictData.getDistrictWiseData();\n        Object.keys(districtdata[data].districtData).forEach(x => {\n          obj.push({\n            name: x,\n            active: districtdata[data].districtData[x].active,\n            deaths: districtdata[data].districtData[x].deceased,\n            recovered: districtdata[data].districtData[x].recovered,\n            cases: districtdata[data].districtData[x].confirmed\n          });\n        });\n        await this.setState({\n          districtData: obj,\n          flag: true,\n          tempdistrictObj: obj,\n          presentState: data + \" - District Wise Status\"\n        });\n        if (sessionStorage.getItem(\"districtdata\") == undefined) sessionStorage.setItem(\"districtdata\", JSON.stringify(districtdata)); // scroll to the specified district table\n\n        var element = document.querySelector(\"#district\");\n        element.scrollIntoView();\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getFilteredData = async (name, searchIn) => {\n      let obj = [];\n\n      try {\n        if (searchIn !== 'district') {\n          this.state.tempObj.forEach(x => {\n            if (x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x);\n          });\n          await this.setState({\n            data: obj\n          });\n          return;\n        } else {\n          this.state.tempdistrictObj.forEach(x => {\n            if (x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x);\n          });\n          await this.setState({\n            districtData: obj\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      data: [],\n      districtData: [],\n      name: props.presentRegion === \"World\" ? \"Country\" : \"State\"\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    try {\n      //filter and structure data\n      await this.setState({\n        data: this.context.data.tableData,\n        tempObj: this.context.data.tableData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const name = this.context.presentRegion === \"World\" ? \"Country\" : \"State\";\n    let districtTable;\n    const header = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"headertext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }, name, \" Wise Status\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 col-xl-3\",\n      className: \"p-datatable-globalfilter-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-input-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        fontSize: \"1rem\",\n        position: \"absolute\",\n        display: \"inline-block\",\n        top: \"20px\",\n        marginLeft: \"0.5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      style: {\n        paddingLeft: \"1.8rem\"\n      },\n      onChange: e => this.getFilteredData(e.target.value, \"\"),\n      placeholder: \"Search By Place Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }\n    }))));\n    const districttableheader = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"headertext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, this.state.presentState), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 col-xl-3\",\n      className: \"p-datatable-globalfilter-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"p-input-icon-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search\",\n      style: {\n        fontSize: \"1rem\",\n        position: \"absolute\",\n        display: \"inline-block\",\n        top: \"20px\",\n        marginLeft: \"0.5%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      type: \"search\",\n      style: {\n        paddingLeft: \"1.8rem\"\n      },\n      onChange: e => this.getFilteredData(e.target.value, \"district\"),\n      placeholder: \"Search By Place Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }))));\n\n    if (this.context.presentRegion === 'India' && this.state.flag) {\n      districtTable = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"datatable\",\n        id: \"districttable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        id: \"district\",\n        className: \"p-datatable-places\",\n        emptyMessage: \"No records found\",\n        responsive: true,\n        style: {\n          border: 'none'\n        },\n        header: districttableheader,\n        value: this.state.districtData,\n        paginator: true,\n        rows: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        body: this.dateTemplate = rowData => {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 75\n            }\n          }, rowData.name);\n        },\n        header: \"District\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"cases\",\n        header: \"Confirmed\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"active\",\n        header: \"Active\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"recovered\",\n        header: \"Recovered\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"deaths\",\n        header: \"Deaths\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 10\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-12 datatable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      onRowClick: event => this.getDistrictData(event.data.name),\n      className: \"p-datatable-places\",\n      rowHover: true,\n      emptyMessage: \"No records found\",\n      header: header,\n      value: this.state.data,\n      responsive: true,\n      paginator: true,\n      rows: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"name\",\n      header: this.state.name,\n      sortable: true,\n      body: rowData => {\n        let textdecoration = \"underline\";\n        if (this.state.name === 'Country') textdecoration = \"none\";\n        return /*#__PURE__*/React.createElement(\"span\", {\n          title: \"Click to get District Wise Data\",\n          style: {\n            fontWeight: \"550\",\n            textDecoration: textdecoration,\n            color: \"#337ab7\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }\n        }, rowData.name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"cases\",\n      body: rowData => {\n        let changes;\n        if (rowData.changeinConfirmed !== 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n          title: \"Change since yesterday\",\n          className: \"fa fa-arrow-up\",\n          style: {\n            fontWeight: '500',\n            color: \"#ef3c3c\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 69\n          }\n        }, rowData.changeinConfirmed);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 30\n          }\n        }, rowData.cases, \" \\xA0\\xA0\\xA0\", changes);\n      },\n      header: \"Confirmed\",\n      sortable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"active\",\n      header: \"Active\",\n      body: rowData => {\n        let changes;\n\n        if (rowData.changeinActive !== 0) {\n          if (rowData.changeinActive > 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#ef3c3c\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 38\n            }\n          }, rowData.changeinActive);else changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-down\",\n            style: {\n              fontWeight: '500',\n              color: \"#009933\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 38\n            }\n          }, -rowData.changeinActive);\n        }\n\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }\n        }, rowData.active, \"\\xA0\\xA0\\xA0\", changes);\n      },\n      sortable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"recovered\",\n      header: \"Recovered\",\n      body: rowData => {\n        let changes;\n        if (rowData.changeinRecovered !== 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n          title: \"Change since yesterday\",\n          className: \"fa fa-arrow-up\",\n          style: {\n            fontWeight: '500',\n            color: \"#009933\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 68\n          }\n        }, rowData.changeinRecovered);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }\n        }, rowData.recovered, \"\\xA0\\xA0\\xA0\", changes);\n      },\n      sortable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"deaths\",\n      body: rowData => {\n        let changes;\n        if (rowData.changeinDeaths !== 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n          title: \"Change since yesterday\",\n          className: \"fa fa-arrow-up\",\n          style: {\n            fontWeight: '500',\n            color: \"#ef3c3c\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 66\n          }\n        }, rowData.changeinDeaths);\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        }, rowData.deaths, \"\\xA0\\xA0\\xA0\", changes);\n      },\n      header: \"Deaths\",\n      sortable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }), districtTable);\n  }\n\n}\n\ntableData.contextType = DataContext;\nexport default tableData;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js"],"names":["React","DataTable","Column","InputText","DataContext","DistrictData","tableData","Component","constructor","props","getDistrictData","data","context","presentRegion","obj","districtdata","sessionStorage","getItem","undefined","JSON","parse","getDistrictWiseData","Object","keys","districtData","forEach","x","push","name","active","deaths","deceased","recovered","cases","confirmed","setState","flag","tempdistrictObj","presentState","setItem","stringify","element","document","querySelector","scrollIntoView","err","console","log","getFilteredData","searchIn","state","tempObj","toLowerCase","includes","componentDidMount","getData","render","districtTable","header","fontSize","position","display","top","marginLeft","paddingLeft","e","target","value","districttableheader","border","dateTemplate","rowData","fontWeight","event","textdecoration","textDecoration","color","changes","changeinConfirmed","changeinActive","changeinRecovered","changeinDeaths","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport 'primereact/resources/themes/nova-light/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport DataContext from './../dataContext';\r\n\r\n//service to get districts data\r\nimport DistrictData from '../services/coronadata.service';\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n  static contextType = DataContext;\r\n\r\n    constructor(props)\r\n    {\r\n      super();\r\n      this.state={data:[],districtData:[],name:props.presentRegion === \"World\" ? \"Country\" :\"State\"};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.getData();\r\n    }\r\n\r\n    async getData(){\r\n      try{\r\n        //filter and structure data\r\n        await this.setState({data:this.context.data.tableData,tempObj:this.context.data.tableData});\r\n      }\r\n      catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    getDistrictData = async(data) =>{\r\n\r\n      try{\r\n\r\n        if(this.context.presentRegion === \"World\") return;    \r\n        //for in case of India \r\n        let obj =[];\r\n        let districtdata = sessionStorage.getItem(\"districtdata\")!= undefined?JSON.parse(sessionStorage.getItem(\"districtdata\")):await DistrictData.getDistrictWiseData();\r\n\r\n        Object.keys(districtdata[data].districtData).forEach(x=>{    \r\n        obj.push({name:x,active:districtdata[data].districtData[x].active,deaths:districtdata[data].districtData[x].deceased,recovered:districtdata[data].districtData[x].recovered,cases:districtdata[data].districtData[x].confirmed})    \r\n        })\r\n\r\n        await this.setState({districtData:obj,flag:true,tempdistrictObj:obj,presentState:data+\" - District Wise Status\"})\r\n\r\n        if(sessionStorage.getItem(\"districtdata\") == undefined)  \r\n            sessionStorage.setItem(\"districtdata\",JSON.stringify(districtdata));\r\n\r\n        // scroll to the specified district table\r\n        var element = document.querySelector(\"#district\");\r\n        element.scrollIntoView();\r\n      }\r\n      catch(err){\r\n          console.log(err);\r\n      }\r\n    }\r\n\r\n    //GLOBAL SEARCH FUNCTIONALITY\r\n    getFilteredData=async(name,searchIn)=>{\r\n            let obj =[];\r\n            try{\r\n            if(searchIn !== 'district'){\r\n                this.state.tempObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({data:obj})\r\n                return;\r\n            }\r\n            else{\r\n                this.state.tempdistrictObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({districtData:obj})\r\n            }\r\n            }\r\n            catch(err){console.log(err);}\r\n    }\r\n\r\n    render(){\r\n      \r\n        const name = this.context.presentRegion === \"World\"?\"Country\":\"State\";\r\n        let districtTable;\r\n            \r\n        const header = <div className=\"headerdiv\">\r\n         <span className=\"headertext\">{name} Wise Status</span>\r\n         <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n           <span className=\"p-input-icon-left\"><i className=\"pi pi-search\" style={{fontSize:\"1rem\",position:\"absolute\",display:\"inline-block\",top:\"20px\",marginLeft:\"0.5%\"}}></i>\r\n             <InputText type=\"search\" style={{paddingLeft:\"1.8rem\"}} onChange={(e)=>this.getFilteredData(e.target.value,\"\")} placeholder=\"Search By Place Name\" />\r\n           </span>\r\n         </div>\r\n        </div>\r\n\r\n        const districttableheader = <div className=\"headerdiv\">\r\n        <span className=\"headertext\">{this.state.presentState}</span>\r\n        <div  className=\"col-sm-12 col-xl-3\"  className=\"p-datatable-globalfilter-container\">\r\n            <span className=\"p-input-icon-left\"><i className=\"pi pi-search\" style={{fontSize:\"1rem\",position:\"absolute\",display:\"inline-block\",top:\"20px\",marginLeft:\"0.5%\"}}></i>\r\n               <InputText type=\"search\" style={{paddingLeft:\"1.8rem\"}} onChange={(e)=>this.getFilteredData(e.target.value,\"district\")} placeholder=\"Search By Place Name\" />\r\n            </span>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        if(this.context.presentRegion === 'India' && this.state.flag){\r\n         districtTable = \r\n         <div className=\"datatable\" id=\"districttable\">\r\n         <DataTable id=\"district\" className=\"p-datatable-places\" emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header={districttableheader} value={this.state.districtData}  paginator rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <span style={{fontWeight:\"bold\"}}>{rowData.name}</span>}} header=\"District\" sortable={true} />\r\n         <Column field=\"cases\"  header=\"Confirmed\" sortable={true}  />\r\n         <Column field=\"active\" header=\"Active\" sortable={true}  />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true}/>\r\n         </DataTable>\r\n         </div>\r\n        }\r\n        \r\n        return(\r\n            <div className=\"col-sm-12 datatable\">\r\n              <DataTable onRowClick ={(event)=>this.getDistrictData(event.data.name)} className=\"p-datatable-places\" rowHover emptyMessage=\"No records found\" header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 <Column field=\"name\" header={this.state.name} sortable={true} body={(rowData)=>{\r\n                     let textdecoration=\"underline\"; \r\n                     if(this.state.name === 'Country') textdecoration=\"none\";\r\n                     return <span title=\"Click to get District Wise Data\" style={{fontWeight:\"550\",textDecoration:textdecoration,color:\"#337ab7\"}}>{rowData.name}</span>}} />     \r\n                 <Column field=\"cases\" body={(rowData)=>{\r\n                      let changes;\r\n                      if(rowData.changeinConfirmed !== 0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinConfirmed}</span>\r\n                      return <span>{rowData.cases} &nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Confirmed\" sortable={true}  />\r\n                 <Column field=\"active\" header=\"Active\" body ={(rowData) => {\r\n                     let changes;\r\n                     if(rowData.changeinActive !== 0) {\r\n                         if(rowData.changeinActive >0)\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinActive}</span> \r\n                         else\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-down\" style={{fontWeight:'500',color:\"#009933\"}}>{-rowData.changeinActive}</span>\r\n                     }\r\n                     return <span>{rowData.active}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"recovered\" header=\"Recovered\"  body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinRecovered !== 0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#009933\"}}>{rowData.changeinRecovered}</span> \r\n                     return <span>{rowData.recovered}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"deaths\" body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinDeaths !== 0)  changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinDeaths}</span>\r\n                 return <span>{rowData.deaths}&nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Deaths\" sortable={true}  />\r\n                 \r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/ColumnGraph.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts/highcharts';\nimport drilldown from 'highcharts/modules/drilldown.js';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TabView, TabPanel } from 'primereact/tabview';\ndrilldown(Highcharts);\nconst indexObject = {\n  0: 'confirmed',\n  1: \"recovered\",\n  2: \"deaths\"\n};\n\nclass ColumnGraph extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      options: {},\n      activeIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    this.structureData(0);\n  }\n\n  structureData(index) {\n    if (index == this.state.activeIndex) return;\n\n    try {\n      let data = this.props.data.total[indexObject[index]];\n      let i = 0,\n          DaysInMonths = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n      let nameOfMonths = {\n        0: \"Jan\",\n        1: \"Feb\",\n        2: \"March\",\n        3: \"Apr\",\n        4: \"May\",\n        5: \"Jun\",\n        6: \"Jul\",\n        7: \"Aug\",\n        8: \"Sept\",\n        9: \"Oct\",\n        10: \"Nov\",\n        11: \"Dec\"\n      };\n      let obj = [],\n          month = 0,\n          prevdata = 0,\n          ddrObject = [],\n          daysdata = [],\n          daysPrevData = 0;\n      data.forEach((element, index) => {\n        month = new Date(element[0]).toISOString().split(\"-\")[1];\n        daysPrevData = 0;\n        if (index > 0) daysPrevData += data[index - 1][1];\n        daysdata.push([new Date(element[0]).toISOString().split(\"-\")[2].split(\"T\")[0], element[1] - daysPrevData]);\n\n        if (new Date(element[0]).toISOString().split(\"-\")[2].split(\"T\")[0] == DaysInMonths[month - 1]) {\n          ddrObject.push({\n            name: nameOfMonths[month - 1],\n            \"id\": i.toString(),\n            \"data\": daysdata\n          });\n          daysdata = [];\n          if (i > 0) prevdata += obj[i - 1].y;\n          obj[i] = {\n            name: nameOfMonths[month - 1],\n            \"y\": element[1] - prevdata,\n            drilldown: i.toString()\n          };\n          i++;\n        } else if (index == data.length - 1) {\n          prevdata += obj[i - 1].y;\n          ddrObject.push({\n            name: nameOfMonths[month - 1],\n            \"id\": i.toString(),\n            \"data\": daysdata\n          });\n          daysdata = [];\n          obj[i] = {\n            name: nameOfMonths[month - 1],\n            \"y\": element[1] - prevdata,\n            drilldown: i.toString()\n          };\n        }\n      });\n      this.setState({\n        activeIndex: index,\n        options: {\n          chart: {\n            type: 'column',\n            height: 368\n          },\n          title: {\n            text: this.props.presentRegion + ' Coronovirus Cases, 2020'\n          },\n          subtitle: {\n            text: 'Monthly/Daily Cases'\n          },\n          xAxis: {\n            type: 'category'\n          },\n          yAxis: {\n            title: {\n              text: 'Cases'\n            }\n          },\n          legend: {\n            enabled: false\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {\n            series: {\n              borderWidth: 0,\n              dataLabels: {\n                enabled: true,\n                format: '{point.y}'\n              }\n            }\n          },\n          accessibility: {\n            announceNewData: {\n              enabled: true\n            }\n          },\n          tooltip: {\n            enabled: true,\n            formatter: function () {\n              return this.series.name + \" <b>\" + this.point.name + \"</b><br/>\" + indexObject[index] + \":<b>\" + this.point.y.toLocaleString() + \"</b>\";\n            },\n            useHTML: true\n          },\n          series: [{\n            name: \"Month\",\n            data: obj\n          }],\n          drilldown: {\n            name: \"Dates\",\n            series: ddrObject\n          }\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div className=\"card\">\n      //     <div className=\"card-header\">\n      //         <span onClick={()=>this.structureData(\"confirmed\")}>Confirmed</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span onClick={()=>this.structureData(\"recovered\")}>Recovered</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span onClick={()=>this.structureData(\"deaths\")}>Deaths</span>\n      //     </div>\n      //     <hr></hr>\n      //     <div className=\"card-body\">\n      //       <HighchartsReact highcharts={Highcharts} options={this.state.options} />\n      //     </div>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(TabView, {\n        activeIndex: this.state.activeIndex,\n        onTabChange: e => this.structureData(e.index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Confirmed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        options: this.state.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Recovered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        options: this.state.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(TabPanel, {\n        header: \"Deaths\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        options: this.state.options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 26\n        }\n      })))))\n    );\n  }\n\n}\n\nexport default ColumnGraph;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/ColumnGraph.js"],"names":["React","Highcharts","drilldown","HighchartsReact","TabView","TabPanel","indexObject","ColumnGraph","Component","constructor","props","state","options","activeIndex","componentDidMount","structureData","index","data","total","i","DaysInMonths","nameOfMonths","obj","month","prevdata","ddrObject","daysdata","daysPrevData","forEach","element","Date","toISOString","split","push","name","toString","y","length","setState","chart","type","height","title","text","presentRegion","subtitle","xAxis","yAxis","legend","enabled","credits","plotOptions","series","borderWidth","dataLabels","format","accessibility","announceNewData","tooltip","formatter","point","toLocaleString","useHTML","err","console","log","render","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts/highcharts';\r\nimport drilldown from 'highcharts/modules/drilldown.js'\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { TabView,TabPanel } from 'primereact/tabview';\r\n\r\n\r\n\r\ndrilldown(Highcharts);\r\n\r\nconst indexObject={0:'confirmed',1:\"recovered\",2:\"deaths\"};\r\n\r\nclass ColumnGraph extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n        options: {},\r\n        activeIndex:0\r\n       }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.structureData(0);\r\n    }\r\n\r\n    structureData(index)\r\n    { \r\n       \r\n      if(index == this.state.activeIndex ) return;\r\n      try{\r\n        let data =this.props.data.total[indexObject[index]];\r\n\r\n        let i=0,DaysInMonths =[31,29,31,30,31,30,31,31,30,31,30,31];\r\n        let nameOfMonths = {0:\"Jan\",1:\"Feb\",2:\"March\",3:\"Apr\",4:\"May\",5:\"Jun\",6:\"Jul\",7:\"Aug\",8:\"Sept\",9:\"Oct\",10:\"Nov\",11:\"Dec\"}\r\n\r\n        let obj =[],month=0,prevdata=0,ddrObject=[],daysdata=[],daysPrevData=0;\r\n\r\n\r\n        data.forEach((element,index) => {\r\n            month = new Date(element[0]).toISOString().split(\"-\")[1];\r\n            daysPrevData = 0;\r\n\r\n            if(index>0)\r\n                daysPrevData+=data[index-1][1];\r\n        \r\n            daysdata.push([new Date(element[0]).toISOString().split(\"-\")[2].split(\"T\")[0],element[1]-daysPrevData]);\r\n\r\n            if(new Date(element[0]).toISOString().split(\"-\")[2].split(\"T\")[0] == DaysInMonths[month-1]){\r\n\r\n                ddrObject.push({name:nameOfMonths[month-1],\"id\":i.toString(),\"data\":daysdata});\r\n                daysdata=[];\r\n                if(i>0) prevdata+=obj[i-1].y;\r\n\r\n                obj[i]={name:nameOfMonths[month-1],\"y\":element[1]-prevdata,drilldown:i.toString()};\r\n\r\n                i++;\r\n            }\r\n            else if(index == data.length-1){\r\n                prevdata+=obj[i-1].y;\r\n                ddrObject.push({name:nameOfMonths[month-1],\"id\":i.toString(),\"data\":daysdata});\r\n                daysdata=[];\r\n                obj[i] = {name:nameOfMonths[month-1],\"y\":element[1]-prevdata,drilldown:i.toString()};\r\n            }      \r\n        });\r\n\r\n        this.setState({\r\n            activeIndex:index,\r\n            options: {\r\n                chart: {\r\n                    type: 'column',\r\n                    height:368\r\n                },\r\n                title: {\r\n                    text: this.props.presentRegion+' Coronovirus Cases, 2020'\r\n                },\r\n                subtitle: {\r\n                    text: 'Monthly/Daily Cases'\r\n                },\r\n                \r\n                xAxis: {\r\n                    type: 'category',\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: 'Cases'\r\n                    }\r\n                },\r\n                legend: {\r\n                    enabled: false\r\n                },\r\n                credits:{\r\n                    enabled:false\r\n                },\r\n                plotOptions: {\r\n                    series: {\r\n                        borderWidth: 0,\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '{point.y}'\r\n                        }\r\n                    }\r\n                },\r\n                accessibility: {\r\n                    announceNewData: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled:true,\r\n                    formatter: function() {\r\n                        return this.series.name+\" <b>\"+this.point.name+\"</b><br/>\" +indexObject[index]+\":<b>\"+(this.point.y).toLocaleString()+\"</b>\"\r\n                    },\r\n                     useHTML:true\r\n                },\r\n            \r\n                series: [\r\n                    {\r\n                       name:\"Month\", \r\n                        data:obj,\r\n                    }\r\n                ],\r\n                drilldown: {\r\n                    name:\"Dates\",\r\n                    series: ddrObject\r\n                }\r\n            }\r\n        });\r\n       }\r\n       catch(err)\r\n       {\r\n           console.log(err);\r\n       }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            // <div className=\"card\">\r\n            //     <div className=\"card-header\">\r\n            //         <span onClick={()=>this.structureData(\"confirmed\")}>Confirmed</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span onClick={()=>this.structureData(\"recovered\")}>Recovered</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span onClick={()=>this.structureData(\"deaths\")}>Deaths</span>\r\n            //     </div>\r\n            //     <hr></hr>\r\n            //     <div className=\"card-body\">\r\n                 \r\n            //       <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n            //     </div>\r\n            // </div>\r\n            \r\n            <div className=\"card\">\r\n              \r\n               <div className=\"card-body column\">\r\n                    <TabView  activeIndex={this.state.activeIndex} onTabChange={(e)=>this.structureData(e.index)}>\r\n                        <TabPanel header=\"Confirmed\">\r\n                            <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                        </TabPanel>\r\n                        <TabPanel header=\"Recovered\">\r\n                        <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n\r\n                        </TabPanel>\r\n                        <TabPanel header=\"Deaths\">\r\n                         <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n\r\n                        </TabPanel>\r\n                    </TabView>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColumnGraph;"]},"metadata":{},"sourceType":"module"}
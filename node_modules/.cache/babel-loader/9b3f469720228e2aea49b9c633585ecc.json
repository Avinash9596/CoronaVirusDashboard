{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js\";\nimport React, { useState } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\n\nclass tableData extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getDistrictData = async data => {\n      let obj = [];\n      const fetcher = await fetch(\"https://api.covid19india.org/state_district_wise.json\");\n      const response = await fetcher.json();\n      console.log(response);\n      Object.keys(response[data].districtData).forEach(x => {\n        obj.push({\n          name: x,\n          active: response[data].districtData[x].active,\n          deaths: response[data].districtData[x].deceased,\n          recovered: response[data].districtData[x].recovered,\n          cases: response[data].districtData[x].confirmed\n        });\n      });\n      await this.setState({\n        districtData: obj\n      });\n    };\n\n    this.render = () => {\n      let column, districtTable;\n\n      const header = () => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, \"List of Customers\", /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-datatable-globalfilter-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(InputText, {\n          type: \"search\",\n          onInput: e => setGlobalFilter(e.target.value),\n          placeholder: \"Global Search\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }\n        })));\n      };\n\n      if (this.props.presentRegion === 'India') {\n        districtTable = /*#__PURE__*/React.createElement(DataTable, {\n          emptyMessage: \"No records found\",\n          responsive: true,\n          style: {\n            border: 'none'\n          },\n          header: \"- All Districts\",\n          value: this.state.districtData,\n          paginator: true,\n          rows: 10,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.getDistrictData(rowData.name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 75\n              }\n            }, rowData.name);\n          },\n          header: \"District\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"cases\",\n          header: \"Confirmed\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"active\",\n          header: \"Active\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"recovered\",\n          header: \"Recovered\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"deaths\",\n          header: \"Deaths\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 10\n          }\n        }));\n        column = /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.getDistrictData(rowData.name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 83\n              }\n            }, rowData.name);\n          },\n          header: \"Country\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 18\n          }\n        });\n      } else column = /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Country\",\n        sortable: true,\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 22\n        }\n      });\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        emptyMessage: \"No records found\",\n        globalFilter: globalFilter,\n        style: {\n          border: 'none'\n        },\n        header: header,\n        value: this.state.data,\n        responsive: true,\n        paginator: true,\n        rows: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }, column, /*#__PURE__*/React.createElement(Column, {\n        field: \"cases\",\n        header: \"Confirmed\",\n        sortable: true,\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"active\",\n        header: \"Active\",\n        sortable: true,\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"recovered\",\n        header: \"Recovered\",\n        sortable: true,\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"deaths\",\n        header: \"Deaths\",\n        sortable: true,\n        filter: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 18\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }), districtTable);\n    };\n\n    const [_globalFilter, _setGlobalFilter] = useState(null);\n    console.log(props);\n    this.state = {\n      data: [],\n      districtData: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let obj = [];\n    this.props.data.countries.forEach(element => {\n      let confirmed = this.props.data.data[element].confirmed;\n      let deaths = this.props.data.data[element].deaths;\n      let recovered = this.props.data.data[element].recovered;\n      obj.push({\n        \"name\": element,\n        \"cases\": confirmed[confirmed.length - 1][1],\n        \"deaths\": deaths[deaths.length - 1][1],\n        \"recovered\": recovered[recovered.length - 1][1],\n        \"active\": confirmed[confirmed.length - 1][1] - deaths[deaths.length - 1][1] - recovered[recovered.length - 1][1]\n      });\n    });\n    this.setState({\n      data: obj\n    });\n  }\n\n}\n\nexport default tableData;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js"],"names":["React","useState","DataTable","Column","InputText","tableData","Component","constructor","props","getDistrictData","data","obj","fetcher","fetch","response","json","console","log","Object","keys","districtData","forEach","x","push","name","active","deaths","deceased","recovered","cases","confirmed","setState","render","column","districtTable","header","e","setGlobalFilter","target","value","presentRegion","border","state","dateTemplate","rowData","globalFilter","componentDidMount","getData","countries","element","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;;AAOA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI;;AADJ,SAiCAC,eAjCA,GAiCkB,MAAMC,IAAN,IAAc;AAC/B,UAAIC,GAAG,GAAE,EAAT;AACD,YAAMC,OAAO,GAAE,MAAMC,KAAK,CAAC,uDAAD,CAA1B;AACA,YAAMC,QAAQ,GAAE,MAAMF,OAAO,CAACG,IAAR,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,MAAAA,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAACJ,IAAD,CAAR,CAAeU,YAA3B,EAAyCC,OAAzC,CAAiDC,CAAC,IAAE;AAE9CX,QAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,UAAAA,IAAI,EAACF,CAAN;AAAQG,UAAAA,MAAM,EAACX,QAAQ,CAACJ,IAAD,CAAR,CAAeU,YAAf,CAA4BE,CAA5B,EAA+BG,MAA9C;AAAqDC,UAAAA,MAAM,EAACZ,QAAQ,CAACJ,IAAD,CAAR,CAAeU,YAAf,CAA4BE,CAA5B,EAA+BK,QAA3F;AAAoGC,UAAAA,SAAS,EAACd,QAAQ,CAACJ,IAAD,CAAR,CAAeU,YAAf,CAA4BE,CAA5B,EAA+BM,SAA7I;AAAuJC,UAAAA,KAAK,EAACf,QAAQ,CAACJ,IAAD,CAAR,CAAeU,YAAf,CAA4BE,CAA5B,EAA+BQ;AAA5L,SAAT;AAEL,OAJD;AAMA,YAAM,KAAKC,QAAL,CAAc;AAACX,QAAAA,YAAY,EAACT;AAAd,OAAd,CAAN;AAGC,KA/CD;;AAAA,SAiDAqB,MAjDA,GAiDS,MAAK;AACV,UAAIC,MAAJ,EAAWC,aAAX;;AACA,YAAMC,MAAM,GAAG,MAAM;AACjB,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEI;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAGC,CAAD,IAAOC,eAAe,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAxD;AAA0E,UAAA,WAAW,EAAC,eAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAFJ,CADJ;AAQH,OATD;;AAYA,UAAG,KAAK/B,KAAL,CAAWgC,aAAX,KAA6B,OAAhC,EAAwC;AACvCN,QAAAA,aAAa,gBAAG,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAC,kBAAxB;AAA2C,UAAA,UAAU,EAAE,IAAvD;AAA6D,UAAA,KAAK,EAAE;AAACO,YAAAA,MAAM,EAAC;AAAR,WAApE;AAAqF,UAAA,MAAM,EAAC,iBAA5F;AAA8G,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWtB,YAAhI;AAA+I,UAAA,SAAS,EAAE,IAA1J;AAAgK,UAAA,IAAI,EAAE,EAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAChB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAsB,UAAA,IAAI,EAAE,KAAKuB,YAAL,GAAmBC,OAAD,IAAW;AAAC,gCAAO;AAAG,cAAA,OAAO,EAAE,MAAM,KAAKnC,eAAL,CAAqBmC,OAAO,CAACpB,IAA7B,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAuDoB,OAAO,CAACpB,IAA/D,CAAP;AAAgF,WAA1I;AAA4I,UAAA,MAAM,EAAC,UAAnJ;AAA8J,UAAA,QAAQ,EAAE,IAAxK;AAA8K,UAAA,MAAM,EAAE,IAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,eAEhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,MAAM,EAAC,WAA7B;AAAyC,UAAA,QAAQ,EAAE,IAAnD;AAAyD,UAAA,MAAM,EAAE,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFgB,eAGhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAuD,UAAA,MAAM,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHgB,eAIhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,MAAM,EAAC,WAAjC;AAA6C,UAAA,QAAQ,EAAE,IAAvD;AAA6D,UAAA,MAAM,EAAE,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJgB,eAKhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAuD,UAAA,MAAM,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALgB,CAAhB;AAOAS,QAAAA,MAAM,gBAAE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAsB,UAAA,IAAI,EAAE,KAAKU,YAAL,GAAmBC,OAAD,IAAW;AAAC,gCAAO;AAAG,cAAA,OAAO,EAAE,MAAM,KAAKnC,eAAL,CAAqBmC,OAAO,CAACpB,IAA7B,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAuDoB,OAAO,CAACpB,IAA/D,CAAP;AAAgF,WAA1I;AAA4I,UAAA,MAAM,EAAC,SAAnJ;AAA6J,UAAA,QAAQ,EAAE,IAAvK;AAA6K,UAAA,MAAM,EAAE,IAArL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACA,OATD,MAUKS,MAAM,gBAAE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,SAA5B;AAAsC,QAAA,QAAQ,EAAE,IAAhD;AAAsD,QAAA,MAAM,EAAE,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;;AAEL,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAC,kBAAxB;AAA2C,QAAA,YAAY,EAAEY,YAAzD;AAAuE,QAAA,KAAK,EAAE;AAACJ,UAAAA,MAAM,EAAC;AAAR,SAA9E;AAA+F,QAAA,MAAM,EAAEN,MAAvG;AAA+G,QAAA,KAAK,EAAE,KAAKO,KAAL,CAAWhC,IAAjI;AAAuI,QAAA,UAAU,EAAE,IAAnJ;AAAyJ,QAAA,SAAS,EAAE,IAApK;AAA0K,QAAA,IAAI,EAAE,EAAhL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIuB,MADJ,eAEG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,MAAM,EAAC,WAA7B;AAAyC,QAAA,QAAQ,EAAE,IAAnD;AAAyD,QAAA,MAAM,EAAE,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,eAGG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,QAAQ,EAAE,IAAjD;AAAuD,QAAA,MAAM,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHH,eAIG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,MAAM,EAAC,WAAjC;AAA6C,QAAA,QAAQ,EAAE,IAAvD;AAA6D,QAAA,MAAM,EAAE,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJH,eAKG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,QAAQ,EAAE,IAAjD;AAAuD,QAAA,MAAM,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALH,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASGC,aATH,CADJ;AAaH,KAxFD;;AAEI,UAAM,CAACW,aAAD,EAAeR,gBAAf,IAAkCpC,QAAQ,CAAC,IAAD,CAAhD;AAEAe,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,SAAKkC,KAAL,GAAW;AAAChC,MAAAA,IAAI,EAAC,EAAN;AAASU,MAAAA,YAAY,EAAC;AAAtB,KAAX;AACH;;AAED0B,EAAAA,iBAAiB,GACjB;AACI,SAAKC,OAAL;AACH;;AAEDA,EAAAA,OAAO,GAAE;AAEP,QAAIpC,GAAG,GAAG,EAAV;AACA,SAAKH,KAAL,CAAWE,IAAX,CAAgBsC,SAAhB,CAA0B3B,OAA1B,CAAkC4B,OAAO,IAAI;AAE7C,UAAInB,SAAS,GAAG,KAAKtB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBuC,OAArB,EAA8BnB,SAA9C;AACA,UAAIJ,MAAM,GAAG,KAAKlB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBuC,OAArB,EAA8BvB,MAA3C;AACA,UAAIE,SAAS,GAAG,KAAKpB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBuC,OAArB,EAA8BrB,SAA9C;AAEAjB,MAAAA,GAAG,CAACY,IAAJ,CAAS;AAAC,gBAAO0B,OAAR;AACT,iBAAQnB,SAAS,CAACA,SAAS,CAACoB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CADC;AAET,kBAASxB,MAAM,CAACA,MAAM,CAACwB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAFA;AAGT,qBAAYtB,SAAS,CAACA,SAAS,CAACsB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAHH;AAIT,kBAASpB,SAAS,CAACA,SAAS,CAACoB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCxB,MAAM,CAACA,MAAM,CAACwB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAAjC,GAA4DtB,SAAS,CAACA,SAAS,CAACsB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B;AAJ5D,OAAT;AAMC,KAZD;AAcD,SAAKnB,QAAL,CAAc;AAACrB,MAAAA,IAAI,EAACC;AAAN,KAAd;AACA;;AAlCL;;AA8FA,eAAeN,SAAf","sourcesContent":["import React,{ useState} from 'react';\r\n\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext'\r\n\r\n\r\n    \r\n\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super();\r\n        const [globalFilter, setGlobalFilter] = useState(null);\r\n\r\n        console.log(props);\r\n        this.state={data:[],districtData:[]};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    getData(){\r\n        \r\n      let obj = [];\r\n      this.props.data.countries.forEach(element => {\r\n  \r\n      let confirmed = this.props.data.data[element].confirmed;\r\n      let deaths = this.props.data.data[element].deaths;\r\n      let recovered = this.props.data.data[element].recovered;\r\n\r\n      obj.push({\"name\":element,\r\n      \"cases\":confirmed[confirmed.length-1][1],\r\n      \"deaths\":deaths[deaths.length-1][1],\r\n      \"recovered\":recovered[recovered.length-1][1],\r\n      \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1]})  \r\n\r\n      });    \r\n\r\n     this.setState({data:obj});\r\n    }\r\n\r\n    getDistrictData = async(data) =>{\r\n     let obj =[];\r\n    const fetcher= await fetch(\"https://api.covid19india.org/state_district_wise.json\")\r\n    const response =await fetcher.json()\r\n    console.log(response);\r\n    Object.keys(response[data].districtData).forEach(x=>{\r\n        \r\n          obj.push({name:x,active:response[data].districtData[x].active,deaths:response[data].districtData[x].deceased,recovered:response[data].districtData[x].recovered,cases:response[data].districtData[x].confirmed})\r\n        \r\n    })\r\n\r\n    await this.setState({districtData:obj})\r\n\r\n\r\n    }\r\n\r\n    render = () =>{\r\n        let column,districtTable;\r\n        const header = () => {\r\n            return (\r\n                <div>\r\n                    List of Customers\r\n                    <div className=\"p-datatable-globalfilter-container\">\r\n                        <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Global Search\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n        \r\n        \r\n        if(this.props.presentRegion === 'India'){\r\n         districtTable = <DataTable emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header=\"- All Districts\" value={this.state.districtData}  paginator={true} rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <a onClick={() => this.getDistrictData(rowData.name)}>{rowData.name}</a>}} header=\"District\" sortable={true} filter={true} />\r\n         <Column field=\"cases\" header=\"Confirmed\" sortable={true} filter={true} />\r\n         <Column field=\"active\" header=\"Active\" sortable={true} filter={true} />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} filter={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true} filter={true} />\r\n         </DataTable>\r\n         column= <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <a onClick={() => this.getDistrictData(rowData.name)}>{rowData.name}</a>}} header=\"Country\" sortable={true} filter={true} />\r\n        }\r\n        else column= <Column field=\"name\" header=\"Country\" sortable={true} filter={true} />\r\n\r\n        return(\r\n            <div className=\"col-sm-12\">\r\n              <DataTable emptyMessage=\"No records found\" globalFilter={globalFilter} style={{border:'none'}} header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 {column}\r\n                 <Column field=\"cases\" header=\"Confirmed\" sortable={true} filter={true} />\r\n                 <Column field=\"active\" header=\"Active\" sortable={true} filter={true} />\r\n                 <Column field=\"recovered\" header=\"Recovered\" sortable={true} filter={true} />\r\n                 <Column field=\"deaths\" header=\"Deaths\" sortable={true} filter={true} />\r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;"]},"metadata":{},"sourceType":"module"}
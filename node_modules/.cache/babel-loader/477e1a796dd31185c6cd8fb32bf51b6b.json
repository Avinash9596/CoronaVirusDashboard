{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js\";\nimport React from 'react';\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass AffectedCountries extends React.Component {\n  constructor(props) {\n    super();\n    this.countries = ['USA', 'Brazil', 'India', 'France', 'Russia'];\n    this.state = {\n      data: [],\n      region: props.region,\n      url: props.url\n    };\n  }\n\n  componentDidMount() {\n    //SHOW THE WORLD DATA \n    if (this.state.region === 'World') {\n      fetch('https://coronavirus-19-api.herokuapp.com/countries').then(response => response.json()).then(data => {\n        this.sortData(data);\n      });\n    } //GET THE SELECTED COUNTRY DATA\n    else {\n        fetch('https://coronavirus-19-api.herokuapp.com/countries').then(response => response.json()).then(data => {\n          this.sortData(data);\n        });\n      }\n  }\n\n  sortData(data) {\n    var totalCases = data.splice(0, 1);\n    var obj = data.splice(0, 5);\n    obj.forEach(element => {\n      element[\"percentage\"] = element.cases / totalCases[0].cases * 100;\n    });\n    this.setState({\n      data: obj\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: '360px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"5 Most Affected Countries\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, this.state.data.map(name => /*#__PURE__*/React.createElement(\"div\", {\n      key: name.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }\n    }, name.country), \"  \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 77\n      }\n    }, name.cases), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 126\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      value: name.percentage,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    }))))));\n  }\n\n}\n\nexport default AffectedCountries;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js"],"names":["React","ProgressBar","AffectedCountries","Component","constructor","props","countries","state","data","region","url","componentDidMount","fetch","then","response","json","sortData","totalCases","splice","obj","forEach","element","cases","setState","render","height","map","name","country","float","percentage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;AAGA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CACA;AACIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI;AADJ,SAwCCC,SAxCD,GAwCY,CAAC,KAAD,EAAO,QAAP,EAAgB,OAAhB,EAAwB,QAAxB,EAAiC,QAAjC,CAxCZ;AAEI,SAAKC,KAAL,GAAW;AACRC,MAAAA,IAAI,EAAC,EADG;AAERC,MAAAA,MAAM,EAACJ,KAAK,CAACI,MAFL;AAGRC,MAAAA,GAAG,EAACL,KAAK,CAACK;AAHF,KAAX;AAKH;;AAEDC,EAAAA,iBAAiB,GACjB;AACG;AACA,QAAG,KAAKJ,KAAL,CAAWE,MAAX,KAAsB,OAAzB,EAAiC;AAC/BG,MAAAA,KAAK,CAAC,oDAAD,CAAL,CACAC,IADA,CACKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADjB,EAEAF,IAFA,CAEKL,IAAI,IAAI;AAAC,aAAKQ,QAAL,CAAcR,IAAd;AACf,OAHC;AAIF,KALA,CAMD;AANC,SAOG;AACAI,QAAAA,KAAK,CAAC,oDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEML,IAAI,IAAI;AAAC,eAAKQ,QAAL,CAAcR,IAAd;AACf,SAHA;AAIH;AACF;;AAEDQ,EAAAA,QAAQ,CAACR,IAAD,EACR;AACI,QAAIS,UAAU,GAAGT,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAjB;AACA,QAAIC,GAAG,GAAEX,IAAI,CAACU,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAT;AAEAC,IAAAA,GAAG,CAACC,OAAJ,CAAYC,OAAO,IAAI;AACnBA,MAAAA,OAAO,CAAC,YAAD,CAAP,GAAyBA,OAAO,CAACC,KAAR,GAAcL,UAAU,CAAC,CAAD,CAAV,CAAcK,KAA7B,GAAoC,GAA5D;AACH,KAFD;AAIA,SAAKC,QAAL,CAAc;AAACf,MAAAA,IAAI,EAAEW;AAAP,KAAd;AAEH;;AAIDK,EAAAA,MAAM,GACN;AACI,wBACG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKlB,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoBC,IAAI,iBACvB;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BF,IAAI,CAACC,OAApC,CADF,qBACuD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BF,IAAI,CAACL,KAApC,CADvD,eACwG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxG,eAEE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEK,IAAI,CAACG,UAAzB;AAAqC,MAAA,SAAS,EAAG,KAAjD;AAAwD,MAAA,KAAK,EAAE;AAACL,QAAAA,MAAM,EAAC;AAAR,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADD,CADJ,CAFF,CADH,CADH;AAeH;;AA7DL;;AAgEA,eAAevB,iBAAf","sourcesContent":["import React from 'react';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\n\r\nclass AffectedCountries extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n           data:[],\r\n           region:props.region,\r\n           url:props.url\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n       //SHOW THE WORLD DATA \r\n       if(this.state.region === 'World'){\r\n         fetch('https://coronavirus-19-api.herokuapp.com/countries')\r\n        .then(response => response.json())\r\n        .then(data => {this.sortData(data);  \r\n       });\r\n      }\r\n      //GET THE SELECTED COUNTRY DATA\r\n      else{\r\n          fetch('https://coronavirus-19-api.herokuapp.com/countries')\r\n          .then(response => response.json())\r\n          .then(data => {this.sortData(data);  \r\n         });\r\n      }\r\n    }\r\n\r\n    sortData(data)\r\n    {\r\n        var totalCases = data.splice(0,1);\r\n        var obj =data.splice(0,5);\r\n\r\n        obj.forEach(element => {\r\n            element[\"percentage\"] = (element.cases/totalCases[0].cases)*100;\r\n        });\r\n\r\n        this.setState({data: obj});\r\n\r\n    }\r\n\r\n     countries =['USA','Brazil','India','France','Russia']; \r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div className=\"col-xl-3 col-md-4\">\r\n              <div className=\"card\" style={{height:'360px'}}>\r\n                <div className=\"card-header\">5 Most Affected Countries</div>\r\n                <div className=\"card-body\">\r\n                  { this.state.data.map(name => ( \r\n                     <div key={name.country}>\r\n                       <span  style={{float:'left'}}>{name.country}</span>  <span style={{float:\"right\"}}>{name.cases}</span><br></br>\r\n                       <ProgressBar value={name.percentage} showValue ={false} style={{height:'5px'}} />\r\n                       <br></br>\r\n                     </div>   ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AffectedCountries;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\n\nclass tableData extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getDistrictData = async data => {\n      if (this.props.presentRegion === \"World\") return;\n      let obj = [];\n      const fetcher = await fetch(\"https://api.covid19india.org/state_district_wise.json\");\n      const response = await fetcher.json();\n      Object.keys(response[data].districtData).forEach(x => {\n        obj.push({\n          name: x,\n          active: response[data].districtData[x].active,\n          deaths: response[data].districtData[x].deceased,\n          recovered: response[data].districtData[x].recovered,\n          cases: response[data].districtData[x].confirmed\n        });\n      });\n      await this.setState({\n        districtData: obj,\n        presentState: data + \" - District Wise Status\"\n      }); // scroll to the specified district table\n\n      var element = document.querySelector(\"#district\");\n      element.scrollIntoView();\n    };\n\n    this.getFilteredData = name => {\n      let obj = [];\n      this.state.tempObj.forEach(x => {\n        if (x.name.includes(name)) obj.push(x);\n      });\n      this.setState({\n        data: obj\n      });\n    };\n\n    this.render = () => {\n      let column, districtTable;\n      const header = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"headertext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }\n      }, this.state.name, \" Wise Status\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xl-3\",\n        className: \"p-datatable-globalfilter-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(InputText, {\n        width: \"300px\",\n        type: \"search\",\n        placeholder: \"Search By Place Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      })));\n\n      if (this.props.presentRegion === 'India' && this.state.districtData.length > 0) {\n        districtTable = /*#__PURE__*/React.createElement(DataTable, {\n          id: \"district\",\n          emptyMessage: \"No records found\",\n          responsive: true,\n          style: {\n            border: 'none'\n          },\n          header: this.state.presentState,\n          value: this.state.districtData,\n          paginator: true,\n          rows: 10,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.getDistrictData(rowData.name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 75\n              }\n            }, rowData.name);\n          },\n          header: \"District\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"cases\",\n          header: \"Confirmed\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"active\",\n          header: \"Active\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"recovered\",\n          header: \"Recovered\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"deaths\",\n          header: \"Deaths\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 10\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 datatable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        onRowClick: event => this.getDistrictData(event.data.name),\n        className: \"p-datatable-places\",\n        rowHover: true,\n        emptyMessage: \"No records found\",\n        header: header,\n        value: this.state.data,\n        responsive: true,\n        paginator: true,\n        rows: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: this.state.name,\n        sortable: true,\n        body: rowData => {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              fontWeight: \"550\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 108\n            }\n          }, rowData.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"cases\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinConfirmed != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#ef3c3c\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 67\n            }\n          }, rowData.changeinConfirmed);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 30\n            }\n          }, rowData.cases, \" \\xA0\\xA0\\xA0\", changes);\n        },\n        header: \"Confirmed\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"active\",\n        header: \"Active\",\n        body: rowData => {\n          let changes;\n\n          if (rowData.changeinActive != 0) {\n            if (rowData.changeinActive > 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n              title: \"Change since yesterday\",\n              className: \"fa fa-arrow-up\",\n              style: {\n                fontWeight: '500',\n                color: \"#ef3c3c\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 38\n              }\n            }, rowData.changeinActive);else changes = /*#__PURE__*/React.createElement(\"span\", {\n              title: \"Change since yesterday\",\n              className: \"fa fa-arrow-down\",\n              style: {\n                fontWeight: '500',\n                color: \"#009933\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 38\n              }\n            }, -rowData.changeinActive);\n          }\n\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }\n          }, rowData.active, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"recovered\",\n        header: \"Recovered\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinRecovered != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#009933\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 67\n            }\n          }, rowData.changeinRecovered);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }\n          }, rowData.recovered, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"deaths\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinDeaths != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#ef3c3c\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 65\n            }\n          }, rowData.changeinDeaths);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }\n          }, rowData.deaths, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        header: \"Deaths\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 18\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }), districtTable);\n    };\n\n    console.log(props);\n    this.state = {\n      data: [],\n      districtData: [],\n      name: props.presentRegion == \"World\" ? \"Country\" : \"State\"\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    let obj = [];\n    this.props.data.countries.forEach(element => {\n      let confirmed = this.props.data.data[element].confirmed;\n      let deaths = this.props.data.data[element].deaths;\n      let recovered = this.props.data.data[element].recovered;\n      obj.push({\n        \"name\": element,\n        \"cases\": confirmed[confirmed.length - 1][1],\n        \"deaths\": deaths[deaths.length - 1][1],\n        \"recovered\": recovered[recovered.length - 1][1],\n        \"changeinConfirmed\": confirmed[confirmed.length - 1][1] - confirmed[confirmed.length - 2][1],\n        \"changeinRecovered\": recovered[recovered.length - 1][1] - recovered[recovered.length - 2][1],\n        \"changeinDeaths\": deaths[deaths.length - 1][1] - deaths[deaths.length - 2][1],\n        \"changeinActive\": confirmed[confirmed.length - 1][1] - confirmed[confirmed.length - 2][1] - (recovered[recovered.length - 1][1] - recovered[recovered.length - 2][1]) - (deaths[deaths.length - 1][1] - deaths[deaths.length - 2][1]),\n        \"active\": confirmed[confirmed.length - 1][1] - deaths[deaths.length - 1][1] - recovered[recovered.length - 1][1]\n      });\n    });\n    console.log(\"--\", obj);\n    await this.setState({\n      data: obj,\n      tempObj: obj\n    });\n  }\n\n}\n\nexport default tableData;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js"],"names":["React","useState","useEffect","useRef","DataTable","Column","InputText","tableData","Component","constructor","props","getDistrictData","data","presentRegion","obj","fetcher","fetch","response","json","Object","keys","districtData","forEach","x","push","name","active","deaths","deceased","recovered","cases","confirmed","setState","presentState","element","document","querySelector","scrollIntoView","getFilteredData","state","tempObj","includes","render","column","districtTable","header","length","border","dateTemplate","rowData","event","fontWeight","changes","changeinConfirmed","color","changeinActive","changeinRecovered","changeinDeaths","console","log","componentDidMount","getData","countries"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAkD,OAAlD;AAEA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;;AAIA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI;;AADJ,SAoCAC,eApCA,GAoCkB,MAAMC,IAAN,IAAc;AAE5B,UAAG,KAAKF,KAAL,CAAWG,aAAX,KAA6B,OAAhC,EAAyC;AACzC,UAAIC,GAAG,GAAE,EAAT;AACA,YAAMC,OAAO,GAAE,MAAMC,KAAK,CAAC,uDAAD,CAA1B;AACA,YAAMC,QAAQ,GAAE,MAAMF,OAAO,CAACG,IAAR,EAAtB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAA3B,EAAyCC,OAAzC,CAAiDC,CAAC,IAAE;AACpDT,QAAAA,GAAG,CAACU,IAAJ,CAAS;AAACC,UAAAA,IAAI,EAACF,CAAN;AAAQG,UAAAA,MAAM,EAACT,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BG,MAA9C;AAAqDC,UAAAA,MAAM,EAACV,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BK,QAA3F;AAAoGC,UAAAA,SAAS,EAACZ,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BM,SAA7I;AAAuJC,UAAAA,KAAK,EAACb,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BQ;AAA5L,SAAT;AACC,OAFD;AAIA,YAAM,KAAKC,QAAL,CAAc;AAACX,QAAAA,YAAY,EAACP,GAAd;AAAkBmB,QAAAA,YAAY,EAACrB,IAAI,GAAC;AAApC,OAAd,CAAN,CAV4B,CAY5B;;AACA,UAAIsB,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAd;AACAF,MAAAA,OAAO,CAACG,cAAR;AACH,KAnDD;;AAAA,SAqDAC,eArDA,GAqDiBb,IAAD,IAAQ;AAChB,UAAIX,GAAG,GAAE,EAAT;AACA,WAAKyB,KAAL,CAAWC,OAAX,CAAmBlB,OAAnB,CAA2BC,CAAC,IAAE;AAC1B,YAAGA,CAAC,CAACE,IAAF,CAAOgB,QAAP,CAAgBhB,IAAhB,CAAH,EAA0BX,GAAG,CAACU,IAAJ,CAASD,CAAT;AAC7B,OAFD;AAGA,WAAKS,QAAL,CAAc;AAACpB,QAAAA,IAAI,EAACE;AAAN,OAAd;AACP,KA3DD;;AAAA,SA6DA4B,MA7DA,GA6DS,MAAK;AACV,UAAIC,MAAJ,EAAWC,aAAX;AAEA,YAAMC,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACd;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKN,KAAL,CAAWd,IAAzC,iBADc,eAEf;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,SAAS,EAAC,oCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,WAAW,EAAC,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFe,CAAf;;AAQA,UAAG,KAAKf,KAAL,CAAWG,aAAX,KAA6B,OAA7B,IAAwC,KAAK0B,KAAL,CAAWlB,YAAX,CAAwByB,MAAxB,GAA+B,CAA1E,EAA4E;AAC3EF,QAAAA,aAAa,gBAAG,oBAAC,SAAD;AAAW,UAAA,EAAE,EAAC,UAAd;AAAyB,UAAA,YAAY,EAAC,kBAAtC;AAAyD,UAAA,UAAU,EAAE,IAArE;AAA2E,UAAA,KAAK,EAAE;AAACG,YAAAA,MAAM,EAAC;AAAR,WAAlF;AAAmG,UAAA,MAAM,EAAE,KAAKR,KAAL,CAAWN,YAAtH;AAAoI,UAAA,KAAK,EAAE,KAAKM,KAAL,CAAWlB,YAAtJ;AAAqK,UAAA,SAAS,EAAE,IAAhL;AAAsL,UAAA,IAAI,EAAE,EAA5L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAChB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAsB,UAAA,IAAI,EAAE,KAAK2B,YAAL,GAAmBC,OAAD,IAAW;AAAC,gCAAO;AAAG,cAAA,OAAO,EAAE,MAAM,KAAKtC,eAAL,CAAqBsC,OAAO,CAACxB,IAA7B,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAuDwB,OAAO,CAACxB,IAA/D,CAAP;AAAgF,WAA1I;AAA4I,UAAA,MAAM,EAAC,UAAnJ;AAA8J,UAAA,QAAQ,EAAE,IAAxK;AAA8K,UAAA,MAAM,EAAE,IAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgB,eAEhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAuB,UAAA,MAAM,EAAC,WAA9B;AAA0C,UAAA,QAAQ,EAAE,IAApD;AAA0D,UAAA,MAAM,EAAE,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFgB,eAGhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAuD,UAAA,MAAM,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHgB,eAIhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,MAAM,EAAC,WAAjC;AAA6C,UAAA,QAAQ,EAAE,IAAvD;AAA6D,UAAA,MAAM,EAAE,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJgB,eAKhB,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAuD,UAAA,MAAM,EAAE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALgB,CAAhB;AAOA;;AACD,0BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAIyB,KAAD,IAAS,KAAKvC,eAAL,CAAqBuC,KAAK,CAACtC,IAAN,CAAWa,IAAhC,CAAjC;AAAwE,QAAA,SAAS,EAAC,oBAAlF;AAAuG,QAAA,QAAQ,MAA/G;AAAgH,QAAA,YAAY,EAAC,kBAA7H;AAAgJ,QAAA,MAAM,EAAEoB,MAAxJ;AAAgK,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAW3B,IAAlL;AAAwL,QAAA,UAAU,EAAE,IAApM;AAA0M,QAAA,SAAS,EAAE,IAArN;AAA2N,QAAA,IAAI,EAAE,EAAjO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAuB,QAAA,MAAM,EAAE,KAAK2B,KAAL,CAAWd,IAA1C;AAAgD,QAAA,QAAQ,EAAE,IAA1D;AAAgE,QAAA,IAAI,EAAGwB,OAAD,IAAW;AAAE,8BAAO;AAAM,YAAA,KAAK,EAAE;AAACE,cAAAA,UAAU,EAAC;AAAZ,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCF,OAAO,CAACxB,IAA1C,CAAP;AAA8D,SAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,eAEG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAGwB,OAAD,IAAW;AAClC,cAAIG,OAAJ;AACA,cAAGH,OAAO,CAACI,iBAAR,IAA4B,CAA/B,EAAkCD,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACD,cAAAA,UAAU,EAAC,KAAZ;AAAkBG,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACI,iBAApH,CAAV;AAClC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOJ,OAAO,CAACnB,KAAf,mBAAyCsB,OAAzC,CAAP;AAAgE,SAHrE;AAGuE,QAAA,MAAM,EAAC,WAH9E;AAG0F,QAAA,QAAQ,EAAE,IAHpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,eAMG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,IAAI,EAAIH,OAAD,IAAa;AACvD,cAAIG,OAAJ;;AACA,cAAGH,OAAO,CAACM,cAAR,IAA0B,CAA7B,EAAgC;AAC5B,gBAAGN,OAAO,CAACM,cAAR,GAAwB,CAA3B,EACEH,OAAO,gBAAG;AAAM,cAAA,KAAK,EAAC,wBAAZ;AAAqC,cAAA,SAAS,EAAC,gBAA/C;AAAgE,cAAA,KAAK,EAAE;AAACD,gBAAAA,UAAU,EAAC,KAAZ;AAAkBG,gBAAAA,KAAK,EAAC;AAAxB,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA4GL,OAAO,CAACM,cAApH,CAAV,CADF,KAGEH,OAAO,gBAAG;AAAM,cAAA,KAAK,EAAC,wBAAZ;AAAqC,cAAA,SAAS,EAAC,kBAA/C;AAAkE,cAAA,KAAK,EAAE;AAACD,gBAAAA,UAAU,EAAC,KAAZ;AAAkBG,gBAAAA,KAAK,EAAC;AAAxB,eAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8G,CAACL,OAAO,CAACM,cAAvH,CAAV;AACL;;AACD,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAON,OAAO,CAACvB,MAAf,kBAAyC0B,OAAzC,CAAP;AAAgE,SARpE;AAQsE,QAAA,QAAQ,EAAE,IARhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANH,eAeG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,MAAM,EAAC,WAAjC;AAA8C,QAAA,IAAI,EAAIH,OAAD,IAAW;AAC5D,cAAIG,OAAJ;AACA,cAAGH,OAAO,CAACO,iBAAR,IAA6B,CAAhC,EAAmCJ,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACD,cAAAA,UAAU,EAAC,KAAZ;AAAkBG,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACO,iBAApH,CAAV;AACnC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOP,OAAO,CAACpB,SAAf,kBAA4CuB,OAA5C,CAAP;AAAmE,SAHvE;AAGyE,QAAA,QAAQ,EAAE,IAHnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfH,eAmBG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAIH,OAAD,IAAW;AACrC,cAAIG,OAAJ;AACA,cAAGH,OAAO,CAACQ,cAAR,IAA0B,CAA7B,EAAiCL,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACD,cAAAA,UAAU,EAAC,KAAZ;AAAkBG,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACQ,cAApH,CAAV;AACrC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOR,OAAO,CAACtB,MAAf,kBAAyCyB,OAAzC,CAAP;AAAgE,SAHhE;AAGkE,QAAA,MAAM,EAAC,QAHzE;AAGkF,QAAA,QAAQ,EAAE,IAH5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBH,CADF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA0BGR,aA1BH,CADJ;AA8BH,KA/GD;;AAEIc,IAAAA,OAAO,CAACC,GAAR,CAAYjD,KAAZ;AACA,SAAK6B,KAAL,GAAW;AAAC3B,MAAAA,IAAI,EAAC,EAAN;AAASS,MAAAA,YAAY,EAAC,EAAtB;AAAyBI,MAAAA,IAAI,EAACf,KAAK,CAACG,aAAN,IAAuB,OAAvB,GAAiC,SAAjC,GAA4C;AAA1E,KAAX;AACH;;AAED+C,EAAAA,iBAAiB,GACjB;AACI,SAAKC,OAAL;AACH;;AAED,QAAMA,OAAN,GAAe;AAEb,QAAI/C,GAAG,GAAG,EAAV;AACA,SAAKJ,KAAL,CAAWE,IAAX,CAAgBkD,SAAhB,CAA0BxC,OAA1B,CAAkCY,OAAO,IAAI;AAE7C,UAAIH,SAAS,GAAG,KAAKrB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBsB,OAArB,EAA8BH,SAA9C;AACA,UAAIJ,MAAM,GAAG,KAAKjB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBsB,OAArB,EAA8BP,MAA3C;AACA,UAAIE,SAAS,GAAG,KAAKnB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBsB,OAArB,EAA8BL,SAA9C;AAEAf,MAAAA,GAAG,CAACU,IAAJ,CAAS;AAAC,gBAAOU,OAAR;AACT,iBAAQH,SAAS,CAACA,SAAS,CAACe,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CADC;AAET,kBAASnB,MAAM,CAACA,MAAM,CAACmB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAFA;AAGT,qBAAYjB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAHH;AAIT,6BAAoBf,SAAS,CAACA,SAAS,CAACe,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCf,SAAS,CAACA,SAAS,CAACe,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAJ5C;AAKT,6BAAsBjB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCjB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAL9C;AAMT,0BAAiBnB,MAAM,CAACA,MAAM,CAACmB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,IAA2BnB,MAAM,CAACA,MAAM,CAACmB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CANnC;AAOT,0BAAmBf,SAAS,CAACA,SAAS,CAACe,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCf,SAAS,CAACA,SAAS,CAACe,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAAlC,IAAuEjB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCjB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAAxG,KAA6InB,MAAM,CAACA,MAAM,CAACmB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,IAA2BnB,MAAM,CAACA,MAAM,CAACmB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAAxK,CAPT;AAQT,kBAASf,SAAS,CAACA,SAAS,CAACe,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCnB,MAAM,CAACA,MAAM,CAACmB,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAAjC,GAA4DjB,SAAS,CAACA,SAAS,CAACiB,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B;AAR5D,OAAT;AAUC,KAhBD;AAiBAY,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB7C,GAAjB;AAEF,UAAM,KAAKkB,QAAL,CAAc;AAACpB,MAAAA,IAAI,EAACE,GAAN;AAAU0B,MAAAA,OAAO,EAAC1B;AAAlB,KAAd,CAAN;AACC;;AArCL;;AAqHA,eAAeP,SAAf","sourcesContent":["import React,{ useState, useEffect, useRef } from 'react';\r\n\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\n\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super();\r\n        console.log(props);\r\n        this.state={data:[],districtData:[],name:props.presentRegion == \"World\" ? \"Country\" :\"State\"};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    async getData(){\r\n        \r\n      let obj = [];\r\n      this.props.data.countries.forEach(element => {\r\n  \r\n      let confirmed = this.props.data.data[element].confirmed;\r\n      let deaths = this.props.data.data[element].deaths;\r\n      let recovered = this.props.data.data[element].recovered;\r\n\r\n      obj.push({\"name\":element,\r\n      \"cases\":confirmed[confirmed.length-1][1],\r\n      \"deaths\":deaths[deaths.length-1][1],\r\n      \"recovered\":recovered[recovered.length-1][1],\r\n      \"changeinConfirmed\":confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1],\r\n      \"changeinRecovered\" : recovered[recovered.length-1][1]-recovered[recovered.length-2][1],\r\n      \"changeinDeaths\":deaths[deaths.length-1][1]-deaths[deaths.length-2][1],\r\n      \"changeinActive\":((confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1]) - (recovered[recovered.length-1][1]-recovered[recovered.length-2][1]) - (deaths[deaths.length-1][1]-deaths[deaths.length-2][1])),\r\n      \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1]})  \r\n\r\n      });    \r\n      console.log(\"--\",obj)\r\n\r\n    await this.setState({data:obj,tempObj:obj});\r\n    }\r\n\r\n    getDistrictData = async(data) =>{\r\n\r\n        if(this.props.presentRegion === \"World\") return;    \r\n        let obj =[];\r\n        const fetcher= await fetch(\"https://api.covid19india.org/state_district_wise.json\")\r\n        const response =await fetcher.json()\r\n        Object.keys(response[data].districtData).forEach(x=>{    \r\n        obj.push({name:x,active:response[data].districtData[x].active,deaths:response[data].districtData[x].deceased,recovered:response[data].districtData[x].recovered,cases:response[data].districtData[x].confirmed})    \r\n        })\r\n\r\n        await this.setState({districtData:obj,presentState:data+\" - District Wise Status\"})\r\n\r\n        // scroll to the specified district table\r\n        var element = document.querySelector(\"#district\");\r\n        element.scrollIntoView();\r\n    }\r\n\r\n    getFilteredData=(name)=>{\r\n            let obj =[];\r\n            this.state.tempObj.forEach(x=>{\r\n                if(x.name.includes(name)) obj.push(x)\r\n            })\r\n            this.setState({data:obj})\r\n    }\r\n\r\n    render = () =>{\r\n        let column,districtTable;\r\n            \r\n        const header = <div className=\"headerdiv\">\r\n         <span className=\"headertext\">{this.state.name} Wise Status</span>\r\n        <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n            <InputText width=\"300px\" type=\"search\" placeholder=\"Search By Place Name\" />\r\n        </div>\r\n    </div>\r\n        \r\n        \r\n        if(this.props.presentRegion === 'India' && this.state.districtData.length>0){\r\n         districtTable = <DataTable id=\"district\" emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header={this.state.presentState} value={this.state.districtData}  paginator={true} rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <a onClick={() => this.getDistrictData(rowData.name)}>{rowData.name}</a>}} header=\"District\" sortable={true} filter={true} />\r\n         <Column field=\"cases\"  header=\"Confirmed\" sortable={true} filter={true} />\r\n         <Column field=\"active\" header=\"Active\" sortable={true} filter={true} />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} filter={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true} filter={true} />\r\n         </DataTable>\r\n        }\r\n        return(\r\n            <div className=\"col-sm-12 datatable\">\r\n              <DataTable onRowClick ={(event)=>this.getDistrictData(event.data.name)} className=\"p-datatable-places\" rowHover emptyMessage=\"No records found\" header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 <Column field=\"name\"   header={this.state.name} sortable={true} body={(rowData)=>{ return <span style={{fontWeight:\"550\"}}>{rowData.name}</span>}} />     \r\n                 <Column field=\"cases\" body={(rowData)=>{\r\n                      let changes;\r\n                      if(rowData.changeinConfirmed !=0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinConfirmed}</span>\r\n                      return <span>{rowData.cases} &nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Confirmed\" sortable={true}  />\r\n                 <Column field=\"active\" header=\"Active\" body ={(rowData) => {\r\n                     let changes;\r\n                     if(rowData.changeinActive != 0) {\r\n                         if(rowData.changeinActive >0)\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinActive}</span> \r\n                         else\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-down\" style={{fontWeight:'500',color:\"#009933\"}}>{-rowData.changeinActive}</span>\r\n                     }\r\n                     return <span>{rowData.active}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"recovered\" header=\"Recovered\"  body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinRecovered != 0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#009933\"}}>{rowData.changeinRecovered}</span> \r\n                     return <span>{rowData.recovered}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"deaths\" body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinDeaths != 0)  changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinDeaths}</span>\r\n                 return <span>{rowData.deaths}&nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Deaths\" sortable={true}  />\r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;"]},"metadata":{},"sourceType":"module"}
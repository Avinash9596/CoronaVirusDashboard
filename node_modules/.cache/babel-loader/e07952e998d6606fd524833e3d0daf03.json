{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from \"highcharts/modules/map\";\nimport proj4 from \"proj4\";\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\nimport code from \"./../countrycordinates.json\";\nhighchartsMap(Highcharts); // if (typeof window !== \"undefined\") {\n//   window.proj4 = window.proj4 || proj4;\n// }\n\nclass CoronoMap extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      mapOptions: {},\n      mapdata: props.presentRegion === \"World\" ? world : india\n    };\n  }\n\n  componentDidMount() {\n    //this.structureData();\n    this.setState({\n      mapOptions: {\n        chart: {\n          map: 'countries/ie/ie-all',\n          height: 320\n        },\n        title: {\n          text: this.props.presentRegion + ' Map Plot With Cases <span class=\"fa fa-expand\"></span>'\n        },\n        credits: {\n          enabled: false\n        },\n        mapNavigation: {\n          enabled: true,\n          buttonOptions: {\n            verticalAlign: 'bottom'\n          }\n        },\n        tooltip: {\n          headerFormat: '',\n          pointFormat: '<b>{point.country}</b><br>Active:{point.z}</b>'\n        },\n        series: [{\n          // Use the gb-all map with no data as a basemap\n          name: 'Basemap',\n          mapData: this.state.mapdata,\n          borderColor: '#A0A0A0',\n          nullColor: 'rgba(200, 200, 200, 0.3)',\n          showInLegend: false\n        }, {\n          // Specify points using lat/lon\n          type: 'mapbubble',\n          name: this.props.presentRegion === \"World\" ? 'Countries' : 'States',\n          color: '#4169E1',\n          data: [],\n          cursor: 'pointer',\n          point: {\n            events: {\n              click: function () {\n                console.log(this.keyword);\n              }\n            }\n          }\n        }]\n      }\n    });\n  }\n\n  structureData() {\n    this.props.data.countries.forEach(country => {\n      code.ref_country_codes.forEach(x => {\n        if (x.country === country) x[\"z\"] = this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length - 1][1];\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-9 col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      id: \"expand\",\n      constructorType: 'mapChart',\n      highcharts: Highcharts,\n      options: this.state.mapOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default CoronoMap;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js"],"names":["React","Highcharts","HighchartsReact","highchartsMap","proj4","world","india","code","CoronoMap","Component","constructor","props","state","mapOptions","mapdata","presentRegion","componentDidMount","setState","chart","map","height","title","text","credits","enabled","mapNavigation","buttonOptions","verticalAlign","tooltip","headerFormat","pointFormat","series","name","mapData","borderColor","nullColor","showInLegend","type","color","data","cursor","point","events","click","console","log","keyword","structureData","countries","forEach","country","ref_country_codes","x","confirmed","length","render","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport proj4 from \"proj4\";\r\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\r\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\nimport code from \"./../countrycordinates.json\";\r\n\r\nhighchartsMap(Highcharts);\r\n\r\n\r\n  // if (typeof window !== \"undefined\") {\r\n  //   window.proj4 = window.proj4 || proj4;\r\n  // }\r\n\r\n\r\n  \r\n\r\nclass CoronoMap extends React.Component{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state={mapOptions:{},mapdata:props.presentRegion === \"World\" ? world:india};\r\n  }\r\n\r\n  componentDidMount(){\r\n    //this.structureData();\r\n    this.setState({\r\n      mapOptions:{\r\n        chart: {\r\n          map: 'countries/ie/ie-all',\r\n          height:320,\r\n        },\r\n        title: {\r\n          text:this.props.presentRegion+' Map Plot With Cases <span class=\"fa fa-expand\"></span>'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        mapNavigation: {\r\n          enabled: true,\r\n          buttonOptions: {\r\n            verticalAlign: 'bottom'\r\n          }\r\n        },\r\n      tooltip: {\r\n          headerFormat: '',\r\n          pointFormat: '<b>{point.country}</b><br>Active:{point.z}</b>'\r\n        },\r\n        series: [{\r\n          // Use the gb-all map with no data as a basemap\r\n          name: 'Basemap',\r\n          mapData: this.state.mapdata,\r\n          borderColor: '#A0A0A0',\r\n          nullColor: 'rgba(200, 200, 200, 0.3)',\r\n          showInLegend: false\r\n        }, {\r\n          // Specify points using lat/lon\r\n          type: 'mapbubble',\r\n          name: this.props.presentRegion === \"World\"?'Countries':'States',\r\n          color: '#4169E1',\r\n          data: [],\r\n          cursor: 'pointer',\r\n          point: {\r\n            events: {\r\n              click: function() {\r\n                console.log(this.keyword);\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    })\r\n  }\r\n\r\n  structureData()\r\n  {\r\n    this.props.data.countries.forEach(country=>{\r\n      code.ref_country_codes.forEach(x=>{\r\n         if(x.country === country) x[\"z\"] = this.props.data.data[country].confirmed[this.props.data.data[country].confirmed.length-1][1];\r\n      })\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"col-xl-9 col-md-8\">\r\n              <div className=\"card\" style={{marginBottom:'30px'}}>\r\n                 <div className=\"card-body\">\r\n                    <HighchartsReact id=\"expand\" constructorType ={'mapChart'} highcharts={Highcharts} options={this.state.mapOptions} />\r\n                 </div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CoronoMap;"]},"metadata":{},"sourceType":"module"}
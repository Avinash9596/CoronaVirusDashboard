{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\n\nclass tableData extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getDistrictData = async data => {\n      try {\n        if (this.props.presentRegion === \"World\") return;\n        let obj = [];\n        const fetcher = await fetch(\"https://api.covid19india.org/state_district_wise.json\");\n        const response = await fetcher.json();\n        Object.keys(response[data].districtData).forEach(x => {\n          obj.push({\n            name: x,\n            active: response[data].districtData[x].active,\n            deaths: response[data].districtData[x].deceased,\n            recovered: response[data].districtData[x].recovered,\n            cases: response[data].districtData[x].confirmed\n          });\n        });\n        await this.setState({\n          districtData: obj,\n          flag: true,\n          tempdistrictObj: obj,\n          presentState: data + \" - District Wise Status\"\n        }); // scroll to the specified district table\n\n        var element = document.querySelector(\"#district\");\n        element.scrollIntoView();\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.getFilteredData = async (name, searchIn) => {\n      let obj = [];\n\n      try {\n        if (searchIn !== 'district') {\n          this.state.tempObj.forEach(x => {\n            if (x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x);\n          });\n          await this.setState({\n            data: obj\n          });\n          return;\n        } else {\n          this.state.tempdistrictObj.forEach(x => {\n            if (x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x);\n          });\n          await this.setState({\n            districtData: obj\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.render = () => {\n      let districtTable;\n      const header = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"headertext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 10\n        }\n      }, this.state.name, \" Wise Status\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xl-3\",\n        className: \"p-datatable-globalfilter-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(InputText, {\n        width: \"300px\",\n        type: \"search\",\n        onChange: e => this.getFilteredData(e.target.value, \"\"),\n        placeholder: \"Search By Place Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      })));\n      const districttableheader = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"headertext\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, this.state.presentState), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xl-3\",\n        className: \"p-datatable-globalfilter-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(InputText, {\n        width: \"300px\",\n        type: \"search\",\n        onChange: e => this.getFilteredData(e.target.value, \"district\"),\n        placeholder: \"Search By Place Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      })));\n\n      if (this.props.presentRegion === 'India' && this.state.flag) {\n        districtTable = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"datatable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          title: \"Click to get More Information\",\n          id: \"district\",\n          className: \"p-datatable-places\",\n          emptyMessage: \"No records found\",\n          responsive: true,\n          style: {\n            border: 'none'\n          },\n          header: districttableheader,\n          value: this.state.districtData,\n          paginator: true,\n          rows: 10,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.getDistrictData(rowData.name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 75\n              }\n            }, rowData.name);\n          },\n          header: \"District\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"cases\",\n          header: \"Confirmed\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"active\",\n          header: \"Active\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"recovered\",\n          header: \"Recovered\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"deaths\",\n          header: \"Deaths\",\n          sortable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 10\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 datatable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        onRowClick: event => this.getDistrictData(event.data.name),\n        className: \"p-datatable-places\",\n        rowHover: true,\n        emptyMessage: \"No records found\",\n        header: header,\n        value: this.state.data,\n        responsive: true,\n        paginator: true,\n        rows: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: this.state.name,\n        sortable: true,\n        body: rowData => {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              fontWeight: \"550\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 108\n            }\n          }, rowData.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"cases\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinConfirmed != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#ef3c3c\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 67\n            }\n          }, rowData.changeinConfirmed);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 30\n            }\n          }, rowData.cases, \" \\xA0\\xA0\\xA0\", changes);\n        },\n        header: \"Confirmed\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"active\",\n        header: \"Active\",\n        body: rowData => {\n          let changes;\n\n          if (rowData.changeinActive != 0) {\n            if (rowData.changeinActive > 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n              title: \"Change since yesterday\",\n              className: \"fa fa-arrow-up\",\n              style: {\n                fontWeight: '500',\n                color: \"#ef3c3c\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 38\n              }\n            }, rowData.changeinActive);else changes = /*#__PURE__*/React.createElement(\"span\", {\n              title: \"Change since yesterday\",\n              className: \"fa fa-arrow-down\",\n              style: {\n                fontWeight: '500',\n                color: \"#009933\"\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 38\n              }\n            }, -rowData.changeinActive);\n          }\n\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }\n          }, rowData.active, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"recovered\",\n        header: \"Recovered\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinRecovered != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#009933\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 67\n            }\n          }, rowData.changeinRecovered);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }\n          }, rowData.recovered, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"deaths\",\n        body: rowData => {\n          let changes;\n          if (rowData.changeinDeaths != 0) changes = /*#__PURE__*/React.createElement(\"span\", {\n            title: \"Change since yesterday\",\n            className: \"fa fa-arrow-up\",\n            style: {\n              fontWeight: '500',\n              color: \"#ef3c3c\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 65\n            }\n          }, rowData.changeinDeaths);\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }\n          }, rowData.deaths, \"\\xA0\\xA0\\xA0\", changes);\n        },\n        header: \"Deaths\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 18\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      }), districtTable);\n    };\n\n    this.state = {\n      data: [],\n      districtData: [],\n      name: props.presentRegion == \"World\" ? \"Country\" : \"State\"\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    let obj = [],\n        confirmed,\n        deaths,\n        recovered;\n\n    try {\n      this.props.data.countries.forEach(element => {\n        confirmed = this.props.data.data[element].confirmed;\n        deaths = this.props.data.data[element].deaths;\n        recovered = this.props.data.data[element].recovered;\n        obj.push({\n          \"name\": element,\n          \"cases\": confirmed[confirmed.length - 1][1],\n          \"deaths\": deaths[deaths.length - 1][1],\n          \"recovered\": recovered[recovered.length - 1][1],\n          \"changeinConfirmed\": confirmed[confirmed.length - 1][1] - confirmed[confirmed.length - 2][1],\n          \"changeinRecovered\": recovered[recovered.length - 1][1] - recovered[recovered.length - 2][1],\n          \"changeinDeaths\": deaths[deaths.length - 1][1] - deaths[deaths.length - 2][1],\n          \"changeinActive\": confirmed[confirmed.length - 1][1] - confirmed[confirmed.length - 2][1] - (recovered[recovered.length - 1][1] - recovered[recovered.length - 2][1]) - (deaths[deaths.length - 1][1] - deaths[deaths.length - 2][1]),\n          \"active\": confirmed[confirmed.length - 1][1] - deaths[deaths.length - 1][1] - recovered[recovered.length - 1][1]\n        });\n      });\n      await this.setState({\n        data: obj,\n        tempObj: obj\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n}\n\nexport default tableData;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js"],"names":["React","useState","useEffect","useRef","DataTable","Column","InputText","tableData","Component","constructor","props","getDistrictData","data","presentRegion","obj","fetcher","fetch","response","json","Object","keys","districtData","forEach","x","push","name","active","deaths","deceased","recovered","cases","confirmed","setState","flag","tempdistrictObj","presentState","element","document","querySelector","scrollIntoView","err","console","log","getFilteredData","searchIn","state","tempObj","toLowerCase","includes","render","districtTable","header","e","target","value","districttableheader","border","dateTemplate","rowData","event","fontWeight","changes","changeinConfirmed","color","changeinActive","changeinRecovered","changeinDeaths","componentDidMount","getData","countries","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAkD,OAAlD;AAEA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;;AAIA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EACX;AACI;;AADJ,SAwCAC,eAxCA,GAwCkB,MAAMC,IAAN,IAAc;AAC7B,UAAG;AACF,YAAG,KAAKF,KAAL,CAAWG,aAAX,KAA6B,OAAhC,EAAyC;AACzC,YAAIC,GAAG,GAAE,EAAT;AACA,cAAMC,OAAO,GAAE,MAAMC,KAAK,CAAC,uDAAD,CAA1B;AACA,cAAMC,QAAQ,GAAE,MAAMF,OAAO,CAACG,IAAR,EAAtB;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAA3B,EAAyCC,OAAzC,CAAiDC,CAAC,IAAE;AACpDT,UAAAA,GAAG,CAACU,IAAJ,CAAS;AAACC,YAAAA,IAAI,EAACF,CAAN;AAAQG,YAAAA,MAAM,EAACT,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BG,MAA9C;AAAqDC,YAAAA,MAAM,EAACV,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BK,QAA3F;AAAoGC,YAAAA,SAAS,EAACZ,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BM,SAA7I;AAAuJC,YAAAA,KAAK,EAACb,QAAQ,CAACL,IAAD,CAAR,CAAeS,YAAf,CAA4BE,CAA5B,EAA+BQ;AAA5L,WAAT;AACC,SAFD;AAIA,cAAM,KAAKC,QAAL,CAAc;AAACX,UAAAA,YAAY,EAACP,GAAd;AAAkBmB,UAAAA,IAAI,EAAC,IAAvB;AAA4BC,UAAAA,eAAe,EAACpB,GAA5C;AAAgDqB,UAAAA,YAAY,EAACvB,IAAI,GAAC;AAAlE,SAAd,CAAN,CATE,CAWF;;AACA,YAAIwB,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAd;AACAF,QAAAA,OAAO,CAACG,cAAR;AACD,OAdA,CAeD,OAAMC,GAAN,EAAU;AACNC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACF,KA3DD;;AAAA,SA8DAG,eA9DA,GA8DgB,OAAMlB,IAAN,EAAWmB,QAAX,KAAsB;AAC9B,UAAI9B,GAAG,GAAE,EAAT;;AACA,UAAG;AACH,YAAG8B,QAAQ,KAAK,UAAhB,EAA2B;AACvB,eAAKC,KAAL,CAAWC,OAAX,CAAmBxB,OAAnB,CAA2BC,CAAC,IAAE;AAC1B,gBAAGA,CAAC,CAACE,IAAF,CAAOsB,WAAP,GAAqBC,QAArB,CAA8BvB,IAAI,CAACsB,WAAL,EAA9B,CAAH,EAAsDjC,GAAG,CAACU,IAAJ,CAASD,CAAT;AACzD,WAFD;AAGA,gBAAM,KAAKS,QAAL,CAAc;AAACpB,YAAAA,IAAI,EAACE;AAAN,WAAd,CAAN;AACA;AACH,SAND,MAOI;AACA,eAAK+B,KAAL,CAAWX,eAAX,CAA2BZ,OAA3B,CAAmCC,CAAC,IAAE;AAClC,gBAAGA,CAAC,CAACE,IAAF,CAAOsB,WAAP,GAAqBC,QAArB,CAA8BvB,IAAI,CAACsB,WAAL,EAA9B,CAAH,EAAsDjC,GAAG,CAACU,IAAJ,CAASD,CAAT;AACzD,WAFD;AAGA,gBAAM,KAAKS,QAAL,CAAc;AAACX,YAAAA,YAAY,EAACP;AAAd,WAAd,CAAN;AACH;AACA,OAdD,CAeA,OAAM0B,GAAN,EAAU;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB;AACnC,KAhFD;;AAAA,SAkFAS,MAlFA,GAkFS,MAAK;AACV,UAAIC,aAAJ;AAEA,YAAMC,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACd;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKN,KAAL,CAAWpB,IAAzC,iBADc,eAEd;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,SAAS,EAAC,oCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,QAAQ,EAAG2B,CAAD,IAAK,KAAKT,eAAL,CAAqBS,CAAC,CAACC,MAAF,CAASC,KAA9B,EAAoC,EAApC,CAAtD;AAA+F,QAAA,WAAW,EAAC,sBAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAFc,CAAf;AAOA,YAAMC,mBAAmB,gBAAG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAC5B;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKV,KAAL,CAAWV,YAAzC,CAD4B,eAE5B;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,SAAS,EAAC,oCAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,QAAQ,EAAGiB,CAAD,IAAK,KAAKT,eAAL,CAAqBS,CAAC,CAACC,MAAF,CAASC,KAA9B,EAAoC,UAApC,CAAtD;AAAuG,QAAA,WAAW,EAAC,sBAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAF4B,CAA5B;;AAQA,UAAG,KAAK5C,KAAL,CAAWG,aAAX,KAA6B,OAA7B,IAAwC,KAAKgC,KAAL,CAAWZ,IAAtD,EAA2D;AAC1DiB,QAAAA,aAAa,gBACb;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAC,+BAAjB;AAAiD,UAAA,EAAE,EAAC,UAApD;AAA+D,UAAA,SAAS,EAAC,oBAAzE;AAA8F,UAAA,YAAY,EAAC,kBAA3G;AAA8H,UAAA,UAAU,EAAE,IAA1I;AAAgJ,UAAA,KAAK,EAAE;AAACM,YAAAA,MAAM,EAAC;AAAR,WAAvJ;AAAwK,UAAA,MAAM,EAAED,mBAAhL;AAAqM,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWxB,YAAvN;AAAsO,UAAA,SAAS,EAAE,IAAjP;AAAuP,UAAA,IAAI,EAAE,EAA7P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAsB,UAAA,IAAI,EAAE,KAAKoC,YAAL,GAAmBC,OAAD,IAAW;AAAC,gCAAO;AAAG,cAAA,OAAO,EAAE,MAAM,KAAK/C,eAAL,CAAqB+C,OAAO,CAACjC,IAA7B,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAuDiC,OAAO,CAACjC,IAA/D,CAAP;AAAgF,WAA1I;AAA4I,UAAA,MAAM,EAAC,UAAnJ;AAA8J,UAAA,QAAQ,EAAE,IAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAuB,UAAA,MAAM,EAAC,WAA9B;AAA0C,UAAA,QAAQ,EAAE,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA,eAIA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,MAAM,EAAC,WAAjC;AAA6C,UAAA,QAAQ,EAAE,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJA,eAKA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,MAAM,EAAC,QAA9B;AAAuC,UAAA,QAAQ,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALA,CADA,CADA;AAUA;;AAED,0BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAIkC,KAAD,IAAS,KAAKhD,eAAL,CAAqBgD,KAAK,CAAC/C,IAAN,CAAWa,IAAhC,CAAjC;AAAwE,QAAA,SAAS,EAAC,oBAAlF;AAAuG,QAAA,QAAQ,MAA/G;AAAgH,QAAA,YAAY,EAAC,kBAA7H;AAAgJ,QAAA,MAAM,EAAE0B,MAAxJ;AAAgK,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWjC,IAAlL;AAAwL,QAAA,UAAU,EAAE,IAApM;AAA0M,QAAA,SAAS,EAAE,IAArN;AAA2N,QAAA,IAAI,EAAE,EAAjO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAuB,QAAA,MAAM,EAAE,KAAKiC,KAAL,CAAWpB,IAA1C;AAAgD,QAAA,QAAQ,EAAE,IAA1D;AAAgE,QAAA,IAAI,EAAGiC,OAAD,IAAW;AAAE,8BAAO;AAAM,YAAA,KAAK,EAAE;AAACE,cAAAA,UAAU,EAAC;AAAZ,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCF,OAAO,CAACjC,IAA1C,CAAP;AAA8D,SAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,eAEG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAGiC,OAAD,IAAW;AAClC,cAAIG,OAAJ;AACA,cAAGH,OAAO,CAACI,iBAAR,IAA4B,CAA/B,EAAkCD,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACD,cAAAA,UAAU,EAAC,KAAZ;AAAkBG,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACI,iBAApH,CAAV;AAClC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOJ,OAAO,CAAC5B,KAAf,mBAAyC+B,OAAzC,CAAP;AAAgE,SAHrE;AAGuE,QAAA,MAAM,EAAC,WAH9E;AAG0F,QAAA,QAAQ,EAAE,IAHpG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,eAMG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,MAAM,EAAC,QAA9B;AAAuC,QAAA,IAAI,EAAIH,OAAD,IAAa;AACvD,cAAIG,OAAJ;;AACA,cAAGH,OAAO,CAACM,cAAR,IAA0B,CAA7B,EAAgC;AAC5B,gBAAGN,OAAO,CAACM,cAAR,GAAwB,CAA3B,EACEH,OAAO,gBAAG;AAAM,cAAA,KAAK,EAAC,wBAAZ;AAAqC,cAAA,SAAS,EAAC,gBAA/C;AAAgE,cAAA,KAAK,EAAE;AAACD,gBAAAA,UAAU,EAAC,KAAZ;AAAkBG,gBAAAA,KAAK,EAAC;AAAxB,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA4GL,OAAO,CAACM,cAApH,CAAV,CADF,KAGEH,OAAO,gBAAG;AAAM,cAAA,KAAK,EAAC,wBAAZ;AAAqC,cAAA,SAAS,EAAC,kBAA/C;AAAkE,cAAA,KAAK,EAAE;AAACD,gBAAAA,UAAU,EAAC,KAAZ;AAAkBG,gBAAAA,KAAK,EAAC;AAAxB,eAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8G,CAACL,OAAO,CAACM,cAAvH,CAAV;AACL;;AACD,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAON,OAAO,CAAChC,MAAf,kBAAyCmC,OAAzC,CAAP;AAAgE,SARpE;AAQsE,QAAA,QAAQ,EAAE,IARhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANH,eAeG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,MAAM,EAAC,WAAjC;AAA8C,QAAA,IAAI,EAAIH,OAAD,IAAW;AAC5D,cAAIG,OAAJ;AACA,cAAGH,OAAO,CAACO,iBAAR,IAA6B,CAAhC,EAAmCJ,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACD,cAAAA,UAAU,EAAC,KAAZ;AAAkBG,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACO,iBAApH,CAAV;AACnC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOP,OAAO,CAAC7B,SAAf,kBAA4CgC,OAA5C,CAAP;AAAmE,SAHvE;AAGyE,QAAA,QAAQ,EAAE,IAHnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfH,eAmBG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAIH,OAAD,IAAW;AACrC,cAAIG,OAAJ;AACA,cAAGH,OAAO,CAACQ,cAAR,IAA0B,CAA7B,EAAiCL,OAAO,gBAAG;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAqC,YAAA,SAAS,EAAC,gBAA/C;AAAgE,YAAA,KAAK,EAAE;AAACD,cAAAA,UAAU,EAAC,KAAZ;AAAkBG,cAAAA,KAAK,EAAC;AAAxB,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4GL,OAAO,CAACQ,cAApH,CAAV;AACrC,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOR,OAAO,CAAC/B,MAAf,kBAAyCkC,OAAzC,CAAP;AAAgE,SAHhE;AAGkE,QAAA,MAAM,EAAC,QAHzE;AAGkF,QAAA,QAAQ,EAAE,IAH5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBH,CADF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA0BGX,aA1BH,CADJ;AA8BH,KA/ID;;AAEI,SAAKL,KAAL,GAAW;AAACjC,MAAAA,IAAI,EAAC,EAAN;AAASS,MAAAA,YAAY,EAAC,EAAtB;AAAyBI,MAAAA,IAAI,EAACf,KAAK,CAACG,aAAN,IAAuB,OAAvB,GAAiC,SAAjC,GAA4C;AAA1E,KAAX;AACH;;AAEDsD,EAAAA,iBAAiB,GACjB;AACI,SAAKC,OAAL;AACH;;AAED,QAAMA,OAAN,GAAe;AAEb,QAAItD,GAAG,GAAG,EAAV;AAAA,QAAaiB,SAAb;AAAA,QAAuBJ,MAAvB;AAAA,QAA8BE,SAA9B;;AAEA,QAAG;AACD,WAAKnB,KAAL,CAAWE,IAAX,CAAgByD,SAAhB,CAA0B/C,OAA1B,CAAkCc,OAAO,IAAI;AAE5CL,QAAAA,SAAS,GAAG,KAAKrB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBwB,OAArB,EAA8BL,SAA1C;AACAJ,QAAAA,MAAM,GAAG,KAAKjB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBwB,OAArB,EAA8BT,MAAvC;AACAE,QAAAA,SAAS,GAAG,KAAKnB,KAAL,CAAWE,IAAX,CAAgBA,IAAhB,CAAqBwB,OAArB,EAA8BP,SAA1C;AAEDf,QAAAA,GAAG,CAACU,IAAJ,CAAS;AAAC,kBAAOY,OAAR;AACT,mBAAQL,SAAS,CAACA,SAAS,CAACuC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CADC;AAET,oBAAS3C,MAAM,CAACA,MAAM,CAAC2C,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAFA;AAGT,uBAAYzC,SAAS,CAACA,SAAS,CAACyC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAHH;AAIT,+BAAoBvC,SAAS,CAACA,SAAS,CAACuC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCvC,SAAS,CAACA,SAAS,CAACuC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAJ5C;AAKT,+BAAsBzC,SAAS,CAACA,SAAS,CAACyC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCzC,SAAS,CAACA,SAAS,CAACyC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAL9C;AAMT,4BAAiB3C,MAAM,CAACA,MAAM,CAAC2C,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,IAA2B3C,MAAM,CAACA,MAAM,CAAC2C,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CANnC;AAOT,4BAAmBvC,SAAS,CAACA,SAAS,CAACuC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCvC,SAAS,CAACA,SAAS,CAACuC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAAlC,IAAuEzC,SAAS,CAACA,SAAS,CAACyC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiCzC,SAAS,CAACA,SAAS,CAACyC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,CAAxG,KAA6I3C,MAAM,CAACA,MAAM,CAAC2C,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,IAA2B3C,MAAM,CAACA,MAAM,CAAC2C,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAAxK,CAPT;AAQT,oBAASvC,SAAS,CAACA,SAAS,CAACuC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B,IAAiC3C,MAAM,CAACA,MAAM,CAAC2C,MAAP,GAAc,CAAf,CAAN,CAAwB,CAAxB,CAAjC,GAA4DzC,SAAS,CAACA,SAAS,CAACyC,MAAV,GAAiB,CAAlB,CAAT,CAA8B,CAA9B;AAR5D,SAAT;AAUC,OAhBD;AAkBA,YAAM,KAAKtC,QAAL,CAAc;AAACpB,QAAAA,IAAI,EAACE,GAAN;AAAUgC,QAAAA,OAAO,EAAChC;AAAlB,OAAd,CAAN;AACD,KApBD,CAqBA,OAAM0B,GAAN,EAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACF;;AAzCL;;AAqJA,eAAejC,SAAf","sourcesContent":["import React,{ useState, useEffect, useRef } from 'react';\r\n\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext';\r\n\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={data:[],districtData:[],name:props.presentRegion == \"World\" ? \"Country\" :\"State\"};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    async getData(){\r\n        \r\n      let obj = [],confirmed,deaths,recovered;\r\n\r\n      try{\r\n        this.props.data.countries.forEach(element => {\r\n    \r\n         confirmed = this.props.data.data[element].confirmed;\r\n         deaths = this.props.data.data[element].deaths;\r\n         recovered = this.props.data.data[element].recovered;\r\n\r\n        obj.push({\"name\":element,\r\n        \"cases\":confirmed[confirmed.length-1][1],\r\n        \"deaths\":deaths[deaths.length-1][1],\r\n        \"recovered\":recovered[recovered.length-1][1],\r\n        \"changeinConfirmed\":confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1],\r\n        \"changeinRecovered\" : recovered[recovered.length-1][1]-recovered[recovered.length-2][1],\r\n        \"changeinDeaths\":deaths[deaths.length-1][1]-deaths[deaths.length-2][1],\r\n        \"changeinActive\":((confirmed[confirmed.length-1][1]-confirmed[confirmed.length-2][1]) - (recovered[recovered.length-1][1]-recovered[recovered.length-2][1]) - (deaths[deaths.length-1][1]-deaths[deaths.length-2][1])),\r\n        \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1]})  \r\n\r\n        });    \r\n\r\n        await this.setState({data:obj,tempObj:obj});\r\n      }\r\n      catch(err){\r\n          console.log(err)\r\n      }\r\n    }\r\n\r\n    getDistrictData = async(data) =>{\r\n       try{\r\n        if(this.props.presentRegion === \"World\") return;    \r\n        let obj =[];\r\n        const fetcher= await fetch(\"https://api.covid19india.org/state_district_wise.json\")\r\n        const response =await fetcher.json()\r\n        Object.keys(response[data].districtData).forEach(x=>{    \r\n        obj.push({name:x,active:response[data].districtData[x].active,deaths:response[data].districtData[x].deceased,recovered:response[data].districtData[x].recovered,cases:response[data].districtData[x].confirmed})    \r\n        })\r\n\r\n        await this.setState({districtData:obj,flag:true,tempdistrictObj:obj,presentState:data+\" - District Wise Status\"})\r\n\r\n        // scroll to the specified district table\r\n        var element = document.querySelector(\"#district\");\r\n        element.scrollIntoView();\r\n      }\r\n      catch(err){\r\n          console.log(err);\r\n      }\r\n    }\r\n\r\n    //GLOBAL SEARCH FUNCTIONALITY\r\n    getFilteredData=async(name,searchIn)=>{\r\n            let obj =[];\r\n            try{\r\n            if(searchIn !== 'district'){\r\n                this.state.tempObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({data:obj})\r\n                return;\r\n            }\r\n            else{\r\n                this.state.tempdistrictObj.forEach(x=>{\r\n                    if(x.name.toLowerCase().includes(name.toLowerCase())) obj.push(x)\r\n                })\r\n                await this.setState({districtData:obj})\r\n            }\r\n            }\r\n            catch(err){console.log(err)}\r\n    }\r\n\r\n    render = () =>{\r\n        let districtTable;\r\n            \r\n        const header = <div className=\"headerdiv\">\r\n         <span className=\"headertext\">{this.state.name} Wise Status</span>\r\n         <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n            <InputText width=\"300px\" type=\"search\" onChange={(e)=>this.getFilteredData(e.target.value,\"\")} placeholder=\"Search By Place Name\" />\r\n         </div>\r\n        </div>\r\n\r\n        const districttableheader = <div className=\"headerdiv\">\r\n        <span className=\"headertext\">{this.state.presentState}</span>\r\n        <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n            <InputText width=\"300px\" type=\"search\" onChange={(e)=>this.getFilteredData(e.target.value,\"district\")} placeholder=\"Search By Place Name\" />\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        if(this.props.presentRegion === 'India' && this.state.flag){\r\n         districtTable = \r\n         <div className=\"datatable\">\r\n         <DataTable title=\"Click to get More Information\" id=\"district\" className=\"p-datatable-places\" emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header={districttableheader} value={this.state.districtData}  paginator={true} rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <a onClick={() => this.getDistrictData(rowData.name)}>{rowData.name}</a>}} header=\"District\" sortable={true} />\r\n         <Column field=\"cases\"  header=\"Confirmed\" sortable={true}  />\r\n         <Column field=\"active\" header=\"Active\" sortable={true}  />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true}/>\r\n         </DataTable>\r\n         </div>\r\n        }\r\n        \r\n        return(\r\n            <div className=\"col-sm-12 datatable\">\r\n              <DataTable onRowClick ={(event)=>this.getDistrictData(event.data.name)} className=\"p-datatable-places\" rowHover emptyMessage=\"No records found\" header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 <Column field=\"name\"   header={this.state.name} sortable={true} body={(rowData)=>{ return <span style={{fontWeight:\"550\"}}>{rowData.name}</span>}} />     \r\n                 <Column field=\"cases\" body={(rowData)=>{\r\n                      let changes;\r\n                      if(rowData.changeinConfirmed !=0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinConfirmed}</span>\r\n                      return <span>{rowData.cases} &nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Confirmed\" sortable={true}  />\r\n                 <Column field=\"active\" header=\"Active\" body ={(rowData) => {\r\n                     let changes;\r\n                     if(rowData.changeinActive != 0) {\r\n                         if(rowData.changeinActive >0)\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinActive}</span> \r\n                         else\r\n                           changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-down\" style={{fontWeight:'500',color:\"#009933\"}}>{-rowData.changeinActive}</span>\r\n                     }\r\n                     return <span>{rowData.active}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"recovered\" header=\"Recovered\"  body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinRecovered != 0) changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#009933\"}}>{rowData.changeinRecovered}</span> \r\n                     return <span>{rowData.recovered}&nbsp;&nbsp;&nbsp;{changes}</span>}} sortable={true}  />\r\n                 <Column field=\"deaths\" body ={(rowData)=>{\r\n                     let changes;\r\n                     if(rowData.changeinDeaths != 0)  changes = <span title=\"Change since yesterday\" className=\"fa fa-arrow-up\" style={{fontWeight:'500',color:\"#ef3c3c\"}}>{rowData.changeinDeaths}</span>\r\n                 return <span>{rowData.deaths}&nbsp;&nbsp;&nbsp;{changes}</span>}} header=\"Deaths\" sortable={true}  />\r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js\";\nimport React from 'react';\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass AffectedCountries extends React.Component {\n  constructor(props) {\n    super(); // this.state={\n    //    data:[],\n    //    name:'',\n    // }\n  }\n\n  componentDidMount() {\n    this.sortData();\n  }\n\n  sortData() {\n    try {\n      let TotalConfirmed = this.props.data.total.confirmed[this.props.data.total.confirmed.length - 1][1]; //MAP CONFIRMED CASES WITH COUNTRY NAME\n\n      let obj = [];\n      this.props.data.countries.forEach(element => {\n        let countryTotal = this.props.data.data[element].confirmed;\n        obj.push({\n          \"name\": element,\n          \"cases\": countryTotal[countryTotal.length - 1][1],\n          \"percentage\": countryTotal[countryTotal.length - 1][1] / TotalConfirmed * 100\n        });\n      }); //sort mapped data according the cases confirmed\n\n      obj.sort((a, b) => {\n        return b.cases - a.cases;\n      }); // get the top five affected places according to the confirmed cases\n\n      obj = obj.splice(0, 5);\n      this.setState({\n        data: obj,\n        name: this.props.presentRegion === \"World\" ? \"Countries\" : \"States\"\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: '360px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"5 Most Affected \", this.state.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, this.state.data.map(data => /*#__PURE__*/React.createElement(\"div\", {\n      key: data.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }\n    }, data.name), \"  \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 74\n      }\n    }, data.cases.toLocaleString()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 140\n      }\n    }), /*#__PURE__*/React.createElement(ProgressBar, {\n      value: data.percentage,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    }))))));\n  }\n\n}\n\nexport default AffectedCountries;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/AffectedCountries.js"],"names":["React","ProgressBar","AffectedCountries","Component","constructor","props","componentDidMount","sortData","TotalConfirmed","data","total","confirmed","length","obj","countries","forEach","element","countryTotal","push","sort","a","b","cases","splice","setState","name","presentRegion","err","console","log","render","height","state","map","place","float","toLocaleString","percentage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ProgressBar} from 'primereact/progressbar';\r\n\r\n\r\nclass AffectedCountries extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        // this.state={\r\n        //    data:[],\r\n        //    name:'',\r\n        // }\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      this.sortData();       \r\n    }\r\n\r\n    sortData()\r\n    {\r\n      try{\r\n        let TotalConfirmed = this.props.data.total.confirmed[this.props.data.total.confirmed.length-1][1];\r\n\r\n        //MAP CONFIRMED CASES WITH COUNTRY NAME\r\n        let obj = [];\r\n        this.props.data.countries.forEach(element => {\r\n\r\n          let countryTotal = this.props.data.data[element].confirmed;\r\n          obj.push({\"name\":element,\"cases\":countryTotal[countryTotal.length-1][1],\"percentage\":(countryTotal[countryTotal.length-1][1]/TotalConfirmed)*100})  \r\n\r\n        });\r\n\r\n        //sort mapped data according the cases confirmed\r\n        obj.sort((a,b) => {return b.cases-a.cases})\r\n\r\n        // get the top five affected places according to the confirmed cases\r\n        obj = obj.splice(0,5);\r\n    \r\n        this.setState({data: obj,name:this.props.presentRegion === \"World\" ? \"Countries\" :\"States\"});\r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err);\r\n      } \r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n           <div className=\"col-xl-3 col-md-12\">\r\n              <div className=\"card\" style={{height:'360px'}}>\r\n                <div className=\"card-header\">5 Most Affected {this.state.name}</div>\r\n                <div className=\"card-body\">\r\n                  { this.state.data.map(data => ( \r\n                     <div key={data.place}>\r\n                       <span  style={{float:'left'}}>{data.name}</span>  <span style={{float:\"right\"}}>{data.cases.toLocaleString()}</span><br></br>\r\n                       <ProgressBar value={data.percentage} showValue ={false} style={{height:'5px'}} />\r\n                       <br></br>\r\n                     </div>   ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AffectedCountries;"]},"metadata":{},"sourceType":"module"}
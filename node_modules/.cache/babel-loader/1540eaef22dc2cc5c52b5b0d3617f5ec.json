{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js\";\nimport React from \"react\";\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass Rates extends React.Component {\n  constructor() {\n    super();\n  }\n\n  componentDidMount() {\n    this.structureData();\n  }\n\n  structureData() {\n    console.log(this.props.data, \"cons\");\n    let active = {},\n        recovered = {},\n        deaths = {};\n    let totalConfirmed = this.props.data.total.recovered[this.props.data.total.recovered.length - 1];\n    let totalRecovered = this.props.data.total.recovered[this.props.data.total.recovered.length - 1];\n    let totalDeaths = this.props.data.total.deaths[this.props.data.total.deaths.length - 1];\n    let totalActive = totalConfirmed - totalRecovered - totalDeaths; //find the highest active cases rate\n\n    Object.keys(this.props.data.data).forEach((x, index) => {\n      if (index == 0) {\n        active[x] = this.props.data.countries[x].confirmed[this.props.data.countries[x].confirmed.length - 1];\n        recovered[x] = this.props.data.countries[x].recovered[this.props.data.countries[x].recovered.length - 1];\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: \"360px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Highest Active Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"United States\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"blue\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"70%\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 92\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 101\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"Highest Recovery Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"India\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"green\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"50%\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 93\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 102\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Highest Death Rate\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"United States\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\",\n        color: \"red\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"40%\"))));\n  }\n\n}\n\nexport default Rates;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js"],"names":["React","ProgressBar","Rates","Component","constructor","componentDidMount","structureData","console","log","props","data","active","recovered","deaths","totalConfirmed","total","length","totalRecovered","totalDeaths","totalActive","Object","keys","forEach","x","index","countries","confirmed","render","height","color","float","fontWeight"],"mappings":"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","sourcesContent":["import  React  from \"react\";\nimport {ProgressBar} from 'primereact/progressbar';\n\n\nclass Rates extends React.Component{\n    constructor()\n    {\n        super();\n    }\n\n    componentDidMount(){\n        this.structureData();\n    }\n\n    structureData(){\n         console.log(this.props.data,\"cons\");\n         let active = {},recovered={},deaths={};\n         let totalConfirmed = this.props.data.total.recovered[this.props.data.total.recovered.length-1];\n         let totalRecovered = this.props.data.total.recovered[this.props.data.total.recovered.length-1];\n         let totalDeaths = this.props.data.total.deaths[this.props.data.total.deaths.length-1];\n\n         let totalActive = totalConfirmed-totalRecovered-totalDeaths;\n        //find the highest active cases rate\n\n        Object.keys(this.props.data.data).forEach((x,index)=>{\n                if(index==0){\n                    active[x]=this.props.data.countries[x].confirmed[this.props.data.countries[x].confirmed.length-1];\n                    recovered[x]=this.props.data.countries[x].recovered[this.props.data.countries[x].recovered.length-1];\n\n                }\n        })\n\n\n    }\n\n\n    render(){\n        return(\n            <div className=\"col-xl-3 col-md-12\">\n              <div className=\"card\" style={{height:\"360px\"}}>\n                <div className=\"card-body\">\n                    <span>Highest Active Rate</span><hr style={{color:\"blue\"}}></hr>\n                    <span style={{float:\"left\",fontWeight:\"bold\"}}>United States</span>\n                    <span style={{float:\"right\",color:\"blue\",fontWeight:\"bold\"}}>70%</span><br></br><br></br>\n                    <span>Highest Recovery Rate</span><hr></hr>\n                    <span style={{float:\"left\",fontWeight:\"bold\"}}>India</span>\n                    <span style={{float:\"right\",color:\"green\",fontWeight:\"bold\"}}>50%</span><br></br><br></br>\n                    <span>Highest Death Rate</span><hr></hr>\n                    <span style={{float:\"left\",fontWeight:\"bold\"}}>United States</span>\n                    <span style={{float:\"right\",color:\"red\",fontWeight:\"bold\"}}>40%</span>\n\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default Rates;"]},"metadata":{},"sourceType":"module"}
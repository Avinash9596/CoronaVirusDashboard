{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js\";\nimport React from 'react';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { InputText } from 'primereact/inputtext';\n\nclass tableData extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getDistrictData = async data => {\n      if (this.props.presentRegion === \"World\") return;\n      let obj = [];\n      const fetcher = await fetch(\"https://api.covid19india.org/state_district_wise.json\");\n      const response = await fetcher.json();\n      console.log(response);\n      Object.keys(response[data].districtData).forEach(x => {\n        obj.push({\n          name: x,\n          active: response[data].districtData[x].active,\n          deaths: response[data].districtData[x].deceased,\n          recovered: response[data].districtData[x].recovered,\n          cases: response[data].districtData[x].confirmed\n        });\n      });\n      await this.setState({\n        districtData: obj\n      });\n      var element = document.querySelector(\"#district\");\n      element.scrollIntoView();\n    };\n\n    this.render = () => {\n      let column, districtTable;\n      const header = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }\n      }, \"List of States\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 col-xl-3\",\n        className: \"p-datatable-globalfilter-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(InputText, {\n        width: \"300px\",\n        type: \"search\",\n        placeholder: \"Search By Place Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 89\n        }\n      })));\n\n      if (this.props.presentRegion === 'India' && this.state.districtData.length > 0) {\n        districtTable = /*#__PURE__*/React.createElement(DataTable, {\n          id: \"district\",\n          rowHover: true,\n          emptyMessage: \"No records found\",\n          responsive: true,\n          style: {\n            border: 'none'\n          },\n          header: \"- All Districts\",\n          value: this.state.districtData,\n          paginator: true,\n          rows: 10,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Column, {\n          field: \"name\",\n          body: this.dateTemplate = rowData => {\n            return /*#__PURE__*/React.createElement(\"a\", {\n              onClick: () => this.getDistrictData(rowData.name),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 75\n              }\n            }, rowData.name);\n          },\n          header: \"District\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"cases\",\n          header: \"Confirmed\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"active\",\n          header: \"Active\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"recovered\",\n          header: \"Recovered\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 10\n          }\n        }), /*#__PURE__*/React.createElement(Column, {\n          field: \"deaths\",\n          header: \"Deaths\",\n          sortable: true,\n          filter: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 10\n          }\n        }));\n      } else column = /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Country\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 22\n        }\n      });\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 datatable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        onRowClick: event => this.getDistrictData(event.data.name),\n        className: \"p-datatable-places\",\n        rowHover: true,\n        emptyMessage: \"No records found\",\n        header: header,\n        value: this.state.data,\n        responsive: true,\n        paginator: true,\n        rows: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        field: \"name\",\n        header: \"Country\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"cases\",\n        header: \"Confirmed\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"active\",\n        header: \"Active\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"recovered\",\n        header: \"Recovered\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(Column, {\n        field: \"deaths\",\n        header: \"Deaths\",\n        sortable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 18\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }), districtTable);\n    };\n\n    console.log(props);\n    this.state = {\n      data: [],\n      districtData: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let obj = [];\n    this.props.data.countries.forEach(element => {\n      let confirmed = this.props.data.data[element].confirmed;\n      let deaths = this.props.data.data[element].deaths;\n      let recovered = this.props.data.data[element].recovered;\n      obj.push({\n        \"name\": element,\n        \"cases\": confirmed[confirmed.length - 1][1],\n        \"deaths\": deaths[deaths.length - 1][1],\n        \"recovered\": recovered[recovered.length - 1][1],\n        \"active\": confirmed[confirmed.length - 1][1] - deaths[deaths.length - 1][1] - recovered[recovered.length - 1][1]\n      });\n    });\n    this.setState({\n      data: obj\n    });\n  }\n\n}\n\nexport default tableData;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/tableData.js"],"names":["React","DataTable","Column","InputText","tableData","Component","constructor","props","getDistrictData","data","presentRegion","obj","fetcher","fetch","response","json","console","log","Object","keys","districtData","forEach","x","push","name","active","deaths","deceased","recovered","cases","confirmed","setState","element","document","querySelector","scrollIntoView","render","column","districtTable","header","state","length","border","dateTemplate","rowData","event","componentDidMount","getData","countries"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {InputText} from 'primereact/inputtext'\r\n\r\n\r\n    \r\n\r\n\r\n\r\nclass tableData extends React.Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super();\r\n        console.log(props);\r\n        this.state={data:[],districtData:[]};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    getData(){\r\n        \r\n      let obj = [];\r\n      this.props.data.countries.forEach(element => {\r\n  \r\n      let confirmed = this.props.data.data[element].confirmed;\r\n      let deaths = this.props.data.data[element].deaths;\r\n      let recovered = this.props.data.data[element].recovered;\r\n\r\n      obj.push({\"name\":element,\r\n      \"cases\":confirmed[confirmed.length-1][1],\r\n      \"deaths\":deaths[deaths.length-1][1],\r\n      \"recovered\":recovered[recovered.length-1][1],\r\n      \"active\":confirmed[confirmed.length-1][1]-deaths[deaths.length-1][1]-recovered[recovered.length-1][1]})  \r\n\r\n      });    \r\n\r\n     this.setState({data:obj});\r\n    }\r\n\r\n    getDistrictData = async(data) =>{\r\n        if(this.props.presentRegion === \"World\") return;\r\n        \r\n     let obj =[];\r\n    const fetcher= await fetch(\"https://api.covid19india.org/state_district_wise.json\")\r\n    const response =await fetcher.json()\r\n    console.log(response);\r\n    Object.keys(response[data].districtData).forEach(x=>{\r\n        \r\n          obj.push({name:x,active:response[data].districtData[x].active,deaths:response[data].districtData[x].deceased,recovered:response[data].districtData[x].recovered,cases:response[data].districtData[x].confirmed})\r\n        \r\n    })\r\n\r\n    await this.setState({districtData:obj})\r\n\r\n    var element = document.querySelector(\"#district\");\r\n    element.scrollIntoView();\r\n\r\n\r\n    }\r\n\r\n    render = () =>{\r\n        let column,districtTable;\r\n            \r\n        const header = <div>\r\n        List of States\r\n        <div  className=\"col-sm-12 col-xl-3\" className=\"p-datatable-globalfilter-container\">\r\n            <InputText width=\"300px\" type=\"search\" placeholder=\"Search By Place Name\" /><i className=\"fa fa-search\"></i>\r\n        </div>\r\n    </div>\r\n        \r\n        \r\n        if(this.props.presentRegion === 'India' && this.state.districtData.length>0){\r\n         districtTable = <DataTable id=\"district\" rowHover emptyMessage=\"No records found\" responsive={true} style={{border:'none'}} header=\"- All Districts\" value={this.state.districtData}  paginator={true} rows={10}>\r\n         <Column field=\"name\"  body={this.dateTemplate=(rowData)=>{return <a onClick={() => this.getDistrictData(rowData.name)}>{rowData.name}</a>}} header=\"District\" sortable={true} filter={true} />\r\n         <Column field=\"cases\"  header=\"Confirmed\" sortable={true} filter={true} />\r\n         <Column field=\"active\" header=\"Active\" sortable={true} filter={true} />\r\n         <Column field=\"recovered\" header=\"Recovered\" sortable={true} filter={true} />\r\n         <Column field=\"deaths\" header=\"Deaths\" sortable={true} filter={true} />\r\n         </DataTable>\r\n        }\r\n        else column= <Column field=\"name\" header=\"Country\" sortable={true} />\r\n\r\n        return(\r\n            <div className=\"col-sm-12 datatable\">\r\n              <DataTable onRowClick ={(event)=>this.getDistrictData(event.data.name)} className=\"p-datatable-places\" rowHover emptyMessage=\"No records found\" header={header} value={this.state.data} responsive={true} paginator={true} rows={10}>\r\n                 <Column field=\"name\"   header=\"Country\" sortable={true} />     \r\n                 <Column field=\"cases\" header=\"Confirmed\" sortable={true}  />\r\n                 <Column field=\"active\" header=\"Active\" sortable={true}  />\r\n                 <Column field=\"recovered\" header=\"Recovered\" sortable={true}  />\r\n                 <Column field=\"deaths\" header=\"Deaths\" sortable={true}  />\r\n              </DataTable>\r\n              <br></br>\r\n              {districtTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tableData;"]},"metadata":{},"sourceType":"module"}
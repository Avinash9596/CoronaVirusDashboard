{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/ColumnGraph.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts/highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nclass ColumnGraph extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      options: {\n        chart: {\n          type: 'column',\n          height: 320\n        },\n        title: {\n          text: 'Monthly Cases Year (2020)'\n        },\n        subtitle: {\n          text: 'Coronovirus Cases    '\n        },\n        xAxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        credits: {\n          enabled: false\n        },\n        yAxis: {\n          min: 100,\n          title: {\n            text: 'Cases'\n          }\n        },\n        series: [{\n          name: 'Cases',\n          data: [1200, 5009, 19000, 30000, 39900, 47800, 79333]\n        }]\n      }\n    }; //this.getData(props.presentRegion)\n  }\n\n  componentWillReceiveProps(props) {\n    this.getData(props.presentRegion);\n  }\n\n  getData(region) {\n    if (region !== 'World') {\n      var url = \"https://api.covid19api.com/dayone/country/\" + region + \"/status/confirmed\";\n      fetch(url).then(response => response.json()).then(data => {\n        //   this.pieData= data;  \n        this.structureData(data);\n      });\n    }\n  }\n\n  structureData(data) {\n    let i = 0,\n        obj = [],\n        month = 1;\n    console.log(data);\n    data.forEach((element, index) => {\n      if (element.Date.split(\"-\")[1] != month || data.length == index + 1) {\n        obj[i] = data[index - 1].Cases;\n        i++;\n      }\n\n      month = element.Date.split(\"-\")[1];\n    });\n    console.log(obj, \"obj\");\n    this.setState({\n      options: {\n        chart: {\n          type: 'column',\n          height: 320\n        },\n        title: {\n          text: 'Monthly Cases Year (2020)'\n        },\n        subtitle: {\n          text: 'Coronovirus Cases    '\n        },\n        xAxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        credits: {\n          enabled: false\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: 'Cases'\n          }\n        },\n        series: [{\n          name: 'Cases',\n          data: obj\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      highcharts: Highcharts,\n      options: this.state.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}\n\nexport default ColumnGraph;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/ColumnGraph.js"],"names":["React","Highcharts","HighchartsReact","ColumnGraph","Component","constructor","props","state","options","chart","type","height","title","text","subtitle","xAxis","categories","credits","enabled","yAxis","min","series","name","data","componentWillReceiveProps","getData","presentRegion","region","url","fetch","then","response","json","structureData","i","obj","month","console","log","forEach","element","index","Date","split","length","Cases","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts/highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\n\r\nclass ColumnGraph extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super();\r\n        this.state={\r\n        options: {\r\n            chart: {\r\n                type: 'column',\r\n                height:320,\r\n            },\r\n            title: {\r\n                text: 'Monthly Cases Year (2020)'\r\n            },\r\n            subtitle: {\r\n                text: 'Coronovirus Cases    '\r\n            },\r\n            xAxis: {\r\n                categories: [\r\n                    'Jan',\r\n                    'Feb',\r\n                    'Mar',\r\n                    'Apr',\r\n                    'May',\r\n                    'Jun',\r\n                    'Jul',\r\n                    'Aug',\r\n                    'Sep',\r\n                    'Oct',\r\n                    'Nov',\r\n                    'Dec'\r\n                ],\r\n            },\r\n            credits:{\r\n                enabled:false\r\n            },\r\n            yAxis: {\r\n                min: 100,\r\n                title: {\r\n                    text: 'Cases'\r\n                }\r\n            },\r\n            series: [{\r\n                name:'Cases',\r\n                data: [1200,5009,19000,30000,39900, 47800, 79333]\r\n        \r\n            }]\r\n        }\r\n     };\r\n     //this.getData(props.presentRegion)\r\n    }\r\n\r\n    componentWillReceiveProps(props){\r\n     \r\n      this.getData(props.presentRegion);\r\n\r\n    }\r\n\r\n    getData(region)\r\n    {\r\n        if(region !== 'World'){\r\n        var url = \"https://api.covid19api.com/dayone/country/\"+region+\"/status/confirmed\";\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {      \r\n        //   this.pieData= data;  \r\n            this.structureData(data); \r\n        });\r\n     }\r\n    }\r\n\r\n    structureData(data)\r\n    { \r\n        let i =0 ,obj=[],month=1;\r\n        console.log(data);\r\n        data.forEach((element,index) => {\r\n\r\n            if(element.Date.split(\"-\")[1] != month || (data.length == index+1)){\r\n                obj[i] = data[index-1].Cases;\r\n                i++;\r\n            } \r\n            month=element.Date.split(\"-\")[1];\r\n           \r\n        });\r\n\r\n        console.log(obj,\"obj\");\r\n\r\n        this.setState({\r\n            options: {\r\n                chart: {\r\n                    type: 'column',\r\n                    height:320,\r\n                },\r\n                title: {\r\n                    text: 'Monthly Cases Year (2020)'\r\n                },\r\n                subtitle: {\r\n                    text: 'Coronovirus Cases    '\r\n                },\r\n                xAxis: {\r\n                    categories: [\r\n                        'Jan',\r\n                        'Feb',\r\n                        'Mar',\r\n                        'Apr',\r\n                        'May',\r\n                        'Jun',\r\n                        'Jul',\r\n                        'Aug',\r\n                        'Sep',\r\n                        'Oct',\r\n                        'Nov',\r\n                        'Dec'\r\n                    ],\r\n                },\r\n                credits:{\r\n                    enabled:false\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: 'Cases'\r\n                    }\r\n                },\r\n                series: [{\r\n                    name:'Cases',\r\n                    data: obj\r\n            \r\n                }]\r\n            }\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <HighchartsReact highcharts={Highcharts} options={this.state.options} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColumnGraph;"]},"metadata":{},"sourceType":"module"}
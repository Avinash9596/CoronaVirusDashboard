{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js\";\nimport React from \"react\";\nimport { ProgressBar } from 'primereact/progressbar';\n\nclass Rates extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      active: {},\n      recovered: {},\n      deaths: {}\n    };\n  }\n\n  componentDidMount() {\n    this.structureData();\n  }\n\n  async structureData() {\n    let data = []; //find the highest active cases rate\n\n    Object.keys(this.props.data.data).forEach((x, index) => {\n      if (index == 0) {\n        data.push({\n          name: x,\n          percent: (this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] - this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] - this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1]) / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100\n        }, {\n          name: x,\n          percent: this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100\n        }, {\n          name: x,\n          percent: this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100\n        });\n      } else {\n        if (data[0].percent < (this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] - this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] - this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1]) / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100) {\n          data[0].name = x;\n          data[0].percent = (this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] - this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] - this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1]) / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100;\n        }\n\n        if (data[1].percent < this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100) {\n          data[1].name = x;\n          data[1].percent = this.props.data.data[x].recovered[this.props.data.data[x].recovered.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100;\n        }\n\n        if (data[2].percent < this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100) {\n          data[2].name = x;\n          data[2].percent = this.props.data.data[x].deaths[this.props.data.data[x].deaths.length - 1][1] / this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length - 1][1] * 100;\n        }\n      }\n    });\n    data[0].percent = data[0].percent.toFixed(2);\n    data[1].percent = data[1].percent.toFixed(2);\n    data[2].percent = data[2].percent.toFixed(2);\n    data[1].name = data[1].name.split(\"and\")[1];\n    await this.setState({\n      active: data[0],\n      recovered: data[1],\n      deaths: data[2]\n    });\n    console.log(this.state.active.name);\n  }\n\n  render() {\n    const {\n      active,\n      recovered,\n      deaths\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-3 col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        height: \"360px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }, \"Highest Active Rate\"), /*#__PURE__*/React.createElement(ProgressBar, {\n      className: \"active\",\n      value: active.percent,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }, active.name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, active.percent, \"%\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Highest Recovery Rate\"), /*#__PURE__*/React.createElement(ProgressBar, {\n      className: \"recovered\",\n      style: {\n        background: \"green !important\"\n      },\n      value: active.percent,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }\n    }, recovered.name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, recovered.percent, \"%\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Highest Death Rate\"), /*#__PURE__*/React.createElement(ProgressBar, {\n      className: \"deaths\",\n      value: active.percent,\n      showValue: false,\n      style: {\n        height: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, deaths.name), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }, deaths.percent, \"%\")))));\n  }\n\n}\n\nexport default Rates;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/Rates.js"],"names":["React","ProgressBar","Rates","Component","constructor","props","state","active","recovered","deaths","componentDidMount","structureData","data","Object","keys","forEach","x","index","push","name","percent","confirmed","length","toFixed","split","setState","console","log","render","height","float","background"],"mappings":"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","sourcesContent":["import  React  from \"react\";\nimport {ProgressBar} from 'primereact/progressbar';\n\n\n\nclass Rates extends React.Component{\n    constructor(props)\n    {\n        super();\n        this.state={active:{},recovered:{},deaths:{}}\n    \n    }\n\n    componentDidMount(){\n        this.structureData();\n    }\n\n   async structureData(){\n         let data=[];\n\n        //find the highest active cases rate\n        Object.keys(this.props.data.data).forEach((x,index)=>{\n            if(index==0){\n                data.push(\n                {name:x,percent:((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]-this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]-this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1])/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100},\n                {name:x,percent:(this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100},\n                {name:x,percent:(this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100}\n                )\n            }\n            else{\n                if(data[0].percent< ((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]-this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]-this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1])/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100){\n                    data[0].name=x;\n                    data[0].percent=((this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1]-this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]-this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1])/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100\n                }\n                if(data[1].percent< (this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100){\n                    data[1].name=x;\n                    data[1].percent=(this.props.data.data[x].recovered[this.props.data.data[x].recovered.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100\n                }\n                if(data[2].percent< (this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100){\n                    data[2].name=x;\n                    data[2].percent=(this.props.data.data[x].deaths[this.props.data.data[x].deaths.length-1][1]/this.props.data.data[x].confirmed[this.props.data.data[x].confirmed.length-1][1])*100\n                }\n            }\n        });\n        data[0].percent=data[0].percent.toFixed(2);\n        data[1].percent=data[1].percent.toFixed(2);\n        data[2].percent=data[2].percent.toFixed(2);\n        data[1].name= data[1].name.split(\"and\")[1];\n        await this.setState({active:data[0],recovered:data[1],deaths:data[2]});\n        console.log(this.state.active.name);\n\n    }\n\n\n    render(){\n        const {active,recovered,deaths} = this.state;  \n        return(\n            <div className=\"col-xl-3 col-md-12\">\n              <div className=\"card\" style={{height:\"360px\"}}>\n                <div className=\"card-body\">\n                    {/* <span style={{float:\"left\"}}>Highest Active Rate</span>\n                    <hr style={{border:\"2px solid rgb(124, 181, 236)\"}}></hr>\n                    <span style={{float:\"left\"}}>{active.name}</span>\n                    <span style={{float:\"right\",color:\"#ef3c3c\"}}>{active.percent}%</span><br></br><br></br>\n                    <hr></hr>\n                    <span style={{float:\"left\"}}>Highest Recovery Rate</span>\n                    <hr style={{border:\"2px solid #009933\"}}></hr>\n                    <span style={{float:\"left\"}}>{recovered.name}</span>\n                    <span style={{float:\"right\",color:\"#009933\"}}>{recovered.percent}%</span><br></br><br></br><br></br>\n                    <hr></hr>\n                    <span style={{float:\"left\"}}>Highest Death Rate</span>\n                    <hr style={{border:\"2px solid red\"}}></hr>\n                    <span style={{float:\"left\"}}>{deaths.name}</span>\n                    <span style={{float:\"right\",color:\"red\"}}>{deaths.percent}%</span> */}\n                    <div>\n                      <h6>Highest Active Rate</h6>\n                      <ProgressBar className=\"active\" value={active.percent} showValue ={false} style={{height:'5px'}} />\n                      <span style={{float:\"left\"}}>{active.name}</span>\n                      <span style={{float:\"right\"}}>{active.percent}%</span>\n\n                    </div><br></br><br></br><hr></hr>\n                    <div>\n                    <h6>Highest Recovery Rate</h6>\n                      <ProgressBar className=\"recovered\" style={{background:\"green !important\"}} value={active.percent} showValue ={false} style={{height:'5px'}} />\n                      <span style={{float:\"left\"}}>{recovered.name}</span>\n                      <span style={{float:\"right\"}}>{recovered.percent}%</span>\n                    </div>\n                    <br></br><br></br><hr></hr>\n                    <div>\n                    <h6>Highest Death Rate</h6>\n                      <ProgressBar className=\"deaths\" value={active.percent} showValue ={false} style={{height:'5px'}} />\n                      <span style={{float:\"left\"}}>{deaths.name}</span>\n                      <span style={{float:\"right\"}}>{deaths.percent}%</span>\n\n                    </div>\n\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\n\nexport default Rates;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from \"highcharts/modules/map\";\nimport proj4 from \"proj4\";\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\nimport code from \"./../countrycordinates.json\";\nhighchartsMap(Highcharts);\n\nif (typeof window !== \"undefined\") {\n  window.proj4 = window.proj4 || proj4;\n}\n\nclass CoronoMap extends React.Component {\n  constructor(props) {\n    super();\n    console.log(code, \"codes\");\n    let mapdata;\n    mapdata = props.presentRegion === \"World\" ? world : india;\n    this.state = {\n      mapOptions: {\n        chart: {\n          map: 'countries/ie/ie-all',\n          height: 320\n        },\n        title: {\n          text: props.presentRegion + ' Map Plot With Cases'\n        },\n        credits: {\n          enabled: false\n        },\n        mapNavigation: {\n          enabled: true\n        },\n        tooltip: {\n          headerFormat: '',\n          pointFormat: '<b>{point.country}</b><br>Active:{point.z}</b>'\n        },\n        series: [{\n          // Use the gb-all map with no data as a basemap\n          name: 'Basemap',\n          mapData: mapdata,\n          borderColor: '#A0A0A0',\n          nullColor: 'rgba(200, 200, 200, 0.3)',\n          showInLegend: false\n        }, {\n          // Specify points using lat/lon\n          type: 'mapbubble',\n          name: props.presentRegion === \"World\" ? 'Countries' : 'States',\n          color: '#4169E1',\n          data: [],\n          cursor: 'pointer',\n          point: {\n            events: {\n              click: function () {\n                console.log(this.keyword);\n              }\n            }\n          }\n        }]\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xl-9 col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      constructorType: 'mapChart',\n      highcharts: Highcharts,\n      options: this.state.mapOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default CoronoMap;","map":{"version":3,"sources":["/Users/matchajanardhanarao/Documents/coronodashboard/src/components/CoronaMap.js"],"names":["React","Highcharts","HighchartsReact","highchartsMap","proj4","world","india","code","window","CoronoMap","Component","constructor","props","console","log","mapdata","presentRegion","state","mapOptions","chart","map","height","title","text","credits","enabled","mapNavigation","tooltip","headerFormat","pointFormat","series","name","mapData","borderColor","nullColor","showInLegend","type","color","data","cursor","point","events","click","keyword","render","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport proj4 from \"proj4\";\r\nimport world from \"@highcharts/map-collection/custom/world.geo.json\";\r\nimport india from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\nimport code from \"./../countrycordinates.json\";\r\n\r\nhighchartsMap(Highcharts);\r\n\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    window.proj4 = window.proj4 || proj4;\r\n  }\r\n\r\n\r\n  \r\n\r\nclass CoronoMap extends React.Component{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    console.log(code,\"codes\");\r\n    let mapdata;\r\n    mapdata = props.presentRegion === \"World\" ? world:india\r\n    this.state =({\r\n      mapOptions:{\r\n        chart: {\r\n          map: 'countries/ie/ie-all',\r\n          height:320\r\n        },\r\n        title: {\r\n          text:props.presentRegion+' Map Plot With Cases'\r\n        },\r\n        credits: {\r\n            enabled: false\r\n        },\r\n        mapNavigation: {\r\n          enabled: true\r\n        },\r\n      tooltip: {\r\n          headerFormat: '',\r\n          pointFormat: '<b>{point.country}</b><br>Active:{point.z}</b>'\r\n        },\r\n        series: [{\r\n          // Use the gb-all map with no data as a basemap\r\n          name: 'Basemap',\r\n          mapData: mapdata,\r\n          borderColor: '#A0A0A0',\r\n          nullColor: 'rgba(200, 200, 200, 0.3)',\r\n          showInLegend: false\r\n        }, {\r\n          // Specify points using lat/lon\r\n          type: 'mapbubble',\r\n          name: props.presentRegion === \"World\"?'Countries':'States',\r\n          color: '#4169E1',\r\n          data: [],\r\n          cursor: 'pointer',\r\n          point: {\r\n            events: {\r\n              click: function() {\r\n                console.log(this.keyword);\r\n              }\r\n            }\r\n          }\r\n        }]\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"col-xl-9 col-md-8\">\r\n              <div className=\"card\" style={{marginBottom:'30px'}}>\r\n                 <div className=\"card-body\">\r\n                    <HighchartsReact\r\n   constructorType ={'mapChart'}\r\n   highcharts={Highcharts}\r\n   options={this.state.mapOptions}\r\n/>\r\n                 </div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default CoronoMap;"]},"metadata":{},"sourceType":"module"}